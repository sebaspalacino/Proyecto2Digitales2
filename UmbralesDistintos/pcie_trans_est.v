/* Generated by Yosys 0.9 (git sha1 1979e0b) */

(* dynports =  1  *)
(* src = "demux_t_est.v:1" *)
module \$paramod\demux_t_est\BITNUMBER=6 (clk, reset, Mux_out, Mux_valid, data_D0, data_D1, push_D0, push_D1);
  (* src = "demux_t_est.v:12" *)
  wire [5:0] _00_;
  (* src = "demux_t_est.v:12" *)
  wire [5:0] _01_;
  (* src = "demux_t_est.v:12" *)
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  (* src = "demux_t_est.v:4" *)
  input [5:0] Mux_out;
  (* src = "demux_t_est.v:5" *)
  input Mux_valid;
  (* src = "demux_t_est.v:2" *)
  input clk;
  (* src = "demux_t_est.v:6" *)
  output [5:0] data_D0;
  (* src = "demux_t_est.v:7" *)
  output [5:0] data_D1;
  (* src = "demux_t_est.v:8" *)
  output push_D0;
  (* src = "demux_t_est.v:9" *)
  output push_D1;
  (* src = "demux_t_est.v:3" *)
  input reset;
  NOT _13_ (
    .A(Mux_out[4]),
    .Y(_03_)
  );
  NOT _14_ (
    .A(Mux_out[0]),
    .Y(_04_)
  );
  NOT _15_ (
    .A(Mux_out[1]),
    .Y(_05_)
  );
  NOT _16_ (
    .A(Mux_out[2]),
    .Y(_06_)
  );
  NOT _17_ (
    .A(Mux_out[3]),
    .Y(_07_)
  );
  NOT _18_ (
    .A(Mux_out[5]),
    .Y(_08_)
  );
  NOT _19_ (
    .A(Mux_valid),
    .Y(_09_)
  );
  NOR _20_ (
    .A(reset),
    .B(_09_),
    .Y(_10_)
  );
  NAND _21_ (
    .A(_03_),
    .B(_10_),
    .Y(_11_)
  );
  NOT _22_ (
    .A(_11_),
    .Y(_02_)
  );
  NAND _23_ (
    .A(Mux_out[4]),
    .B(_10_),
    .Y(_12_)
  );
  NOT _24_ (
    .A(_12_),
    .Y(_01_[4])
  );
  NOR _25_ (
    .A(_04_),
    .B(_12_),
    .Y(_01_[0])
  );
  NOR _26_ (
    .A(_05_),
    .B(_12_),
    .Y(_01_[1])
  );
  NOR _27_ (
    .A(_06_),
    .B(_12_),
    .Y(_01_[2])
  );
  NOR _28_ (
    .A(_07_),
    .B(_12_),
    .Y(_01_[3])
  );
  NOR _29_ (
    .A(_08_),
    .B(_12_),
    .Y(_01_[5])
  );
  NOR _30_ (
    .A(_04_),
    .B(_11_),
    .Y(_00_[0])
  );
  NOR _31_ (
    .A(_05_),
    .B(_11_),
    .Y(_00_[1])
  );
  NOR _32_ (
    .A(_06_),
    .B(_11_),
    .Y(_00_[2])
  );
  NOR _33_ (
    .A(_07_),
    .B(_11_),
    .Y(_00_[3])
  );
  NOR _34_ (
    .A(_08_),
    .B(_11_),
    .Y(_00_[5])
  );
  (* src = "demux_t_est.v:12" *)
  DFF _35_ (
    .C(clk),
    .D(_02_),
    .Q(push_D0)
  );
  (* src = "demux_t_est.v:12" *)
  DFF _36_ (
    .C(clk),
    .D(_01_[4]),
    .Q(push_D1)
  );
  (* src = "demux_t_est.v:12" *)
  DFF _37_ (
    .C(clk),
    .D(_00_[0]),
    .Q(data_D0[0])
  );
  (* src = "demux_t_est.v:12" *)
  DFF _38_ (
    .C(clk),
    .D(_00_[1]),
    .Q(data_D0[1])
  );
  (* src = "demux_t_est.v:12" *)
  DFF _39_ (
    .C(clk),
    .D(_00_[2]),
    .Q(data_D0[2])
  );
  (* src = "demux_t_est.v:12" *)
  DFF _40_ (
    .C(clk),
    .D(_00_[3]),
    .Q(data_D0[3])
  );
  (* src = "demux_t_est.v:12" *)
  DFF _41_ (
    .C(clk),
    .D(_00_[5]),
    .Q(data_D0[5])
  );
  (* src = "demux_t_est.v:12" *)
  DFF _42_ (
    .C(clk),
    .D(_01_[0]),
    .Q(data_D1[0])
  );
  (* src = "demux_t_est.v:12" *)
  DFF _43_ (
    .C(clk),
    .D(_01_[1]),
    .Q(data_D1[1])
  );
  (* src = "demux_t_est.v:12" *)
  DFF _44_ (
    .C(clk),
    .D(_01_[2]),
    .Q(data_D1[2])
  );
  (* src = "demux_t_est.v:12" *)
  DFF _45_ (
    .C(clk),
    .D(_01_[3]),
    .Q(data_D1[3])
  );
  (* src = "demux_t_est.v:12" *)
  DFF _46_ (
    .C(clk),
    .D(_01_[5]),
    .Q(data_D1[5])
  );
  assign _00_[4] = 1'h0;
  assign data_D0[4] = 1'h0;
  assign data_D1[4] = push_D1;
endmodule

(* dynports =  1  *)
(* src = "fifo_est.v:3" *)
module \$paramod\fifo_est\BITNUMBER=6\LENGTH=16 (Fifo_Data_in, clk, reset, Fifo_rd, Fifo_wr, Umbral, Fifo_full, Fifo_empty, Fifo_Data_out, Fifo_rd_error, Fifo_wr_error, Fifo_error, almost_full, almost_empty, can_pop, pause, valid_read, cont, conor, test);
  (* src = "fifo_est.v:33" *)
  wire [5:0] _000_;
  (* src = "fifo_est.v:33" *)
  wire _001_;
  (* src = "fifo_est.v:33" *)
  wire _002_;
  (* src = "fifo_est.v:33" *)
  wire _003_;
  (* src = "fifo_est.v:33" *)
  wire _004_;
  (* src = "fifo_est.v:33" *)
  wire _005_;
  (* src = "fifo_est.v:33" *)
  wire _006_;
  (* src = "fifo_est.v:33" *)
  wire [5:0] _007_;
  (* src = "fifo_est.v:33" *)
  wire [5:0] _008_;
  (* src = "fifo_est.v:33" *)
  wire _009_;
  (* src = "fifo_est.v:33" *)
  wire _010_;
  (* src = "fifo_est.v:33" *)
  wire [3:0] _011_;
  (* src = "fifo_est.v:33" *)
  wire [8:0] _012_;
  (* src = "fifo_est.v:33" *)
  wire _013_;
  (* src = "fifo_est.v:33" *)
  wire _014_;
  (* src = "fifo_est.v:33" *)
  wire [3:0] _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  wire _197_;
  wire _198_;
  wire _199_;
  wire _200_;
  wire _201_;
  wire _202_;
  wire _203_;
  wire _204_;
  wire _205_;
  wire _206_;
  wire _207_;
  wire _208_;
  wire _209_;
  wire _210_;
  wire _211_;
  wire _212_;
  wire _213_;
  wire _214_;
  wire _215_;
  (* src = "fifo_est.v:5" *)
  input [5:0] Fifo_Data_in;
  (* src = "fifo_est.v:13" *)
  output [5:0] Fifo_Data_out;
  (* src = "fifo_est.v:12" *)
  output Fifo_empty;
  (* src = "fifo_est.v:16" *)
  output Fifo_error;
  (* src = "fifo_est.v:11" *)
  output Fifo_full;
  (* src = "fifo_est.v:8" *)
  input Fifo_rd;
  (* src = "fifo_est.v:14" *)
  output Fifo_rd_error;
  (* src = "fifo_est.v:9" *)
  input Fifo_wr;
  (* src = "fifo_est.v:15" *)
  output Fifo_wr_error;
  (* src = "fifo_est.v:10" *)
  input [3:0] Umbral;
  (* src = "fifo_est.v:18" *)
  output almost_empty;
  (* src = "fifo_est.v:17" *)
  output almost_full;
  (* src = "fifo_est.v:19" *)
  output can_pop;
  (* src = "fifo_est.v:6" *)
  input clk;
  (* src = "fifo_est.v:23" *)
  output [5:0] conor;
  (* src = "fifo_est.v:22" *)
  output [5:0] cont;
  (* src = "fifo_est.v:29" *)
  wire [5:0] contador;
  (* src = "fifo_est.v:20" *)
  output pause;
  (* src = "fifo_est.v:31" *)
  wire [5:0] q0;
  (* src = "fifo_est.v:30" *)
  wire [5:0] q1;
  (* src = "fifo_est.v:27" *)
  wire q_rd;
  (* src = "fifo_est.v:27" *)
  wire q_wt;
  (* src = "fifo_est.v:28" *)
  wire [3:0] rd_ptr;
  (* src = "fifo_est.v:7" *)
  input reset;
  (* src = "fifo_est.v:24" *)
  output [8:0] test;
  (* src = "fifo_est.v:27" *)
  wire v1;
  (* src = "fifo_est.v:21" *)
  output valid_read;
  (* src = "fifo_est.v:28" *)
  wire [3:0] wr_ptr;
  NOT _216_ (
    .A(Fifo_empty),
    .Y(_210_)
  );
  NOT _217_ (
    .A(Fifo_full),
    .Y(_211_)
  );
  NOT _218_ (
    .A(Fifo_wr),
    .Y(_212_)
  );
  NOT _219_ (
    .A(Fifo_rd),
    .Y(_213_)
  );
  NOT _220_ (
    .A(reset),
    .Y(_214_)
  );
  NOT _221_ (
    .A(conor[0]),
    .Y(_215_)
  );
  NOT _222_ (
    .A(conor[1]),
    .Y(_016_)
  );
  NOT _223_ (
    .A(conor[2]),
    .Y(_017_)
  );
  NOT _224_ (
    .A(conor[3]),
    .Y(_018_)
  );
  NOT _225_ (
    .A(conor[4]),
    .Y(_019_)
  );
  NOT _226_ (
    .A(conor[5]),
    .Y(_020_)
  );
  NOT _227_ (
    .A(wr_ptr[1]),
    .Y(_021_)
  );
  NOT _228_ (
    .A(wr_ptr[3]),
    .Y(_022_)
  );
  NOT _229_ (
    .A(Fifo_Data_in[0]),
    .Y(_023_)
  );
  NOT _230_ (
    .A(Fifo_Data_in[1]),
    .Y(_024_)
  );
  NOT _231_ (
    .A(Fifo_Data_in[2]),
    .Y(_025_)
  );
  NOT _232_ (
    .A(Fifo_Data_in[3]),
    .Y(_026_)
  );
  NOT _233_ (
    .A(Fifo_Data_in[4]),
    .Y(_027_)
  );
  NOT _234_ (
    .A(Fifo_Data_in[5]),
    .Y(_028_)
  );
  NOT _235_ (
    .A(rd_ptr[1]),
    .Y(_029_)
  );
  NOT _236_ (
    .A(rd_ptr[3]),
    .Y(_030_)
  );
  NOT _237_ (
    .A(q1[0]),
    .Y(_031_)
  );
  NOT _238_ (
    .A(q1[1]),
    .Y(_032_)
  );
  NOT _239_ (
    .A(q1[2]),
    .Y(_033_)
  );
  NOT _240_ (
    .A(q1[3]),
    .Y(_034_)
  );
  NOT _241_ (
    .A(q1[4]),
    .Y(_035_)
  );
  NOT _242_ (
    .A(q1[5]),
    .Y(_036_)
  );
  NOT _243_ (
    .A(v1),
    .Y(_037_)
  );
  NOT _244_ (
    .A(Umbral[0]),
    .Y(_038_)
  );
  NOT _245_ (
    .A(Umbral[1]),
    .Y(_039_)
  );
  NOT _246_ (
    .A(Umbral[2]),
    .Y(_040_)
  );
  NOT _247_ (
    .A(Umbral[3]),
    .Y(_041_)
  );
  NOR _248_ (
    .A(Fifo_empty),
    .B(_213_),
    .Y(_042_)
  );
  NAND _249_ (
    .A(_210_),
    .B(Fifo_rd),
    .Y(_043_)
  );
  NOR _250_ (
    .A(conor[0]),
    .B(_043_),
    .Y(_044_)
  );
  NAND _251_ (
    .A(_215_),
    .B(_042_),
    .Y(_045_)
  );
  NOR _252_ (
    .A(conor[1]),
    .B(_045_),
    .Y(_046_)
  );
  NAND _253_ (
    .A(_016_),
    .B(_044_),
    .Y(_047_)
  );
  NOR _254_ (
    .A(conor[2]),
    .B(_047_),
    .Y(_048_)
  );
  NAND _255_ (
    .A(_017_),
    .B(_046_),
    .Y(_049_)
  );
  NOR _256_ (
    .A(conor[3]),
    .B(_049_),
    .Y(_050_)
  );
  NAND _257_ (
    .A(_018_),
    .B(_048_),
    .Y(_051_)
  );
  NOR _258_ (
    .A(conor[4]),
    .B(_051_),
    .Y(_052_)
  );
  NAND _259_ (
    .A(_019_),
    .B(_050_),
    .Y(_053_)
  );
  NOR _260_ (
    .A(_019_),
    .B(_050_),
    .Y(_054_)
  );
  NAND _261_ (
    .A(conor[4]),
    .B(_051_),
    .Y(_055_)
  );
  NOR _262_ (
    .A(_052_),
    .B(_054_),
    .Y(_056_)
  );
  NAND _263_ (
    .A(_053_),
    .B(_055_),
    .Y(_057_)
  );
  NOR _264_ (
    .A(_018_),
    .B(_048_),
    .Y(_058_)
  );
  NAND _265_ (
    .A(conor[3]),
    .B(_049_),
    .Y(_059_)
  );
  NOR _266_ (
    .A(_050_),
    .B(_058_),
    .Y(_060_)
  );
  NAND _267_ (
    .A(_051_),
    .B(_059_),
    .Y(_061_)
  );
  NOR _268_ (
    .A(_017_),
    .B(_046_),
    .Y(_062_)
  );
  NAND _269_ (
    .A(conor[2]),
    .B(_047_),
    .Y(_063_)
  );
  NOR _270_ (
    .A(_048_),
    .B(_062_),
    .Y(_064_)
  );
  NAND _271_ (
    .A(_049_),
    .B(_063_),
    .Y(_065_)
  );
  NOR _272_ (
    .A(_016_),
    .B(_044_),
    .Y(_066_)
  );
  NAND _273_ (
    .A(conor[1]),
    .B(_045_),
    .Y(_067_)
  );
  NOR _274_ (
    .A(_046_),
    .B(_066_),
    .Y(_068_)
  );
  NAND _275_ (
    .A(_047_),
    .B(_067_),
    .Y(_069_)
  );
  NOR _276_ (
    .A(Fifo_full),
    .B(_212_),
    .Y(_070_)
  );
  NAND _277_ (
    .A(_211_),
    .B(Fifo_wr),
    .Y(_071_)
  );
  NOR _278_ (
    .A(_215_),
    .B(_042_),
    .Y(_072_)
  );
  NAND _279_ (
    .A(conor[0]),
    .B(_043_),
    .Y(_073_)
  );
  NOR _280_ (
    .A(_044_),
    .B(_072_),
    .Y(_074_)
  );
  NAND _281_ (
    .A(_045_),
    .B(_073_),
    .Y(_075_)
  );
  NOR _282_ (
    .A(_071_),
    .B(_074_),
    .Y(_076_)
  );
  NAND _283_ (
    .A(_070_),
    .B(_075_),
    .Y(_077_)
  );
  NOR _284_ (
    .A(_068_),
    .B(_077_),
    .Y(_078_)
  );
  NAND _285_ (
    .A(_069_),
    .B(_076_),
    .Y(_079_)
  );
  NOR _286_ (
    .A(_064_),
    .B(_079_),
    .Y(_080_)
  );
  NAND _287_ (
    .A(_065_),
    .B(_078_),
    .Y(_081_)
  );
  NOR _288_ (
    .A(_060_),
    .B(_081_),
    .Y(_082_)
  );
  NAND _289_ (
    .A(_061_),
    .B(_080_),
    .Y(_083_)
  );
  NOR _290_ (
    .A(_056_),
    .B(_083_),
    .Y(_084_)
  );
  NAND _291_ (
    .A(_057_),
    .B(_082_),
    .Y(_085_)
  );
  NOR _292_ (
    .A(conor[5]),
    .B(_052_),
    .Y(_086_)
  );
  NAND _293_ (
    .A(_020_),
    .B(_053_),
    .Y(_087_)
  );
  NOR _294_ (
    .A(_020_),
    .B(_053_),
    .Y(_088_)
  );
  NAND _295_ (
    .A(conor[5]),
    .B(_052_),
    .Y(_089_)
  );
  NOR _296_ (
    .A(_086_),
    .B(_088_),
    .Y(_090_)
  );
  NAND _297_ (
    .A(_087_),
    .B(_089_),
    .Y(_091_)
  );
  NAND _298_ (
    .A(_085_),
    .B(_090_),
    .Y(_092_)
  );
  NAND _299_ (
    .A(_084_),
    .B(_091_),
    .Y(_093_)
  );
  NAND _300_ (
    .A(_092_),
    .B(_093_),
    .Y(cont[5])
  );
  NOT _301_ (
    .A(cont[5]),
    .Y(_094_)
  );
  NAND _302_ (
    .A(_056_),
    .B(_083_),
    .Y(_095_)
  );
  NAND _303_ (
    .A(_085_),
    .B(_095_),
    .Y(_096_)
  );
  NOT _304_ (
    .A(_096_),
    .Y(cont[4])
  );
  NOR _305_ (
    .A(_070_),
    .B(_075_),
    .Y(_097_)
  );
  NOR _306_ (
    .A(_076_),
    .B(_097_),
    .Y(cont[0])
  );
  NOT _307_ (
    .A(cont[0]),
    .Y(_098_)
  );
  NAND _308_ (
    .A(_068_),
    .B(_077_),
    .Y(_099_)
  );
  NAND _309_ (
    .A(_079_),
    .B(_099_),
    .Y(_100_)
  );
  NOT _310_ (
    .A(_100_),
    .Y(cont[1])
  );
  NAND _311_ (
    .A(_064_),
    .B(_079_),
    .Y(_101_)
  );
  NAND _312_ (
    .A(_081_),
    .B(_101_),
    .Y(_102_)
  );
  NOT _313_ (
    .A(_102_),
    .Y(cont[2])
  );
  NAND _314_ (
    .A(_060_),
    .B(_081_),
    .Y(_103_)
  );
  NAND _315_ (
    .A(_083_),
    .B(_103_),
    .Y(_104_)
  );
  NOT _316_ (
    .A(_104_),
    .Y(cont[3])
  );
  NAND _317_ (
    .A(wr_ptr[0]),
    .B(_070_),
    .Y(_105_)
  );
  NOR _318_ (
    .A(wr_ptr[0]),
    .B(_070_),
    .Y(_106_)
  );
  NOR _319_ (
    .A(reset),
    .B(_106_),
    .Y(_107_)
  );
  NAND _320_ (
    .A(_105_),
    .B(_107_),
    .Y(_108_)
  );
  NOT _321_ (
    .A(_108_),
    .Y(_015_[0])
  );
  NOR _322_ (
    .A(_021_),
    .B(_105_),
    .Y(_109_)
  );
  NAND _323_ (
    .A(_021_),
    .B(_105_),
    .Y(_110_)
  );
  NAND _324_ (
    .A(_214_),
    .B(_110_),
    .Y(_111_)
  );
  NOR _325_ (
    .A(_109_),
    .B(_111_),
    .Y(_015_[1])
  );
  NAND _326_ (
    .A(wr_ptr[2]),
    .B(_109_),
    .Y(_112_)
  );
  NOR _327_ (
    .A(wr_ptr[2]),
    .B(_109_),
    .Y(_113_)
  );
  NOR _328_ (
    .A(reset),
    .B(_113_),
    .Y(_114_)
  );
  NAND _329_ (
    .A(_112_),
    .B(_114_),
    .Y(_115_)
  );
  NOT _330_ (
    .A(_115_),
    .Y(_015_[2])
  );
  NOR _331_ (
    .A(_022_),
    .B(_112_),
    .Y(_116_)
  );
  NAND _332_ (
    .A(_022_),
    .B(_112_),
    .Y(_117_)
  );
  NAND _333_ (
    .A(_214_),
    .B(_117_),
    .Y(_118_)
  );
  NOR _334_ (
    .A(_116_),
    .B(_118_),
    .Y(_015_[3])
  );
  NOR _335_ (
    .A(q0[0]),
    .B(_070_),
    .Y(_119_)
  );
  NAND _336_ (
    .A(_023_),
    .B(_070_),
    .Y(_120_)
  );
  NAND _337_ (
    .A(_214_),
    .B(_120_),
    .Y(_121_)
  );
  NOR _338_ (
    .A(_119_),
    .B(_121_),
    .Y(_008_[0])
  );
  NOR _339_ (
    .A(q0[1]),
    .B(_070_),
    .Y(_122_)
  );
  NAND _340_ (
    .A(_024_),
    .B(_070_),
    .Y(_123_)
  );
  NAND _341_ (
    .A(_214_),
    .B(_123_),
    .Y(_124_)
  );
  NOR _342_ (
    .A(_122_),
    .B(_124_),
    .Y(_008_[1])
  );
  NOR _343_ (
    .A(q0[2]),
    .B(_070_),
    .Y(_125_)
  );
  NAND _344_ (
    .A(_025_),
    .B(_070_),
    .Y(_126_)
  );
  NAND _345_ (
    .A(_214_),
    .B(_126_),
    .Y(_127_)
  );
  NOR _346_ (
    .A(_125_),
    .B(_127_),
    .Y(_008_[2])
  );
  NOR _347_ (
    .A(q0[3]),
    .B(_070_),
    .Y(_128_)
  );
  NAND _348_ (
    .A(_026_),
    .B(_070_),
    .Y(_129_)
  );
  NAND _349_ (
    .A(_214_),
    .B(_129_),
    .Y(_130_)
  );
  NOR _350_ (
    .A(_128_),
    .B(_130_),
    .Y(_008_[3])
  );
  NOR _351_ (
    .A(q0[4]),
    .B(_070_),
    .Y(_131_)
  );
  NAND _352_ (
    .A(_027_),
    .B(_070_),
    .Y(_132_)
  );
  NAND _353_ (
    .A(_214_),
    .B(_132_),
    .Y(_133_)
  );
  NOR _354_ (
    .A(_131_),
    .B(_133_),
    .Y(_008_[4])
  );
  NOR _355_ (
    .A(q0[5]),
    .B(_070_),
    .Y(_134_)
  );
  NAND _356_ (
    .A(_028_),
    .B(_070_),
    .Y(_135_)
  );
  NAND _357_ (
    .A(_214_),
    .B(_135_),
    .Y(_136_)
  );
  NOR _358_ (
    .A(_134_),
    .B(_136_),
    .Y(_008_[5])
  );
  NAND _359_ (
    .A(rd_ptr[0]),
    .B(_042_),
    .Y(_137_)
  );
  NOR _360_ (
    .A(rd_ptr[0]),
    .B(_042_),
    .Y(_138_)
  );
  NOR _361_ (
    .A(reset),
    .B(_138_),
    .Y(_139_)
  );
  NAND _362_ (
    .A(_137_),
    .B(_139_),
    .Y(_140_)
  );
  NOT _363_ (
    .A(_140_),
    .Y(_011_[0])
  );
  NOR _364_ (
    .A(_029_),
    .B(_137_),
    .Y(_141_)
  );
  NAND _365_ (
    .A(_029_),
    .B(_137_),
    .Y(_142_)
  );
  NAND _366_ (
    .A(_214_),
    .B(_142_),
    .Y(_143_)
  );
  NOR _367_ (
    .A(_141_),
    .B(_143_),
    .Y(_011_[1])
  );
  NAND _368_ (
    .A(rd_ptr[2]),
    .B(_141_),
    .Y(_144_)
  );
  NOR _369_ (
    .A(rd_ptr[2]),
    .B(_141_),
    .Y(_145_)
  );
  NOR _370_ (
    .A(reset),
    .B(_145_),
    .Y(_146_)
  );
  NAND _371_ (
    .A(_144_),
    .B(_146_),
    .Y(_147_)
  );
  NOT _372_ (
    .A(_147_),
    .Y(_011_[2])
  );
  NOR _373_ (
    .A(_030_),
    .B(_144_),
    .Y(_148_)
  );
  NAND _374_ (
    .A(_030_),
    .B(_144_),
    .Y(_149_)
  );
  NAND _375_ (
    .A(_214_),
    .B(_149_),
    .Y(_150_)
  );
  NOR _376_ (
    .A(_148_),
    .B(_150_),
    .Y(_011_[3])
  );
  NAND _377_ (
    .A(Fifo_rd),
    .B(_214_),
    .Y(_151_)
  );
  NOR _378_ (
    .A(_210_),
    .B(_151_),
    .Y(_003_)
  );
  NAND _379_ (
    .A(reset),
    .B(q_rd),
    .Y(_152_)
  );
  NAND _380_ (
    .A(_151_),
    .B(_152_),
    .Y(_009_)
  );
  NOR _381_ (
    .A(reset),
    .B(_043_),
    .Y(_013_)
  );
  NAND _382_ (
    .A(Fifo_wr),
    .B(_214_),
    .Y(_153_)
  );
  NOT _383_ (
    .A(_153_),
    .Y(_010_)
  );
  NOR _384_ (
    .A(reset),
    .B(_038_),
    .Y(_012_[0])
  );
  NOR _385_ (
    .A(Umbral[0]),
    .B(Umbral[1]),
    .Y(_154_)
  );
  NAND _386_ (
    .A(_038_),
    .B(_039_),
    .Y(_155_)
  );
  NAND _387_ (
    .A(Umbral[0]),
    .B(Umbral[1]),
    .Y(_156_)
  );
  NAND _388_ (
    .A(_155_),
    .B(_156_),
    .Y(_157_)
  );
  NOT _389_ (
    .A(_157_),
    .Y(_158_)
  );
  NOR _390_ (
    .A(reset),
    .B(_157_),
    .Y(_012_[1])
  );
  NOR _391_ (
    .A(Umbral[2]),
    .B(_155_),
    .Y(_159_)
  );
  NAND _392_ (
    .A(_040_),
    .B(_154_),
    .Y(_160_)
  );
  NAND _393_ (
    .A(Umbral[2]),
    .B(_155_),
    .Y(_161_)
  );
  NAND _394_ (
    .A(_160_),
    .B(_161_),
    .Y(_162_)
  );
  NOT _395_ (
    .A(_162_),
    .Y(_163_)
  );
  NOR _396_ (
    .A(reset),
    .B(_162_),
    .Y(_012_[2])
  );
  NOR _397_ (
    .A(Umbral[3]),
    .B(_160_),
    .Y(_164_)
  );
  NAND _398_ (
    .A(_041_),
    .B(_159_),
    .Y(_165_)
  );
  NAND _399_ (
    .A(Umbral[3]),
    .B(_160_),
    .Y(_166_)
  );
  NAND _400_ (
    .A(_165_),
    .B(_166_),
    .Y(_167_)
  );
  NOT _401_ (
    .A(_167_),
    .Y(_168_)
  );
  NOR _402_ (
    .A(reset),
    .B(_167_),
    .Y(_012_[3])
  );
  NOR _403_ (
    .A(reset),
    .B(_165_),
    .Y(_012_[4])
  );
  NOR _404_ (
    .A(_211_),
    .B(_153_),
    .Y(_004_)
  );
  NOR _405_ (
    .A(reset),
    .B(_096_),
    .Y(_007_[4])
  );
  NOR _406_ (
    .A(cont[0]),
    .B(cont[1]),
    .Y(_169_)
  );
  NAND _407_ (
    .A(_102_),
    .B(_169_),
    .Y(_170_)
  );
  NOR _408_ (
    .A(cont[3]),
    .B(_170_),
    .Y(_171_)
  );
  NAND _409_ (
    .A(_007_[4]),
    .B(_171_),
    .Y(_172_)
  );
  NOR _410_ (
    .A(cont[5]),
    .B(_172_),
    .Y(_002_)
  );
  NOR _411_ (
    .A(reset),
    .B(_031_),
    .Y(_000_[0])
  );
  NOR _412_ (
    .A(reset),
    .B(_032_),
    .Y(_000_[1])
  );
  NOR _413_ (
    .A(reset),
    .B(_033_),
    .Y(_000_[2])
  );
  NOR _414_ (
    .A(reset),
    .B(_034_),
    .Y(_000_[3])
  );
  NOR _415_ (
    .A(reset),
    .B(_035_),
    .Y(_000_[4])
  );
  NOR _416_ (
    .A(reset),
    .B(_036_),
    .Y(_000_[5])
  );
  NOR _417_ (
    .A(reset),
    .B(_098_),
    .Y(_007_[0])
  );
  NAND _418_ (
    .A(_214_),
    .B(cont[1]),
    .Y(_173_)
  );
  NOT _419_ (
    .A(_173_),
    .Y(_007_[1])
  );
  NOR _420_ (
    .A(reset),
    .B(_102_),
    .Y(_007_[2])
  );
  NAND _421_ (
    .A(_214_),
    .B(cont[3]),
    .Y(_174_)
  );
  NOT _422_ (
    .A(_174_),
    .Y(_007_[3])
  );
  NOR _423_ (
    .A(reset),
    .B(_094_),
    .Y(_007_[5])
  );
  NOR _424_ (
    .A(reset),
    .B(_037_),
    .Y(_014_)
  );
  NOR _425_ (
    .A(cont[5]),
    .B(cont[4]),
    .Y(_175_)
  );
  NOR _426_ (
    .A(Umbral[3]),
    .B(cont[3]),
    .Y(_176_)
  );
  NOR _427_ (
    .A(_041_),
    .B(_104_),
    .Y(_177_)
  );
  NOR _428_ (
    .A(_176_),
    .B(_177_),
    .Y(_178_)
  );
  NOR _429_ (
    .A(Umbral[2]),
    .B(cont[2]),
    .Y(_179_)
  );
  NOR _430_ (
    .A(_040_),
    .B(_102_),
    .Y(_180_)
  );
  NOR _431_ (
    .A(_179_),
    .B(_180_),
    .Y(_181_)
  );
  NAND _432_ (
    .A(_039_),
    .B(_100_),
    .Y(_182_)
  );
  NAND _433_ (
    .A(Umbral[1]),
    .B(cont[1]),
    .Y(_183_)
  );
  NAND _434_ (
    .A(_182_),
    .B(_183_),
    .Y(_184_)
  );
  NAND _435_ (
    .A(_038_),
    .B(cont[0]),
    .Y(_185_)
  );
  NAND _436_ (
    .A(Umbral[0]),
    .B(_098_),
    .Y(_186_)
  );
  NAND _437_ (
    .A(_185_),
    .B(_186_),
    .Y(_187_)
  );
  NOR _438_ (
    .A(reset),
    .B(_187_),
    .Y(_188_)
  );
  NAND _439_ (
    .A(_184_),
    .B(_188_),
    .Y(_189_)
  );
  NOR _440_ (
    .A(_181_),
    .B(_189_),
    .Y(_190_)
  );
  NAND _441_ (
    .A(_175_),
    .B(_190_),
    .Y(_191_)
  );
  NOR _442_ (
    .A(_178_),
    .B(_191_),
    .Y(_005_)
  );
  NAND _443_ (
    .A(_171_),
    .B(_175_),
    .Y(_192_)
  );
  NAND _444_ (
    .A(_214_),
    .B(_192_),
    .Y(_001_)
  );
  NOR _445_ (
    .A(_104_),
    .B(_168_),
    .Y(_193_)
  );
  NOR _446_ (
    .A(cont[3]),
    .B(_167_),
    .Y(_194_)
  );
  NOR _447_ (
    .A(_193_),
    .B(_194_),
    .Y(_195_)
  );
  NOR _448_ (
    .A(cont[2]),
    .B(_163_),
    .Y(_196_)
  );
  NOR _449_ (
    .A(_102_),
    .B(_162_),
    .Y(_197_)
  );
  NOR _450_ (
    .A(_196_),
    .B(_197_),
    .Y(_198_)
  );
  NOR _451_ (
    .A(_100_),
    .B(_158_),
    .Y(_199_)
  );
  NOR _452_ (
    .A(cont[1]),
    .B(_157_),
    .Y(_200_)
  );
  NOR _453_ (
    .A(_199_),
    .B(_200_),
    .Y(_201_)
  );
  NAND _454_ (
    .A(_188_),
    .B(_201_),
    .Y(_202_)
  );
  NOR _455_ (
    .A(_198_),
    .B(_202_),
    .Y(_203_)
  );
  NAND _456_ (
    .A(_195_),
    .B(_203_),
    .Y(_204_)
  );
  NAND _457_ (
    .A(_096_),
    .B(_164_),
    .Y(_205_)
  );
  NOR _458_ (
    .A(_096_),
    .B(_164_),
    .Y(_206_)
  );
  NOR _459_ (
    .A(cont[5]),
    .B(_206_),
    .Y(_207_)
  );
  NAND _460_ (
    .A(_205_),
    .B(_207_),
    .Y(_208_)
  );
  NOR _461_ (
    .A(_204_),
    .B(_208_),
    .Y(_006_)
  );
  NOR _462_ (
    .A(Fifo_rd_error),
    .B(Fifo_wr_error),
    .Y(_209_)
  );
  NOT _463_ (
    .A(_209_),
    .Y(Fifo_error)
  );
  (* src = "fifo_est.v:33" *)
  DFF _464_ (
    .C(clk),
    .D(_002_),
    .Q(Fifo_full)
  );
  (* src = "fifo_est.v:33" *)
  DFF _465_ (
    .C(clk),
    .D(_001_),
    .Q(Fifo_empty)
  );
  (* src = "fifo_est.v:33" *)
  DFF _466_ (
    .C(clk),
    .D(_006_),
    .Q(almost_full)
  );
  (* src = "fifo_est.v:33" *)
  DFF _467_ (
    .C(clk),
    .D(_005_),
    .Q(almost_empty)
  );
  (* src = "fifo_est.v:33" *)
  DFF _468_ (
    .C(clk),
    .D(_014_),
    .Q(valid_read)
  );
  (* src = "fifo_est.v:33" *)
  DFF _469_ (
    .C(clk),
    .D(_007_[0]),
    .Q(conor[0])
  );
  (* src = "fifo_est.v:33" *)
  DFF _470_ (
    .C(clk),
    .D(_007_[1]),
    .Q(conor[1])
  );
  (* src = "fifo_est.v:33" *)
  DFF _471_ (
    .C(clk),
    .D(_007_[2]),
    .Q(conor[2])
  );
  (* src = "fifo_est.v:33" *)
  DFF _472_ (
    .C(clk),
    .D(_007_[3]),
    .Q(conor[3])
  );
  (* src = "fifo_est.v:33" *)
  DFF _473_ (
    .C(clk),
    .D(_007_[4]),
    .Q(conor[4])
  );
  (* src = "fifo_est.v:33" *)
  DFF _474_ (
    .C(clk),
    .D(_007_[5]),
    .Q(conor[5])
  );
  (* src = "fifo_est.v:33" *)
  DFF _475_ (
    .C(clk),
    .D(_004_),
    .Q(Fifo_wr_error)
  );
  (* src = "fifo_est.v:33" *)
  DFF _476_ (
    .C(clk),
    .D(_000_[0]),
    .Q(Fifo_Data_out[0])
  );
  (* src = "fifo_est.v:33" *)
  DFF _477_ (
    .C(clk),
    .D(_000_[1]),
    .Q(Fifo_Data_out[1])
  );
  (* src = "fifo_est.v:33" *)
  DFF _478_ (
    .C(clk),
    .D(_000_[2]),
    .Q(Fifo_Data_out[2])
  );
  (* src = "fifo_est.v:33" *)
  DFF _479_ (
    .C(clk),
    .D(_000_[3]),
    .Q(Fifo_Data_out[3])
  );
  (* src = "fifo_est.v:33" *)
  DFF _480_ (
    .C(clk),
    .D(_000_[4]),
    .Q(Fifo_Data_out[4])
  );
  (* src = "fifo_est.v:33" *)
  DFF _481_ (
    .C(clk),
    .D(_000_[5]),
    .Q(Fifo_Data_out[5])
  );
  (* src = "fifo_est.v:33" *)
  DFF _482_ (
    .C(clk),
    .D(_003_),
    .Q(Fifo_rd_error)
  );
  (* src = "fifo_est.v:33" *)
  DFF _483_ (
    .C(clk),
    .D(_012_[0]),
    .Q(test[0])
  );
  (* src = "fifo_est.v:33" *)
  DFF _484_ (
    .C(clk),
    .D(_012_[1]),
    .Q(test[1])
  );
  (* src = "fifo_est.v:33" *)
  DFF _485_ (
    .C(clk),
    .D(_012_[2]),
    .Q(test[2])
  );
  (* src = "fifo_est.v:33" *)
  DFF _486_ (
    .C(clk),
    .D(_012_[3]),
    .Q(test[3])
  );
  (* src = "fifo_est.v:33" *)
  DFF _487_ (
    .C(clk),
    .D(_012_[4]),
    .Q(test[4])
  );
  (* src = "fifo_est.v:33" *)
  DFF _488_ (
    .C(clk),
    .D(_010_),
    .Q(q_wt)
  );
  (* src = "fifo_est.v:33" *)
  DFF _489_ (
    .C(clk),
    .D(_009_),
    .Q(q_rd)
  );
  (* src = "fifo_est.v:33" *)
  DFF _490_ (
    .C(clk),
    .D(_013_),
    .Q(v1)
  );
  (* src = "fifo_est.v:33" *)
  DFF _491_ (
    .C(clk),
    .D(_011_[0]),
    .Q(rd_ptr[0])
  );
  (* src = "fifo_est.v:33" *)
  DFF _492_ (
    .C(clk),
    .D(_011_[1]),
    .Q(rd_ptr[1])
  );
  (* src = "fifo_est.v:33" *)
  DFF _493_ (
    .C(clk),
    .D(_011_[2]),
    .Q(rd_ptr[2])
  );
  (* src = "fifo_est.v:33" *)
  DFF _494_ (
    .C(clk),
    .D(_011_[3]),
    .Q(rd_ptr[3])
  );
  (* src = "fifo_est.v:33" *)
  DFF _495_ (
    .C(clk),
    .D(_015_[0]),
    .Q(wr_ptr[0])
  );
  (* src = "fifo_est.v:33" *)
  DFF _496_ (
    .C(clk),
    .D(_015_[1]),
    .Q(wr_ptr[1])
  );
  (* src = "fifo_est.v:33" *)
  DFF _497_ (
    .C(clk),
    .D(_015_[2]),
    .Q(wr_ptr[2])
  );
  (* src = "fifo_est.v:33" *)
  DFF _498_ (
    .C(clk),
    .D(_015_[3]),
    .Q(wr_ptr[3])
  );
  (* src = "fifo_est.v:33" *)
  DFF _499_ (
    .C(clk),
    .D(_008_[0]),
    .Q(q0[0])
  );
  (* src = "fifo_est.v:33" *)
  DFF _500_ (
    .C(clk),
    .D(_008_[1]),
    .Q(q0[1])
  );
  (* src = "fifo_est.v:33" *)
  DFF _501_ (
    .C(clk),
    .D(_008_[2]),
    .Q(q0[2])
  );
  (* src = "fifo_est.v:33" *)
  DFF _502_ (
    .C(clk),
    .D(_008_[3]),
    .Q(q0[3])
  );
  (* src = "fifo_est.v:33" *)
  DFF _503_ (
    .C(clk),
    .D(_008_[4]),
    .Q(q0[4])
  );
  (* src = "fifo_est.v:33" *)
  DFF _504_ (
    .C(clk),
    .D(_008_[5]),
    .Q(q0[5])
  );
  (* src = "fifo_est.v:122" *)
  \$paramod\flow_control\BITNUMBER=6\LENGTH=16  flow_c_ (
    .Fifo_empty(Fifo_empty),
    .Fifo_full(Fifo_full),
    .Fifo_rd(Fifo_rd),
    .Fifo_wr(Fifo_wr),
    .almost_empty(almost_empty),
    .almost_full(almost_full),
    .can_pop(can_pop),
    .clk(clk),
    .pause(pause),
    .reset(reset)
  );
  (* src = "fifo_est.v:114" *)
  \$paramod\memoria\BITNUMBER=6\LENGTH=16  memoria (
    .clk(clk),
    .data_in(q0),
    .data_out(q1),
    .ptr_read(rd_ptr),
    .ptr_write(wr_ptr),
    .read(q_rd),
    .reset(reset),
    .write(q_wt)
  );
  assign _012_[8:5] = 4'h0;
  assign contador = 6'h00;
  assign test[8:5] = 4'h0;
endmodule

(* dynports =  1  *)
(* src = "fifo_est.v:3" *)
module \$paramod\fifo_est\BITNUMBER=6\LENGTH=4 (Fifo_Data_in, clk, reset, Fifo_rd, Fifo_wr, Umbral, Fifo_full, Fifo_empty, Fifo_Data_out, Fifo_rd_error, Fifo_wr_error, Fifo_error, almost_full, almost_empty, can_pop, pause, valid_read, cont, conor, test);
  (* src = "fifo_est.v:33" *)
  wire [5:0] _000_;
  (* src = "fifo_est.v:33" *)
  wire _001_;
  (* src = "fifo_est.v:33" *)
  wire _002_;
  (* src = "fifo_est.v:33" *)
  wire _003_;
  (* src = "fifo_est.v:33" *)
  wire _004_;
  (* src = "fifo_est.v:33" *)
  wire _005_;
  (* src = "fifo_est.v:33" *)
  wire _006_;
  (* src = "fifo_est.v:33" *)
  wire [2:0] _007_;
  (* src = "fifo_est.v:33" *)
  wire [5:0] _008_;
  (* src = "fifo_est.v:33" *)
  wire _009_;
  (* src = "fifo_est.v:33" *)
  wire _010_;
  (* src = "fifo_est.v:33" *)
  wire [1:0] _011_;
  (* src = "fifo_est.v:33" *)
  wire [8:0] _012_;
  (* src = "fifo_est.v:33" *)
  wire _013_;
  (* src = "fifo_est.v:33" *)
  wire _014_;
  (* src = "fifo_est.v:33" *)
  wire [1:0] _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  (* src = "fifo_est.v:5" *)
  input [5:0] Fifo_Data_in;
  (* src = "fifo_est.v:13" *)
  output [5:0] Fifo_Data_out;
  (* src = "fifo_est.v:12" *)
  output Fifo_empty;
  (* src = "fifo_est.v:16" *)
  output Fifo_error;
  (* src = "fifo_est.v:11" *)
  output Fifo_full;
  (* src = "fifo_est.v:8" *)
  input Fifo_rd;
  (* src = "fifo_est.v:14" *)
  output Fifo_rd_error;
  (* src = "fifo_est.v:9" *)
  input Fifo_wr;
  (* src = "fifo_est.v:15" *)
  output Fifo_wr_error;
  (* src = "fifo_est.v:10" *)
  input [3:0] Umbral;
  (* src = "fifo_est.v:18" *)
  output almost_empty;
  (* src = "fifo_est.v:17" *)
  output almost_full;
  (* src = "fifo_est.v:19" *)
  output can_pop;
  (* src = "fifo_est.v:6" *)
  input clk;
  (* src = "fifo_est.v:23" *)
  output [2:0] conor;
  (* src = "fifo_est.v:22" *)
  output [2:0] cont;
  (* src = "fifo_est.v:29" *)
  wire [2:0] contador;
  (* src = "fifo_est.v:20" *)
  output pause;
  (* src = "fifo_est.v:31" *)
  wire [5:0] q0;
  (* src = "fifo_est.v:30" *)
  wire [5:0] q1;
  (* src = "fifo_est.v:27" *)
  wire q_rd;
  (* src = "fifo_est.v:27" *)
  wire q_wt;
  (* src = "fifo_est.v:28" *)
  wire [1:0] rd_ptr;
  (* src = "fifo_est.v:7" *)
  input reset;
  (* src = "fifo_est.v:24" *)
  output [8:0] test;
  (* src = "fifo_est.v:27" *)
  wire v1;
  (* src = "fifo_est.v:21" *)
  output valid_read;
  (* src = "fifo_est.v:28" *)
  wire [1:0] wr_ptr;
  NOT _148_ (
    .A(Fifo_empty),
    .Y(_125_)
  );
  NOT _149_ (
    .A(Fifo_full),
    .Y(_126_)
  );
  NOT _150_ (
    .A(Fifo_wr),
    .Y(_127_)
  );
  NOT _151_ (
    .A(Fifo_rd),
    .Y(_128_)
  );
  NOT _152_ (
    .A(wr_ptr[1]),
    .Y(_129_)
  );
  NOT _153_ (
    .A(conor[0]),
    .Y(_130_)
  );
  NOT _154_ (
    .A(conor[1]),
    .Y(_131_)
  );
  NOT _155_ (
    .A(conor[2]),
    .Y(_132_)
  );
  NOT _156_ (
    .A(reset),
    .Y(_133_)
  );
  NOT _157_ (
    .A(Fifo_Data_in[0]),
    .Y(_134_)
  );
  NOT _158_ (
    .A(Fifo_Data_in[1]),
    .Y(_135_)
  );
  NOT _159_ (
    .A(Fifo_Data_in[2]),
    .Y(_136_)
  );
  NOT _160_ (
    .A(Fifo_Data_in[3]),
    .Y(_137_)
  );
  NOT _161_ (
    .A(Fifo_Data_in[4]),
    .Y(_138_)
  );
  NOT _162_ (
    .A(Fifo_Data_in[5]),
    .Y(_139_)
  );
  NOT _163_ (
    .A(rd_ptr[1]),
    .Y(_140_)
  );
  NOT _164_ (
    .A(q1[0]),
    .Y(_141_)
  );
  NOT _165_ (
    .A(q1[1]),
    .Y(_142_)
  );
  NOT _166_ (
    .A(q1[2]),
    .Y(_143_)
  );
  NOT _167_ (
    .A(q1[3]),
    .Y(_144_)
  );
  NOT _168_ (
    .A(q1[4]),
    .Y(_145_)
  );
  NOT _169_ (
    .A(q1[5]),
    .Y(_146_)
  );
  NOT _170_ (
    .A(v1),
    .Y(_147_)
  );
  NOT _171_ (
    .A(Umbral[0]),
    .Y(_016_)
  );
  NOT _172_ (
    .A(Umbral[1]),
    .Y(_017_)
  );
  NOT _173_ (
    .A(Umbral[2]),
    .Y(_018_)
  );
  NOR _174_ (
    .A(Fifo_empty),
    .B(_128_),
    .Y(_019_)
  );
  NAND _175_ (
    .A(_125_),
    .B(Fifo_rd),
    .Y(_020_)
  );
  NOR _176_ (
    .A(_130_),
    .B(_019_),
    .Y(_021_)
  );
  NAND _177_ (
    .A(conor[0]),
    .B(_020_),
    .Y(_022_)
  );
  NOR _178_ (
    .A(conor[0]),
    .B(_020_),
    .Y(_023_)
  );
  NAND _179_ (
    .A(_130_),
    .B(_019_),
    .Y(_024_)
  );
  NOR _180_ (
    .A(_021_),
    .B(_023_),
    .Y(_025_)
  );
  NAND _181_ (
    .A(_022_),
    .B(_024_),
    .Y(_026_)
  );
  NOR _182_ (
    .A(Fifo_full),
    .B(_127_),
    .Y(_027_)
  );
  NAND _183_ (
    .A(_126_),
    .B(Fifo_wr),
    .Y(_028_)
  );
  NOR _184_ (
    .A(_025_),
    .B(_028_),
    .Y(_029_)
  );
  NAND _185_ (
    .A(_026_),
    .B(_027_),
    .Y(_030_)
  );
  NAND _186_ (
    .A(_025_),
    .B(_028_),
    .Y(_031_)
  );
  NAND _187_ (
    .A(_030_),
    .B(_031_),
    .Y(_032_)
  );
  NOT _188_ (
    .A(_032_),
    .Y(cont[0])
  );
  NOR _189_ (
    .A(_131_),
    .B(_023_),
    .Y(_033_)
  );
  NAND _190_ (
    .A(conor[1]),
    .B(_024_),
    .Y(_034_)
  );
  NOR _191_ (
    .A(conor[1]),
    .B(_024_),
    .Y(_035_)
  );
  NAND _192_ (
    .A(_131_),
    .B(_023_),
    .Y(_036_)
  );
  NOR _193_ (
    .A(_033_),
    .B(_035_),
    .Y(_037_)
  );
  NAND _194_ (
    .A(_034_),
    .B(_036_),
    .Y(_038_)
  );
  NOR _195_ (
    .A(_030_),
    .B(_037_),
    .Y(_039_)
  );
  NAND _196_ (
    .A(_029_),
    .B(_038_),
    .Y(_040_)
  );
  NAND _197_ (
    .A(_030_),
    .B(_037_),
    .Y(_041_)
  );
  NAND _198_ (
    .A(_040_),
    .B(_041_),
    .Y(_042_)
  );
  NOT _199_ (
    .A(_042_),
    .Y(cont[1])
  );
  NOR _200_ (
    .A(conor[2]),
    .B(_035_),
    .Y(_043_)
  );
  NAND _201_ (
    .A(_132_),
    .B(_036_),
    .Y(_044_)
  );
  NOR _202_ (
    .A(_132_),
    .B(_036_),
    .Y(_045_)
  );
  NAND _203_ (
    .A(conor[2]),
    .B(_035_),
    .Y(_046_)
  );
  NOR _204_ (
    .A(_043_),
    .B(_045_),
    .Y(_047_)
  );
  NAND _205_ (
    .A(_044_),
    .B(_046_),
    .Y(_048_)
  );
  NAND _206_ (
    .A(_040_),
    .B(_047_),
    .Y(_049_)
  );
  NAND _207_ (
    .A(_039_),
    .B(_048_),
    .Y(_050_)
  );
  NAND _208_ (
    .A(_049_),
    .B(_050_),
    .Y(cont[2])
  );
  NOT _209_ (
    .A(cont[2]),
    .Y(_051_)
  );
  NAND _210_ (
    .A(wr_ptr[0]),
    .B(_027_),
    .Y(_052_)
  );
  NOR _211_ (
    .A(wr_ptr[0]),
    .B(_027_),
    .Y(_053_)
  );
  NOR _212_ (
    .A(reset),
    .B(_053_),
    .Y(_054_)
  );
  NAND _213_ (
    .A(_052_),
    .B(_054_),
    .Y(_055_)
  );
  NOT _214_ (
    .A(_055_),
    .Y(_015_[0])
  );
  NOR _215_ (
    .A(_129_),
    .B(_052_),
    .Y(_056_)
  );
  NAND _216_ (
    .A(_129_),
    .B(_052_),
    .Y(_057_)
  );
  NAND _217_ (
    .A(_133_),
    .B(_057_),
    .Y(_058_)
  );
  NOR _218_ (
    .A(_056_),
    .B(_058_),
    .Y(_015_[1])
  );
  NOR _219_ (
    .A(q0[0]),
    .B(_027_),
    .Y(_059_)
  );
  NAND _220_ (
    .A(_134_),
    .B(_027_),
    .Y(_060_)
  );
  NAND _221_ (
    .A(_133_),
    .B(_060_),
    .Y(_061_)
  );
  NOR _222_ (
    .A(_059_),
    .B(_061_),
    .Y(_008_[0])
  );
  NOR _223_ (
    .A(q0[1]),
    .B(_027_),
    .Y(_062_)
  );
  NAND _224_ (
    .A(_135_),
    .B(_027_),
    .Y(_063_)
  );
  NAND _225_ (
    .A(_133_),
    .B(_063_),
    .Y(_064_)
  );
  NOR _226_ (
    .A(_062_),
    .B(_064_),
    .Y(_008_[1])
  );
  NOR _227_ (
    .A(q0[2]),
    .B(_027_),
    .Y(_065_)
  );
  NAND _228_ (
    .A(_136_),
    .B(_027_),
    .Y(_066_)
  );
  NAND _229_ (
    .A(_133_),
    .B(_066_),
    .Y(_067_)
  );
  NOR _230_ (
    .A(_065_),
    .B(_067_),
    .Y(_008_[2])
  );
  NOR _231_ (
    .A(q0[3]),
    .B(_027_),
    .Y(_068_)
  );
  NAND _232_ (
    .A(_137_),
    .B(_027_),
    .Y(_069_)
  );
  NAND _233_ (
    .A(_133_),
    .B(_069_),
    .Y(_070_)
  );
  NOR _234_ (
    .A(_068_),
    .B(_070_),
    .Y(_008_[3])
  );
  NOR _235_ (
    .A(q0[4]),
    .B(_027_),
    .Y(_071_)
  );
  NAND _236_ (
    .A(_138_),
    .B(_027_),
    .Y(_072_)
  );
  NAND _237_ (
    .A(_133_),
    .B(_072_),
    .Y(_073_)
  );
  NOR _238_ (
    .A(_071_),
    .B(_073_),
    .Y(_008_[4])
  );
  NOR _239_ (
    .A(q0[5]),
    .B(_027_),
    .Y(_074_)
  );
  NAND _240_ (
    .A(_139_),
    .B(_027_),
    .Y(_075_)
  );
  NAND _241_ (
    .A(_133_),
    .B(_075_),
    .Y(_076_)
  );
  NOR _242_ (
    .A(_074_),
    .B(_076_),
    .Y(_008_[5])
  );
  NAND _243_ (
    .A(rd_ptr[0]),
    .B(_019_),
    .Y(_077_)
  );
  NOR _244_ (
    .A(rd_ptr[0]),
    .B(_019_),
    .Y(_078_)
  );
  NOR _245_ (
    .A(reset),
    .B(_078_),
    .Y(_079_)
  );
  NAND _246_ (
    .A(_077_),
    .B(_079_),
    .Y(_080_)
  );
  NOT _247_ (
    .A(_080_),
    .Y(_011_[0])
  );
  NOR _248_ (
    .A(_140_),
    .B(_077_),
    .Y(_081_)
  );
  NAND _249_ (
    .A(_140_),
    .B(_077_),
    .Y(_082_)
  );
  NAND _250_ (
    .A(_133_),
    .B(_082_),
    .Y(_083_)
  );
  NOR _251_ (
    .A(_081_),
    .B(_083_),
    .Y(_011_[1])
  );
  NAND _252_ (
    .A(Fifo_rd),
    .B(_133_),
    .Y(_084_)
  );
  NOR _253_ (
    .A(_125_),
    .B(_084_),
    .Y(_003_)
  );
  NAND _254_ (
    .A(reset),
    .B(q_rd),
    .Y(_085_)
  );
  NAND _255_ (
    .A(_084_),
    .B(_085_),
    .Y(_009_)
  );
  NOR _256_ (
    .A(reset),
    .B(_020_),
    .Y(_013_)
  );
  NAND _257_ (
    .A(Fifo_wr),
    .B(_133_),
    .Y(_086_)
  );
  NOT _258_ (
    .A(_086_),
    .Y(_010_)
  );
  NOR _259_ (
    .A(reset),
    .B(_016_),
    .Y(_012_[0])
  );
  NOR _260_ (
    .A(Umbral[0]),
    .B(Umbral[1]),
    .Y(_087_)
  );
  NAND _261_ (
    .A(_016_),
    .B(_017_),
    .Y(_088_)
  );
  NAND _262_ (
    .A(Umbral[0]),
    .B(Umbral[1]),
    .Y(_089_)
  );
  NAND _263_ (
    .A(_088_),
    .B(_089_),
    .Y(_090_)
  );
  NOT _264_ (
    .A(_090_),
    .Y(_091_)
  );
  NOR _265_ (
    .A(reset),
    .B(_090_),
    .Y(_012_[1])
  );
  NOR _266_ (
    .A(Umbral[2]),
    .B(_088_),
    .Y(_092_)
  );
  NAND _267_ (
    .A(_018_),
    .B(_087_),
    .Y(_093_)
  );
  NOR _268_ (
    .A(_018_),
    .B(_087_),
    .Y(_094_)
  );
  NOR _269_ (
    .A(_092_),
    .B(_094_),
    .Y(_095_)
  );
  NOR _270_ (
    .A(reset),
    .B(_095_),
    .Y(_012_[2])
  );
  NAND _271_ (
    .A(Umbral[3]),
    .B(_094_),
    .Y(_096_)
  );
  NOR _272_ (
    .A(Umbral[3]),
    .B(_094_),
    .Y(_097_)
  );
  NOR _273_ (
    .A(reset),
    .B(_097_),
    .Y(_012_[8])
  );
  NAND _274_ (
    .A(_096_),
    .B(_012_[8]),
    .Y(_098_)
  );
  NOT _275_ (
    .A(_098_),
    .Y(_012_[3])
  );
  NOR _276_ (
    .A(_126_),
    .B(_086_),
    .Y(_004_)
  );
  NOR _277_ (
    .A(cont[0]),
    .B(cont[1]),
    .Y(_099_)
  );
  NAND _278_ (
    .A(_032_),
    .B(_042_),
    .Y(_100_)
  );
  NOR _279_ (
    .A(reset),
    .B(_051_),
    .Y(_007_[2])
  );
  NOT _280_ (
    .A(_007_[2]),
    .Y(_101_)
  );
  NOR _281_ (
    .A(_100_),
    .B(_101_),
    .Y(_002_)
  );
  NOR _282_ (
    .A(reset),
    .B(_141_),
    .Y(_000_[0])
  );
  NOR _283_ (
    .A(reset),
    .B(_142_),
    .Y(_000_[1])
  );
  NOR _284_ (
    .A(reset),
    .B(_143_),
    .Y(_000_[2])
  );
  NOR _285_ (
    .A(reset),
    .B(_144_),
    .Y(_000_[3])
  );
  NOR _286_ (
    .A(reset),
    .B(_145_),
    .Y(_000_[4])
  );
  NOR _287_ (
    .A(reset),
    .B(_146_),
    .Y(_000_[5])
  );
  NOR _288_ (
    .A(reset),
    .B(_032_),
    .Y(_007_[0])
  );
  NOR _289_ (
    .A(reset),
    .B(_042_),
    .Y(_007_[1])
  );
  NOR _290_ (
    .A(reset),
    .B(_147_),
    .Y(_014_)
  );
  NOR _291_ (
    .A(_017_),
    .B(cont[1]),
    .Y(_102_)
  );
  NOR _292_ (
    .A(Umbral[1]),
    .B(_042_),
    .Y(_103_)
  );
  NOR _293_ (
    .A(_102_),
    .B(_103_),
    .Y(_104_)
  );
  NAND _294_ (
    .A(_018_),
    .B(cont[2]),
    .Y(_105_)
  );
  NAND _295_ (
    .A(_104_),
    .B(_105_),
    .Y(_106_)
  );
  NOR _296_ (
    .A(Umbral[0]),
    .B(_032_),
    .Y(_107_)
  );
  NOR _297_ (
    .A(Umbral[3]),
    .B(reset),
    .Y(_108_)
  );
  NAND _298_ (
    .A(Umbral[0]),
    .B(_032_),
    .Y(_109_)
  );
  NAND _299_ (
    .A(_108_),
    .B(_109_),
    .Y(_110_)
  );
  NOR _300_ (
    .A(_107_),
    .B(_110_),
    .Y(_111_)
  );
  NAND _301_ (
    .A(Umbral[2]),
    .B(_051_),
    .Y(_112_)
  );
  NAND _302_ (
    .A(_111_),
    .B(_112_),
    .Y(_113_)
  );
  NOR _303_ (
    .A(_106_),
    .B(_113_),
    .Y(_005_)
  );
  NOR _304_ (
    .A(reset),
    .B(_099_),
    .Y(_114_)
  );
  NOR _305_ (
    .A(_007_[2]),
    .B(_114_),
    .Y(_001_)
  );
  NAND _306_ (
    .A(_042_),
    .B(_091_),
    .Y(_115_)
  );
  NAND _307_ (
    .A(cont[1]),
    .B(_090_),
    .Y(_116_)
  );
  NAND _308_ (
    .A(_115_),
    .B(_116_),
    .Y(_117_)
  );
  NOR _309_ (
    .A(_094_),
    .B(_117_),
    .Y(_118_)
  );
  NAND _310_ (
    .A(cont[2]),
    .B(_093_),
    .Y(_119_)
  );
  NOR _311_ (
    .A(cont[2]),
    .B(_095_),
    .Y(_120_)
  );
  NOT _312_ (
    .A(_120_),
    .Y(_121_)
  );
  NAND _313_ (
    .A(_119_),
    .B(_121_),
    .Y(_122_)
  );
  NAND _314_ (
    .A(_111_),
    .B(_118_),
    .Y(_123_)
  );
  NOR _315_ (
    .A(_122_),
    .B(_123_),
    .Y(_006_)
  );
  NOR _316_ (
    .A(Fifo_rd_error),
    .B(Fifo_wr_error),
    .Y(_124_)
  );
  NOT _317_ (
    .A(_124_),
    .Y(Fifo_error)
  );
  (* src = "fifo_est.v:33" *)
  DFF _318_ (
    .C(clk),
    .D(_002_),
    .Q(Fifo_full)
  );
  (* src = "fifo_est.v:33" *)
  DFF _319_ (
    .C(clk),
    .D(_001_),
    .Q(Fifo_empty)
  );
  (* src = "fifo_est.v:33" *)
  DFF _320_ (
    .C(clk),
    .D(_006_),
    .Q(almost_full)
  );
  (* src = "fifo_est.v:33" *)
  DFF _321_ (
    .C(clk),
    .D(_005_),
    .Q(almost_empty)
  );
  (* src = "fifo_est.v:33" *)
  DFF _322_ (
    .C(clk),
    .D(_014_),
    .Q(valid_read)
  );
  (* src = "fifo_est.v:33" *)
  DFF _323_ (
    .C(clk),
    .D(_007_[0]),
    .Q(conor[0])
  );
  (* src = "fifo_est.v:33" *)
  DFF _324_ (
    .C(clk),
    .D(_007_[1]),
    .Q(conor[1])
  );
  (* src = "fifo_est.v:33" *)
  DFF _325_ (
    .C(clk),
    .D(_007_[2]),
    .Q(conor[2])
  );
  (* src = "fifo_est.v:33" *)
  DFF _326_ (
    .C(clk),
    .D(_004_),
    .Q(Fifo_wr_error)
  );
  (* src = "fifo_est.v:33" *)
  DFF _327_ (
    .C(clk),
    .D(_000_[0]),
    .Q(Fifo_Data_out[0])
  );
  (* src = "fifo_est.v:33" *)
  DFF _328_ (
    .C(clk),
    .D(_000_[1]),
    .Q(Fifo_Data_out[1])
  );
  (* src = "fifo_est.v:33" *)
  DFF _329_ (
    .C(clk),
    .D(_000_[2]),
    .Q(Fifo_Data_out[2])
  );
  (* src = "fifo_est.v:33" *)
  DFF _330_ (
    .C(clk),
    .D(_000_[3]),
    .Q(Fifo_Data_out[3])
  );
  (* src = "fifo_est.v:33" *)
  DFF _331_ (
    .C(clk),
    .D(_000_[4]),
    .Q(Fifo_Data_out[4])
  );
  (* src = "fifo_est.v:33" *)
  DFF _332_ (
    .C(clk),
    .D(_000_[5]),
    .Q(Fifo_Data_out[5])
  );
  (* src = "fifo_est.v:33" *)
  DFF _333_ (
    .C(clk),
    .D(_003_),
    .Q(Fifo_rd_error)
  );
  (* src = "fifo_est.v:33" *)
  DFF _334_ (
    .C(clk),
    .D(_012_[0]),
    .Q(test[0])
  );
  (* src = "fifo_est.v:33" *)
  DFF _335_ (
    .C(clk),
    .D(_012_[1]),
    .Q(test[1])
  );
  (* src = "fifo_est.v:33" *)
  DFF _336_ (
    .C(clk),
    .D(_012_[2]),
    .Q(test[2])
  );
  (* src = "fifo_est.v:33" *)
  DFF _337_ (
    .C(clk),
    .D(_012_[3]),
    .Q(test[3])
  );
  (* src = "fifo_est.v:33" *)
  DFF _338_ (
    .C(clk),
    .D(_012_[8]),
    .Q(test[8])
  );
  (* src = "fifo_est.v:33" *)
  DFF _339_ (
    .C(clk),
    .D(_010_),
    .Q(q_wt)
  );
  (* src = "fifo_est.v:33" *)
  DFF _340_ (
    .C(clk),
    .D(_009_),
    .Q(q_rd)
  );
  (* src = "fifo_est.v:33" *)
  DFF _341_ (
    .C(clk),
    .D(_013_),
    .Q(v1)
  );
  (* src = "fifo_est.v:33" *)
  DFF _342_ (
    .C(clk),
    .D(_011_[0]),
    .Q(rd_ptr[0])
  );
  (* src = "fifo_est.v:33" *)
  DFF _343_ (
    .C(clk),
    .D(_011_[1]),
    .Q(rd_ptr[1])
  );
  (* src = "fifo_est.v:33" *)
  DFF _344_ (
    .C(clk),
    .D(_015_[0]),
    .Q(wr_ptr[0])
  );
  (* src = "fifo_est.v:33" *)
  DFF _345_ (
    .C(clk),
    .D(_015_[1]),
    .Q(wr_ptr[1])
  );
  (* src = "fifo_est.v:33" *)
  DFF _346_ (
    .C(clk),
    .D(_008_[0]),
    .Q(q0[0])
  );
  (* src = "fifo_est.v:33" *)
  DFF _347_ (
    .C(clk),
    .D(_008_[1]),
    .Q(q0[1])
  );
  (* src = "fifo_est.v:33" *)
  DFF _348_ (
    .C(clk),
    .D(_008_[2]),
    .Q(q0[2])
  );
  (* src = "fifo_est.v:33" *)
  DFF _349_ (
    .C(clk),
    .D(_008_[3]),
    .Q(q0[3])
  );
  (* src = "fifo_est.v:33" *)
  DFF _350_ (
    .C(clk),
    .D(_008_[4]),
    .Q(q0[4])
  );
  (* src = "fifo_est.v:33" *)
  DFF _351_ (
    .C(clk),
    .D(_008_[5]),
    .Q(q0[5])
  );
  (* src = "fifo_est.v:122" *)
  \$paramod\flow_control\BITNUMBER=6\LENGTH=4  flow_c_ (
    .Fifo_empty(Fifo_empty),
    .Fifo_full(Fifo_full),
    .Fifo_rd(Fifo_rd),
    .Fifo_wr(Fifo_wr),
    .almost_empty(almost_empty),
    .almost_full(almost_full),
    .can_pop(can_pop),
    .clk(clk),
    .pause(pause),
    .reset(reset)
  );
  (* src = "fifo_est.v:114" *)
  \$paramod\memoria\BITNUMBER=6\LENGTH=4  memoria (
    .clk(clk),
    .data_in(q0),
    .data_out(q1),
    .ptr_read(rd_ptr),
    .ptr_write(wr_ptr),
    .read(q_rd),
    .reset(reset),
    .write(q_wt)
  );
  assign _012_[7:4] = { _012_[8], _012_[8], _012_[8], _012_[8] };
  assign contador = 3'h0;
  assign test[7:4] = { test[8], test[8], test[8], test[8] };
endmodule

(* src = "flow_control.v:1" *)
module \$paramod\flow_control\BITNUMBER=6\LENGTH=16 (clk, reset, Fifo_rd, Fifo_wr, almost_full, almost_empty, Fifo_full, Fifo_empty, can_pop, pause);
  wire _0_;
  wire _1_;
  wire _2_;
  (* src = "flow_control.v:10" *)
  input Fifo_empty;
  (* src = "flow_control.v:9" *)
  input Fifo_full;
  (* src = "flow_control.v:5" *)
  input Fifo_rd;
  (* src = "flow_control.v:6" *)
  input Fifo_wr;
  (* src = "flow_control.v:8" *)
  input almost_empty;
  (* src = "flow_control.v:7" *)
  input almost_full;
  (* src = "flow_control.v:11" *)
  output can_pop;
  (* src = "flow_control.v:3" *)
  input clk;
  (* src = "flow_control.v:12" *)
  output pause;
  (* src = "flow_control.v:4" *)
  input reset;
  NOR _3_ (
    .A(almost_empty),
    .B(Fifo_empty),
    .Y(_1_)
  );
  NOT _4_ (
    .A(_1_),
    .Y(_2_)
  );
  NOR _5_ (
    .A(reset),
    .B(_2_),
    .Y(can_pop)
  );
  NOR _6_ (
    .A(almost_full),
    .B(Fifo_full),
    .Y(_0_)
  );
  NOR _7_ (
    .A(reset),
    .B(_0_),
    .Y(pause)
  );
endmodule

(* src = "flow_control.v:1" *)
module \$paramod\flow_control\BITNUMBER=6\LENGTH=4 (clk, reset, Fifo_rd, Fifo_wr, almost_full, almost_empty, Fifo_full, Fifo_empty, can_pop, pause);
  wire _0_;
  wire _1_;
  wire _2_;
  (* src = "flow_control.v:10" *)
  input Fifo_empty;
  (* src = "flow_control.v:9" *)
  input Fifo_full;
  (* src = "flow_control.v:5" *)
  input Fifo_rd;
  (* src = "flow_control.v:6" *)
  input Fifo_wr;
  (* src = "flow_control.v:8" *)
  input almost_empty;
  (* src = "flow_control.v:7" *)
  input almost_full;
  (* src = "flow_control.v:11" *)
  output can_pop;
  (* src = "flow_control.v:3" *)
  input clk;
  (* src = "flow_control.v:12" *)
  output pause;
  (* src = "flow_control.v:4" *)
  input reset;
  NOR _3_ (
    .A(almost_empty),
    .B(Fifo_empty),
    .Y(_1_)
  );
  NOT _4_ (
    .A(_1_),
    .Y(_2_)
  );
  NOR _5_ (
    .A(reset),
    .B(_2_),
    .Y(can_pop)
  );
  NOR _6_ (
    .A(almost_full),
    .B(Fifo_full),
    .Y(_0_)
  );
  NOR _7_ (
    .A(reset),
    .B(_0_),
    .Y(pause)
  );
endmodule

(* dynports =  1  *)
(* src = "maquina.v:1" *)
module \$paramod\maquina\LENGTH=4 (clk, reset, umbralMF, umbralVC, umbralD, Fifo_empties, Fifo_errors, init, init_out, idle_out, active_out, error_out, umbralMF_out, umbralVC_out, umbralD_out, state_est, next_state_est);
  (* src = "maquina.v:27" *)
  wire [3:0] _000_;
  (* src = "maquina.v:27" *)
  wire [3:0] _001_;
  (* src = "maquina.v:27" *)
  wire [3:0] _002_;
  (* src = "maquina.v:27" *)
  wire [3:0] _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  (* src = "maquina.v:7" *)
  input [4:0] Fifo_empties;
  (* src = "maquina.v:8" *)
  input [4:0] Fifo_errors;
  (* src = "maquina.v:12" *)
  output active_out;
  (* src = "maquina.v:2" *)
  input clk;
  (* src = "maquina.v:13" *)
  output error_out;
  (* src = "maquina.v:11" *)
  output idle_out;
  (* src = "maquina.v:9" *)
  input init;
  (* src = "maquina.v:10" *)
  output init_out;
  (* src = "maquina.v:18" *)
  output [3:0] next_state_est;
  (* src = "maquina.v:3" *)
  input reset;
  (* src = "maquina.v:17" *)
  output [3:0] state_est;
  (* src = "maquina.v:6" *)
  input [3:0] umbralD;
  (* src = "maquina.v:16" *)
  output [3:0] umbralD_out;
  (* src = "maquina.v:4" *)
  input [3:0] umbralMF;
  (* src = "maquina.v:14" *)
  output [3:0] umbralMF_out;
  (* src = "maquina.v:5" *)
  input [3:0] umbralVC;
  (* src = "maquina.v:15" *)
  output [3:0] umbralVC_out;
  (* src = "maquina.v:25" *)
  wire update;
  NOT _099_ (
    .A(state_est[3]),
    .Y(_070_)
  );
  NOT _100_ (
    .A(Fifo_errors[0]),
    .Y(_071_)
  );
  NOT _101_ (
    .A(Fifo_errors[1]),
    .Y(_072_)
  );
  NOT _102_ (
    .A(state_est[1]),
    .Y(_073_)
  );
  NOT _103_ (
    .A(Fifo_errors[4]),
    .Y(_074_)
  );
  NOT _104_ (
    .A(init),
    .Y(_075_)
  );
  NOT _105_ (
    .A(Fifo_empties[0]),
    .Y(_076_)
  );
  NAND _106_ (
    .A(_070_),
    .B(state_est[0]),
    .Y(_077_)
  );
  NOR _107_ (
    .A(state_est[3]),
    .B(state_est[2]),
    .Y(_078_)
  );
  NOR _108_ (
    .A(state_est[2]),
    .B(_077_),
    .Y(_079_)
  );
  NAND _109_ (
    .A(state_est[0]),
    .B(_078_),
    .Y(_080_)
  );
  NAND _110_ (
    .A(_073_),
    .B(_079_),
    .Y(_081_)
  );
  NOT _111_ (
    .A(_081_),
    .Y(init_out)
  );
  NAND _112_ (
    .A(umbralVC[0]),
    .B(init_out),
    .Y(_082_)
  );
  NAND _113_ (
    .A(umbralVC_out[0]),
    .B(_081_),
    .Y(_083_)
  );
  NAND _114_ (
    .A(_082_),
    .B(_083_),
    .Y(_084_)
  );
  NOT _115_ (
    .A(_084_),
    .Y(_085_)
  );
  NOR _116_ (
    .A(reset),
    .B(_085_),
    .Y(_003_[0])
  );
  NAND _117_ (
    .A(umbralVC[1]),
    .B(init_out),
    .Y(_086_)
  );
  NAND _118_ (
    .A(umbralVC_out[1]),
    .B(_081_),
    .Y(_087_)
  );
  NAND _119_ (
    .A(_086_),
    .B(_087_),
    .Y(_088_)
  );
  NOT _120_ (
    .A(_088_),
    .Y(_089_)
  );
  NOR _121_ (
    .A(reset),
    .B(_089_),
    .Y(_003_[1])
  );
  NAND _122_ (
    .A(umbralVC[2]),
    .B(init_out),
    .Y(_090_)
  );
  NAND _123_ (
    .A(umbralVC_out[2]),
    .B(_081_),
    .Y(_091_)
  );
  NAND _124_ (
    .A(_090_),
    .B(_091_),
    .Y(_092_)
  );
  NOT _125_ (
    .A(_092_),
    .Y(_093_)
  );
  NOR _126_ (
    .A(reset),
    .B(_093_),
    .Y(_003_[2])
  );
  NAND _127_ (
    .A(umbralVC[3]),
    .B(init_out),
    .Y(_094_)
  );
  NAND _128_ (
    .A(umbralVC_out[3]),
    .B(_081_),
    .Y(_095_)
  );
  NAND _129_ (
    .A(_094_),
    .B(_095_),
    .Y(_096_)
  );
  NOT _130_ (
    .A(_096_),
    .Y(_097_)
  );
  NOR _131_ (
    .A(reset),
    .B(_097_),
    .Y(_003_[3])
  );
  NAND _132_ (
    .A(_071_),
    .B(_072_),
    .Y(_098_)
  );
  NOR _133_ (
    .A(Fifo_errors[2]),
    .B(Fifo_errors[3]),
    .Y(_004_)
  );
  NAND _134_ (
    .A(_074_),
    .B(_004_),
    .Y(_005_)
  );
  NOR _135_ (
    .A(_098_),
    .B(_005_),
    .Y(_006_)
  );
  NOR _136_ (
    .A(state_est[3]),
    .B(state_est[0]),
    .Y(_007_)
  );
  NOR _137_ (
    .A(state_est[1]),
    .B(reset),
    .Y(_008_)
  );
  NAND _138_ (
    .A(_007_),
    .B(_008_),
    .Y(_009_)
  );
  NOT _139_ (
    .A(_009_),
    .Y(_010_)
  );
  NAND _140_ (
    .A(state_est[2]),
    .B(_010_),
    .Y(_011_)
  );
  NOR _141_ (
    .A(_006_),
    .B(_011_),
    .Y(error_out)
  );
  NAND _142_ (
    .A(umbralD[0]),
    .B(init_out),
    .Y(_012_)
  );
  NAND _143_ (
    .A(umbralD_out[0]),
    .B(_081_),
    .Y(_013_)
  );
  NAND _144_ (
    .A(_012_),
    .B(_013_),
    .Y(_014_)
  );
  NOT _145_ (
    .A(_014_),
    .Y(_015_)
  );
  NOR _146_ (
    .A(reset),
    .B(_015_),
    .Y(_001_[0])
  );
  NAND _147_ (
    .A(umbralD[1]),
    .B(init_out),
    .Y(_016_)
  );
  NAND _148_ (
    .A(umbralD_out[1]),
    .B(_081_),
    .Y(_017_)
  );
  NAND _149_ (
    .A(_016_),
    .B(_017_),
    .Y(_018_)
  );
  NOT _150_ (
    .A(_018_),
    .Y(_019_)
  );
  NOR _151_ (
    .A(reset),
    .B(_019_),
    .Y(_001_[1])
  );
  NAND _152_ (
    .A(umbralD[2]),
    .B(init_out),
    .Y(_020_)
  );
  NAND _153_ (
    .A(umbralD_out[2]),
    .B(_081_),
    .Y(_021_)
  );
  NAND _154_ (
    .A(_020_),
    .B(_021_),
    .Y(_022_)
  );
  NOT _155_ (
    .A(_022_),
    .Y(_023_)
  );
  NOR _156_ (
    .A(reset),
    .B(_023_),
    .Y(_001_[2])
  );
  NAND _157_ (
    .A(umbralD[3]),
    .B(init_out),
    .Y(_024_)
  );
  NAND _158_ (
    .A(umbralD_out[3]),
    .B(_081_),
    .Y(_025_)
  );
  NAND _159_ (
    .A(_024_),
    .B(_025_),
    .Y(_026_)
  );
  NOT _160_ (
    .A(_026_),
    .Y(_027_)
  );
  NOR _161_ (
    .A(reset),
    .B(_027_),
    .Y(_001_[3])
  );
  NOR _162_ (
    .A(init),
    .B(_006_),
    .Y(_028_)
  );
  NOR _163_ (
    .A(_073_),
    .B(_080_),
    .Y(_029_)
  );
  NAND _164_ (
    .A(state_est[1]),
    .B(_079_),
    .Y(_030_)
  );
  NOR _165_ (
    .A(_028_),
    .B(_030_),
    .Y(_031_)
  );
  NOR _166_ (
    .A(init),
    .B(_076_),
    .Y(_032_)
  );
  NAND _167_ (
    .A(Fifo_empties[1]),
    .B(Fifo_empties[2]),
    .Y(_033_)
  );
  NAND _168_ (
    .A(Fifo_empties[3]),
    .B(Fifo_empties[4]),
    .Y(_034_)
  );
  NOR _169_ (
    .A(_033_),
    .B(_034_),
    .Y(_035_)
  );
  NAND _170_ (
    .A(_032_),
    .B(_035_),
    .Y(_036_)
  );
  NOR _171_ (
    .A(state_est[2]),
    .B(_073_),
    .Y(_037_)
  );
  NAND _172_ (
    .A(state_est[1]),
    .B(_007_),
    .Y(_038_)
  );
  NOR _173_ (
    .A(state_est[2]),
    .B(_038_),
    .Y(_039_)
  );
  NAND _174_ (
    .A(_007_),
    .B(_037_),
    .Y(_040_)
  );
  NAND _175_ (
    .A(_036_),
    .B(_039_),
    .Y(_041_)
  );
  NOR _176_ (
    .A(state_est[2]),
    .B(_009_),
    .Y(_042_)
  );
  NOT _177_ (
    .A(_042_),
    .Y(_043_)
  );
  NAND _178_ (
    .A(_041_),
    .B(_043_),
    .Y(_044_)
  );
  NOR _179_ (
    .A(_031_),
    .B(_044_),
    .Y(_045_)
  );
  NOT _180_ (
    .A(_045_),
    .Y(next_state_est[0])
  );
  NOR _181_ (
    .A(reset),
    .B(_045_),
    .Y(_000_[0])
  );
  NAND _182_ (
    .A(_075_),
    .B(_039_),
    .Y(_046_)
  );
  NAND _183_ (
    .A(_081_),
    .B(_046_),
    .Y(_047_)
  );
  NAND _184_ (
    .A(_075_),
    .B(_006_),
    .Y(_048_)
  );
  NOR _185_ (
    .A(_030_),
    .B(_048_),
    .Y(active_out)
  );
  NAND _186_ (
    .A(_006_),
    .B(_029_),
    .Y(_049_)
  );
  NOR _187_ (
    .A(init),
    .B(_049_),
    .Y(_050_)
  );
  NOR _188_ (
    .A(_047_),
    .B(_050_),
    .Y(_051_)
  );
  NOT _189_ (
    .A(_051_),
    .Y(next_state_est[1])
  );
  NOR _190_ (
    .A(reset),
    .B(_051_),
    .Y(_000_[1])
  );
  NAND _191_ (
    .A(_028_),
    .B(_029_),
    .Y(_052_)
  );
  NAND _192_ (
    .A(_011_),
    .B(_052_),
    .Y(next_state_est[2])
  );
  NOT _193_ (
    .A(next_state_est[2]),
    .Y(_053_)
  );
  NOR _194_ (
    .A(reset),
    .B(_053_),
    .Y(_000_[2])
  );
  NOR _195_ (
    .A(_036_),
    .B(_040_),
    .Y(idle_out)
  );
  NAND _196_ (
    .A(umbralMF[0]),
    .B(init_out),
    .Y(_054_)
  );
  NAND _197_ (
    .A(umbralMF_out[0]),
    .B(_081_),
    .Y(_055_)
  );
  NAND _198_ (
    .A(_054_),
    .B(_055_),
    .Y(_056_)
  );
  NOT _199_ (
    .A(_056_),
    .Y(_057_)
  );
  NOR _200_ (
    .A(reset),
    .B(_057_),
    .Y(_002_[0])
  );
  NAND _201_ (
    .A(umbralMF[1]),
    .B(init_out),
    .Y(_058_)
  );
  NAND _202_ (
    .A(umbralMF_out[1]),
    .B(_081_),
    .Y(_059_)
  );
  NAND _203_ (
    .A(_058_),
    .B(_059_),
    .Y(_060_)
  );
  NOT _204_ (
    .A(_060_),
    .Y(_061_)
  );
  NOR _205_ (
    .A(reset),
    .B(_061_),
    .Y(_002_[1])
  );
  NAND _206_ (
    .A(umbralMF[2]),
    .B(init_out),
    .Y(_062_)
  );
  NAND _207_ (
    .A(umbralMF_out[2]),
    .B(_081_),
    .Y(_063_)
  );
  NAND _208_ (
    .A(_062_),
    .B(_063_),
    .Y(_064_)
  );
  NOT _209_ (
    .A(_064_),
    .Y(_065_)
  );
  NOR _210_ (
    .A(reset),
    .B(_065_),
    .Y(_002_[2])
  );
  NAND _211_ (
    .A(umbralMF[3]),
    .B(init_out),
    .Y(_066_)
  );
  NAND _212_ (
    .A(umbralMF_out[3]),
    .B(_081_),
    .Y(_067_)
  );
  NAND _213_ (
    .A(_066_),
    .B(_067_),
    .Y(_068_)
  );
  NOT _214_ (
    .A(_068_),
    .Y(_069_)
  );
  NOR _215_ (
    .A(reset),
    .B(_069_),
    .Y(_002_[3])
  );
  (* src = "maquina.v:27" *)
  DFF _216_ (
    .C(clk),
    .D(_003_[0]),
    .Q(umbralVC_out[0])
  );
  (* src = "maquina.v:27" *)
  DFF _217_ (
    .C(clk),
    .D(_003_[1]),
    .Q(umbralVC_out[1])
  );
  (* src = "maquina.v:27" *)
  DFF _218_ (
    .C(clk),
    .D(_003_[2]),
    .Q(umbralVC_out[2])
  );
  (* src = "maquina.v:27" *)
  DFF _219_ (
    .C(clk),
    .D(_003_[3]),
    .Q(umbralVC_out[3])
  );
  (* src = "maquina.v:27" *)
  DFF _220_ (
    .C(clk),
    .D(_002_[0]),
    .Q(umbralMF_out[0])
  );
  (* src = "maquina.v:27" *)
  DFF _221_ (
    .C(clk),
    .D(_002_[1]),
    .Q(umbralMF_out[1])
  );
  (* src = "maquina.v:27" *)
  DFF _222_ (
    .C(clk),
    .D(_002_[2]),
    .Q(umbralMF_out[2])
  );
  (* src = "maquina.v:27" *)
  DFF _223_ (
    .C(clk),
    .D(_002_[3]),
    .Q(umbralMF_out[3])
  );
  (* src = "maquina.v:27" *)
  DFF _224_ (
    .C(clk),
    .D(_001_[0]),
    .Q(umbralD_out[0])
  );
  (* src = "maquina.v:27" *)
  DFF _225_ (
    .C(clk),
    .D(_001_[1]),
    .Q(umbralD_out[1])
  );
  (* src = "maquina.v:27" *)
  DFF _226_ (
    .C(clk),
    .D(_001_[2]),
    .Q(umbralD_out[2])
  );
  (* src = "maquina.v:27" *)
  DFF _227_ (
    .C(clk),
    .D(_001_[3]),
    .Q(umbralD_out[3])
  );
  (* src = "maquina.v:27" *)
  DFF _228_ (
    .C(clk),
    .D(_000_[0]),
    .Q(state_est[0])
  );
  (* src = "maquina.v:27" *)
  DFF _229_ (
    .C(clk),
    .D(_000_[1]),
    .Q(state_est[1])
  );
  (* src = "maquina.v:27" *)
  DFF _230_ (
    .C(clk),
    .D(_000_[2]),
    .Q(state_est[2])
  );
  (* src = "maquina.v:27" *)
  DFF _231_ (
    .C(clk),
    .D(1'h0),
    .Q(state_est[3])
  );
  assign _000_[3] = 1'h0;
  assign next_state_est[3] = 1'h0;
  assign update = init_out;
endmodule

(* dynports =  1  *)
(* src = "memoria.v:1" *)
module \$paramod\memoria\BITNUMBER=6\LENGTH=16 (data_in, ptr_write, ptr_read, reset, clk, read, write, data_out);
  wire _0000_;
  wire _0001_;
  wire _0002_;
  wire _0003_;
  wire _0004_;
  wire _0005_;
  wire _0006_;
  wire _0007_;
  wire _0008_;
  wire _0009_;
  wire _0010_;
  wire _0011_;
  wire _0012_;
  wire _0013_;
  wire _0014_;
  wire _0015_;
  wire _0016_;
  wire _0017_;
  wire _0018_;
  wire _0019_;
  wire _0020_;
  wire _0021_;
  wire _0022_;
  wire _0023_;
  wire _0024_;
  wire _0025_;
  wire _0026_;
  wire _0027_;
  wire _0028_;
  wire _0029_;
  wire _0030_;
  wire _0031_;
  wire _0032_;
  wire _0033_;
  wire _0034_;
  wire _0035_;
  wire _0036_;
  wire _0037_;
  wire _0038_;
  wire _0039_;
  wire _0040_;
  wire _0041_;
  wire _0042_;
  wire _0043_;
  wire _0044_;
  wire _0045_;
  wire _0046_;
  wire _0047_;
  wire _0048_;
  wire _0049_;
  wire _0050_;
  wire _0051_;
  wire _0052_;
  wire _0053_;
  wire _0054_;
  wire _0055_;
  wire _0056_;
  wire _0057_;
  wire _0058_;
  wire _0059_;
  wire _0060_;
  wire _0061_;
  wire _0062_;
  wire _0063_;
  wire _0064_;
  wire _0065_;
  wire _0066_;
  wire _0067_;
  wire _0068_;
  wire _0069_;
  wire _0070_;
  wire _0071_;
  wire _0072_;
  wire _0073_;
  wire _0074_;
  wire _0075_;
  wire _0076_;
  wire _0077_;
  wire _0078_;
  wire _0079_;
  wire _0080_;
  wire _0081_;
  wire _0082_;
  wire _0083_;
  wire _0084_;
  wire _0085_;
  wire _0086_;
  wire _0087_;
  wire _0088_;
  wire _0089_;
  wire _0090_;
  wire _0091_;
  wire _0092_;
  wire _0093_;
  wire _0094_;
  wire _0095_;
  wire _0096_;
  wire _0097_;
  wire _0098_;
  wire _0099_;
  wire _0100_;
  wire _0101_;
  wire _0102_;
  wire _0103_;
  wire _0104_;
  wire _0105_;
  wire _0106_;
  wire _0107_;
  wire _0108_;
  wire _0109_;
  wire _0110_;
  wire _0111_;
  wire _0112_;
  wire _0113_;
  wire _0114_;
  wire _0115_;
  wire _0116_;
  wire _0117_;
  wire _0118_;
  wire _0119_;
  wire _0120_;
  wire _0121_;
  wire _0122_;
  wire _0123_;
  wire _0124_;
  wire _0125_;
  wire _0126_;
  wire _0127_;
  wire _0128_;
  wire _0129_;
  wire _0130_;
  wire _0131_;
  wire _0132_;
  wire _0133_;
  wire _0134_;
  wire _0135_;
  wire _0136_;
  wire _0137_;
  wire _0138_;
  wire _0139_;
  wire _0140_;
  wire _0141_;
  wire _0142_;
  wire _0143_;
  wire _0144_;
  wire _0145_;
  wire _0146_;
  wire _0147_;
  wire _0148_;
  wire _0149_;
  wire _0150_;
  wire _0151_;
  wire _0152_;
  wire _0153_;
  wire _0154_;
  wire _0155_;
  wire _0156_;
  wire _0157_;
  wire _0158_;
  wire _0159_;
  wire _0160_;
  wire _0161_;
  wire _0162_;
  wire _0163_;
  wire _0164_;
  wire _0165_;
  wire _0166_;
  wire _0167_;
  wire _0168_;
  wire _0169_;
  wire _0170_;
  wire _0171_;
  wire _0172_;
  wire _0173_;
  wire _0174_;
  wire _0175_;
  wire _0176_;
  wire _0177_;
  wire _0178_;
  wire _0179_;
  wire _0180_;
  wire _0181_;
  wire _0182_;
  wire _0183_;
  wire _0184_;
  wire _0185_;
  wire _0186_;
  wire _0187_;
  wire _0188_;
  wire _0189_;
  wire _0190_;
  wire _0191_;
  wire _0192_;
  wire _0193_;
  wire _0194_;
  wire _0195_;
  wire _0196_;
  wire _0197_;
  wire _0198_;
  wire _0199_;
  wire _0200_;
  wire _0201_;
  wire _0202_;
  wire _0203_;
  wire _0204_;
  wire _0205_;
  wire _0206_;
  wire _0207_;
  wire _0208_;
  wire _0209_;
  wire _0210_;
  wire _0211_;
  wire _0212_;
  wire _0213_;
  wire _0214_;
  wire _0215_;
  wire _0216_;
  wire _0217_;
  wire _0218_;
  wire _0219_;
  wire _0220_;
  wire _0221_;
  wire _0222_;
  wire _0223_;
  wire _0224_;
  wire _0225_;
  wire _0226_;
  wire _0227_;
  wire _0228_;
  wire _0229_;
  wire _0230_;
  wire _0231_;
  wire _0232_;
  wire _0233_;
  wire _0234_;
  wire _0235_;
  wire _0236_;
  wire _0237_;
  wire _0238_;
  wire _0239_;
  wire _0240_;
  wire _0241_;
  wire _0242_;
  wire _0243_;
  wire _0244_;
  wire _0245_;
  wire _0246_;
  wire _0247_;
  wire _0248_;
  wire _0249_;
  wire _0250_;
  wire _0251_;
  wire _0252_;
  wire _0253_;
  wire _0254_;
  wire _0255_;
  wire _0256_;
  wire _0257_;
  wire _0258_;
  wire _0259_;
  wire _0260_;
  wire _0261_;
  wire _0262_;
  wire _0263_;
  wire _0264_;
  wire _0265_;
  wire _0266_;
  wire _0267_;
  wire _0268_;
  wire _0269_;
  wire _0270_;
  wire _0271_;
  wire _0272_;
  wire _0273_;
  wire _0274_;
  wire _0275_;
  wire _0276_;
  wire _0277_;
  wire _0278_;
  wire _0279_;
  wire _0280_;
  wire _0281_;
  wire _0282_;
  wire _0283_;
  wire _0284_;
  wire _0285_;
  wire _0286_;
  wire _0287_;
  wire _0288_;
  wire _0289_;
  wire _0290_;
  wire _0291_;
  wire _0292_;
  wire _0293_;
  wire _0294_;
  wire _0295_;
  wire _0296_;
  wire _0297_;
  wire _0298_;
  wire _0299_;
  wire _0300_;
  wire _0301_;
  wire _0302_;
  wire _0303_;
  wire _0304_;
  wire _0305_;
  wire _0306_;
  wire _0307_;
  wire _0308_;
  wire _0309_;
  wire _0310_;
  wire _0311_;
  wire _0312_;
  wire _0313_;
  wire _0314_;
  wire _0315_;
  wire _0316_;
  wire _0317_;
  wire _0318_;
  wire _0319_;
  wire _0320_;
  wire _0321_;
  wire _0322_;
  wire _0323_;
  wire _0324_;
  wire _0325_;
  wire _0326_;
  wire _0327_;
  wire _0328_;
  wire _0329_;
  wire _0330_;
  wire _0331_;
  wire _0332_;
  wire _0333_;
  wire _0334_;
  wire _0335_;
  wire _0336_;
  wire _0337_;
  wire _0338_;
  wire _0339_;
  wire _0340_;
  wire _0341_;
  wire _0342_;
  wire _0343_;
  wire _0344_;
  wire _0345_;
  wire _0346_;
  wire _0347_;
  wire _0348_;
  wire _0349_;
  wire _0350_;
  wire _0351_;
  wire _0352_;
  wire _0353_;
  wire _0354_;
  wire _0355_;
  wire _0356_;
  wire _0357_;
  wire _0358_;
  wire _0359_;
  wire _0360_;
  wire _0361_;
  wire _0362_;
  wire _0363_;
  wire _0364_;
  wire _0365_;
  wire _0366_;
  wire _0367_;
  wire _0368_;
  wire _0369_;
  wire _0370_;
  wire _0371_;
  wire _0372_;
  wire _0373_;
  wire _0374_;
  wire _0375_;
  wire _0376_;
  wire _0377_;
  wire _0378_;
  wire _0379_;
  wire _0380_;
  wire _0381_;
  wire _0382_;
  wire _0383_;
  wire _0384_;
  wire _0385_;
  wire _0386_;
  wire _0387_;
  wire _0388_;
  wire _0389_;
  wire _0390_;
  wire _0391_;
  wire _0392_;
  wire _0393_;
  wire _0394_;
  wire _0395_;
  wire _0396_;
  wire _0397_;
  wire _0398_;
  wire _0399_;
  wire _0400_;
  wire _0401_;
  wire _0402_;
  wire _0403_;
  wire _0404_;
  wire _0405_;
  wire _0406_;
  wire _0407_;
  wire _0408_;
  wire _0409_;
  wire _0410_;
  wire _0411_;
  wire _0412_;
  wire _0413_;
  wire _0414_;
  wire _0415_;
  wire _0416_;
  wire _0417_;
  wire _0418_;
  wire _0419_;
  wire _0420_;
  wire _0421_;
  wire _0422_;
  wire _0423_;
  wire _0424_;
  wire _0425_;
  wire _0426_;
  wire _0427_;
  wire _0428_;
  wire _0429_;
  wire _0430_;
  wire _0431_;
  wire _0432_;
  wire _0433_;
  wire _0434_;
  wire _0435_;
  wire _0436_;
  wire _0437_;
  wire _0438_;
  wire _0439_;
  wire _0440_;
  wire _0441_;
  wire _0442_;
  wire _0443_;
  wire _0444_;
  wire _0445_;
  wire _0446_;
  wire _0447_;
  wire _0448_;
  wire _0449_;
  wire _0450_;
  wire _0451_;
  wire _0452_;
  wire _0453_;
  wire _0454_;
  wire _0455_;
  wire _0456_;
  wire _0457_;
  wire _0458_;
  wire _0459_;
  wire _0460_;
  wire _0461_;
  wire _0462_;
  wire _0463_;
  wire _0464_;
  wire _0465_;
  wire _0466_;
  wire _0467_;
  wire _0468_;
  wire _0469_;
  wire _0470_;
  wire _0471_;
  wire _0472_;
  wire _0473_;
  wire _0474_;
  wire _0475_;
  wire _0476_;
  wire _0477_;
  wire _0478_;
  wire _0479_;
  wire _0480_;
  wire _0481_;
  wire _0482_;
  wire _0483_;
  wire _0484_;
  wire _0485_;
  wire _0486_;
  wire _0487_;
  wire _0488_;
  wire _0489_;
  wire _0490_;
  wire _0491_;
  wire _0492_;
  wire _0493_;
  wire _0494_;
  wire _0495_;
  wire _0496_;
  wire _0497_;
  wire _0498_;
  wire _0499_;
  wire _0500_;
  wire _0501_;
  wire _0502_;
  wire _0503_;
  wire _0504_;
  wire _0505_;
  wire _0506_;
  wire _0507_;
  wire _0508_;
  wire _0509_;
  wire _0510_;
  wire _0511_;
  wire _0512_;
  wire _0513_;
  wire _0514_;
  wire _0515_;
  wire _0516_;
  wire _0517_;
  wire _0518_;
  wire _0519_;
  wire _0520_;
  wire _0521_;
  wire _0522_;
  wire _0523_;
  wire _0524_;
  wire _0525_;
  wire _0526_;
  wire _0527_;
  wire _0528_;
  wire _0529_;
  wire _0530_;
  wire _0531_;
  wire _0532_;
  wire _0533_;
  wire _0534_;
  wire _0535_;
  wire _0536_;
  wire _0537_;
  wire _0538_;
  wire _0539_;
  wire _0540_;
  wire _0541_;
  wire _0542_;
  wire _0543_;
  wire _0544_;
  wire _0545_;
  wire _0546_;
  wire _0547_;
  wire _0548_;
  wire _0549_;
  wire _0550_;
  wire _0551_;
  wire _0552_;
  wire _0553_;
  wire _0554_;
  wire _0555_;
  wire _0556_;
  wire _0557_;
  wire _0558_;
  wire _0559_;
  wire _0560_;
  wire _0561_;
  wire _0562_;
  wire _0563_;
  wire _0564_;
  wire _0565_;
  wire _0566_;
  wire _0567_;
  wire _0568_;
  wire _0569_;
  wire _0570_;
  wire _0571_;
  wire _0572_;
  wire _0573_;
  wire _0574_;
  wire _0575_;
  wire _0576_;
  wire _0577_;
  wire _0578_;
  wire _0579_;
  wire _0580_;
  wire _0581_;
  wire _0582_;
  wire _0583_;
  wire _0584_;
  wire _0585_;
  wire _0586_;
  wire _0587_;
  wire _0588_;
  wire _0589_;
  wire _0590_;
  wire _0591_;
  wire _0592_;
  wire _0593_;
  wire _0594_;
  wire _0595_;
  wire _0596_;
  wire _0597_;
  wire _0598_;
  wire _0599_;
  wire _0600_;
  wire _0601_;
  wire _0602_;
  wire _0603_;
  wire _0604_;
  wire _0605_;
  wire _0606_;
  wire _0607_;
  wire _0608_;
  wire _0609_;
  wire _0610_;
  wire _0611_;
  wire _0612_;
  wire _0613_;
  wire _0614_;
  wire _0615_;
  wire _0616_;
  wire _0617_;
  wire _0618_;
  wire _0619_;
  wire _0620_;
  wire _0621_;
  wire _0622_;
  wire _0623_;
  wire _0624_;
  wire _0625_;
  wire _0626_;
  wire _0627_;
  wire _0628_;
  wire _0629_;
  wire _0630_;
  wire _0631_;
  wire _0632_;
  wire _0633_;
  wire _0634_;
  wire _0635_;
  wire _0636_;
  wire _0637_;
  wire _0638_;
  wire _0639_;
  wire _0640_;
  wire _0641_;
  wire _0642_;
  wire _0643_;
  wire _0644_;
  wire _0645_;
  wire _0646_;
  wire _0647_;
  wire _0648_;
  wire _0649_;
  wire _0650_;
  wire _0651_;
  wire _0652_;
  wire _0653_;
  wire _0654_;
  wire _0655_;
  wire _0656_;
  wire _0657_;
  wire _0658_;
  wire _0659_;
  wire _0660_;
  wire _0661_;
  wire _0662_;
  wire _0663_;
  wire _0664_;
  wire _0665_;
  wire _0666_;
  wire _0667_;
  wire _0668_;
  wire _0669_;
  wire _0670_;
  wire _0671_;
  wire _0672_;
  wire _0673_;
  wire _0674_;
  wire _0675_;
  wire _0676_;
  wire _0677_;
  wire _0678_;
  wire _0679_;
  wire _0680_;
  wire _0681_;
  wire _0682_;
  wire _0683_;
  wire _0684_;
  wire _0685_;
  wire _0686_;
  wire _0687_;
  wire _0688_;
  wire _0689_;
  wire _0690_;
  wire _0691_;
  wire _0692_;
  wire _0693_;
  wire _0694_;
  wire _0695_;
  wire _0696_;
  wire _0697_;
  wire _0698_;
  wire _0699_;
  wire _0700_;
  wire _0701_;
  wire _0702_;
  wire _0703_;
  wire _0704_;
  wire _0705_;
  wire _0706_;
  wire _0707_;
  wire _0708_;
  wire _0709_;
  wire _0710_;
  wire _0711_;
  wire _0712_;
  wire _0713_;
  wire _0714_;
  wire _0715_;
  wire _0716_;
  wire _0717_;
  wire _0718_;
  wire _0719_;
  wire _0720_;
  wire _0721_;
  wire _0722_;
  wire _0723_;
  wire _0724_;
  wire _0725_;
  wire _0726_;
  wire _0727_;
  wire _0728_;
  wire _0729_;
  wire _0730_;
  wire _0731_;
  wire _0732_;
  wire _0733_;
  wire _0734_;
  wire _0735_;
  wire _0736_;
  wire _0737_;
  wire _0738_;
  wire _0739_;
  wire _0740_;
  wire _0741_;
  wire _0742_;
  wire _0743_;
  wire _0744_;
  wire _0745_;
  wire _0746_;
  wire _0747_;
  wire _0748_;
  wire _0749_;
  wire _0750_;
  wire _0751_;
  wire _0752_;
  wire _0753_;
  wire _0754_;
  wire _0755_;
  wire _0756_;
  wire _0757_;
  wire _0758_;
  wire _0759_;
  wire _0760_;
  wire _0761_;
  wire _0762_;
  wire _0763_;
  wire _0764_;
  wire _0765_;
  wire _0766_;
  wire _0767_;
  wire _0768_;
  wire _0769_;
  wire _0770_;
  wire _0771_;
  wire _0772_;
  wire _0773_;
  wire _0774_;
  wire _0775_;
  wire _0776_;
  wire _0777_;
  wire _0778_;
  wire _0779_;
  wire _0780_;
  wire _0781_;
  wire _0782_;
  wire _0783_;
  wire _0784_;
  wire _0785_;
  wire _0786_;
  wire _0787_;
  wire _0788_;
  wire _0789_;
  wire _0790_;
  wire _0791_;
  wire _0792_;
  wire _0793_;
  wire _0794_;
  wire _0795_;
  wire _0796_;
  wire _0797_;
  wire _0798_;
  wire _0799_;
  wire _0800_;
  wire _0801_;
  wire _0802_;
  wire _0803_;
  wire _0804_;
  wire _0805_;
  wire _0806_;
  wire _0807_;
  wire _0808_;
  wire _0809_;
  wire _0810_;
  wire _0811_;
  wire _0812_;
  wire _0813_;
  wire _0814_;
  wire _0815_;
  wire _0816_;
  wire _0817_;
  wire _0818_;
  wire _0819_;
  wire _0820_;
  wire _0821_;
  wire _0822_;
  wire _0823_;
  wire _0824_;
  wire _0825_;
  wire _0826_;
  wire _0827_;
  wire _0828_;
  wire _0829_;
  (* src = "memoria.v:7" *)
  input clk;
  (* src = "memoria.v:3" *)
  input [5:0] data_in;
  (* src = "memoria.v:10" *)
  output [5:0] data_out;
  (* src = "memoria.v:13" *)
  wire [31:0] k;
  wire [5:0] \mem[0] ;
  wire [5:0] \mem[10] ;
  wire [5:0] \mem[11] ;
  wire [5:0] \mem[12] ;
  wire [5:0] \mem[13] ;
  wire [5:0] \mem[14] ;
  wire [5:0] \mem[15] ;
  wire [5:0] \mem[1] ;
  wire [5:0] \mem[2] ;
  wire [5:0] \mem[3] ;
  wire [5:0] \mem[4] ;
  wire [5:0] \mem[5] ;
  wire [5:0] \mem[6] ;
  wire [5:0] \mem[7] ;
  wire [5:0] \mem[8] ;
  wire [5:0] \mem[9] ;
  (* src = "memoria.v:5" *)
  input [3:0] ptr_read;
  (* src = "memoria.v:4" *)
  input [3:0] ptr_write;
  (* src = "memoria.v:8" *)
  input read;
  (* src = "memoria.v:6" *)
  input reset;
  (* src = "memoria.v:9" *)
  input write;
  NOT _0830_ (
    .A(\mem[7] [1]),
    .Y(_0136_)
  );
  NOT _0831_ (
    .A(\mem[7] [2]),
    .Y(_0137_)
  );
  NOT _0832_ (
    .A(\mem[7] [3]),
    .Y(_0138_)
  );
  NOT _0833_ (
    .A(\mem[7] [4]),
    .Y(_0139_)
  );
  NOT _0834_ (
    .A(\mem[7] [5]),
    .Y(_0140_)
  );
  NOT _0835_ (
    .A(\mem[8] [0]),
    .Y(_0141_)
  );
  NOT _0836_ (
    .A(\mem[8] [1]),
    .Y(_0142_)
  );
  NOT _0837_ (
    .A(\mem[8] [2]),
    .Y(_0143_)
  );
  NOT _0838_ (
    .A(\mem[8] [3]),
    .Y(_0144_)
  );
  NOT _0839_ (
    .A(\mem[8] [4]),
    .Y(_0145_)
  );
  NOT _0840_ (
    .A(\mem[8] [5]),
    .Y(_0146_)
  );
  NOT _0841_ (
    .A(\mem[9] [0]),
    .Y(_0147_)
  );
  NOT _0842_ (
    .A(\mem[9] [1]),
    .Y(_0148_)
  );
  NOT _0843_ (
    .A(\mem[9] [2]),
    .Y(_0149_)
  );
  NOT _0844_ (
    .A(\mem[9] [3]),
    .Y(_0150_)
  );
  NOT _0845_ (
    .A(\mem[9] [4]),
    .Y(_0151_)
  );
  NOT _0846_ (
    .A(\mem[9] [5]),
    .Y(_0152_)
  );
  NOT _0847_ (
    .A(\mem[10] [0]),
    .Y(_0153_)
  );
  NOT _0848_ (
    .A(\mem[10] [1]),
    .Y(_0154_)
  );
  NOT _0849_ (
    .A(\mem[10] [2]),
    .Y(_0155_)
  );
  NOT _0850_ (
    .A(\mem[10] [3]),
    .Y(_0156_)
  );
  NOT _0851_ (
    .A(\mem[10] [4]),
    .Y(_0157_)
  );
  NOT _0852_ (
    .A(\mem[10] [5]),
    .Y(_0158_)
  );
  NOT _0853_ (
    .A(\mem[11] [0]),
    .Y(_0159_)
  );
  NOT _0854_ (
    .A(\mem[11] [1]),
    .Y(_0160_)
  );
  NOT _0855_ (
    .A(\mem[11] [2]),
    .Y(_0161_)
  );
  NOT _0856_ (
    .A(\mem[11] [3]),
    .Y(_0162_)
  );
  NOT _0857_ (
    .A(\mem[11] [4]),
    .Y(_0163_)
  );
  NOT _0858_ (
    .A(\mem[11] [5]),
    .Y(_0164_)
  );
  NOT _0859_ (
    .A(\mem[12] [0]),
    .Y(_0165_)
  );
  NOT _0860_ (
    .A(\mem[12] [1]),
    .Y(_0166_)
  );
  NOT _0861_ (
    .A(\mem[12] [2]),
    .Y(_0167_)
  );
  NOT _0862_ (
    .A(\mem[12] [3]),
    .Y(_0168_)
  );
  NOT _0863_ (
    .A(\mem[12] [4]),
    .Y(_0169_)
  );
  NOT _0864_ (
    .A(\mem[12] [5]),
    .Y(_0170_)
  );
  NOT _0865_ (
    .A(\mem[13] [0]),
    .Y(_0171_)
  );
  NOT _0866_ (
    .A(\mem[13] [1]),
    .Y(_0172_)
  );
  NOT _0867_ (
    .A(\mem[13] [2]),
    .Y(_0173_)
  );
  NOT _0868_ (
    .A(\mem[13] [3]),
    .Y(_0174_)
  );
  NOT _0869_ (
    .A(\mem[13] [4]),
    .Y(_0175_)
  );
  NOT _0870_ (
    .A(\mem[13] [5]),
    .Y(_0176_)
  );
  NOT _0871_ (
    .A(\mem[14] [0]),
    .Y(_0177_)
  );
  NOT _0872_ (
    .A(\mem[14] [1]),
    .Y(_0178_)
  );
  NOT _0873_ (
    .A(\mem[14] [2]),
    .Y(_0179_)
  );
  NOT _0874_ (
    .A(\mem[14] [3]),
    .Y(_0180_)
  );
  NOT _0875_ (
    .A(\mem[14] [4]),
    .Y(_0181_)
  );
  NOT _0876_ (
    .A(\mem[14] [5]),
    .Y(_0182_)
  );
  NOT _0877_ (
    .A(\mem[2] [0]),
    .Y(_0183_)
  );
  NOT _0878_ (
    .A(\mem[2] [1]),
    .Y(_0184_)
  );
  NOT _0879_ (
    .A(\mem[2] [2]),
    .Y(_0185_)
  );
  NOT _0880_ (
    .A(\mem[2] [3]),
    .Y(_0186_)
  );
  NOT _0881_ (
    .A(\mem[2] [4]),
    .Y(_0187_)
  );
  NOT _0882_ (
    .A(\mem[2] [5]),
    .Y(_0188_)
  );
  NOT _0883_ (
    .A(reset),
    .Y(_0189_)
  );
  NOT _0884_ (
    .A(\mem[0] [0]),
    .Y(_0190_)
  );
  NOT _0885_ (
    .A(\mem[0] [1]),
    .Y(_0191_)
  );
  NOT _0886_ (
    .A(\mem[0] [2]),
    .Y(_0192_)
  );
  NOT _0887_ (
    .A(\mem[0] [3]),
    .Y(_0193_)
  );
  NOT _0888_ (
    .A(\mem[0] [4]),
    .Y(_0194_)
  );
  NOT _0889_ (
    .A(\mem[0] [5]),
    .Y(_0195_)
  );
  NOT _0890_ (
    .A(\mem[1] [0]),
    .Y(_0196_)
  );
  NOT _0891_ (
    .A(\mem[1] [1]),
    .Y(_0197_)
  );
  NOT _0892_ (
    .A(\mem[1] [2]),
    .Y(_0198_)
  );
  NOT _0893_ (
    .A(\mem[1] [3]),
    .Y(_0199_)
  );
  NOT _0894_ (
    .A(\mem[1] [4]),
    .Y(_0200_)
  );
  NOT _0895_ (
    .A(\mem[1] [5]),
    .Y(_0201_)
  );
  NOT _0896_ (
    .A(\mem[3] [0]),
    .Y(_0202_)
  );
  NOT _0897_ (
    .A(\mem[3] [1]),
    .Y(_0203_)
  );
  NOT _0898_ (
    .A(\mem[3] [2]),
    .Y(_0204_)
  );
  NOT _0899_ (
    .A(\mem[3] [3]),
    .Y(_0205_)
  );
  NOT _0900_ (
    .A(\mem[3] [4]),
    .Y(_0206_)
  );
  NOT _0901_ (
    .A(\mem[3] [5]),
    .Y(_0207_)
  );
  NOT _0902_ (
    .A(read),
    .Y(_0208_)
  );
  NOT _0903_ (
    .A(write),
    .Y(_0209_)
  );
  NOT _0904_ (
    .A(ptr_write[0]),
    .Y(_0210_)
  );
  NOT _0905_ (
    .A(ptr_write[1]),
    .Y(_0211_)
  );
  NOT _0906_ (
    .A(ptr_write[2]),
    .Y(_0212_)
  );
  NOT _0907_ (
    .A(ptr_write[3]),
    .Y(_0213_)
  );
  NOT _0908_ (
    .A(data_in[0]),
    .Y(_0214_)
  );
  NOT _0909_ (
    .A(data_in[1]),
    .Y(_0215_)
  );
  NOT _0910_ (
    .A(data_in[2]),
    .Y(_0216_)
  );
  NOT _0911_ (
    .A(data_in[3]),
    .Y(_0217_)
  );
  NOT _0912_ (
    .A(data_in[4]),
    .Y(_0218_)
  );
  NOT _0913_ (
    .A(data_in[5]),
    .Y(_0219_)
  );
  NOT _0914_ (
    .A(ptr_read[0]),
    .Y(_0220_)
  );
  NOT _0915_ (
    .A(\mem[6] [0]),
    .Y(_0221_)
  );
  NOT _0916_ (
    .A(\mem[7] [0]),
    .Y(_0222_)
  );
  NOT _0917_ (
    .A(\mem[6] [1]),
    .Y(_0223_)
  );
  NOT _0918_ (
    .A(\mem[6] [2]),
    .Y(_0224_)
  );
  NOT _0919_ (
    .A(\mem[6] [3]),
    .Y(_0225_)
  );
  NOT _0920_ (
    .A(\mem[6] [4]),
    .Y(_0226_)
  );
  NOT _0921_ (
    .A(\mem[6] [5]),
    .Y(_0227_)
  );
  NOT _0922_ (
    .A(\mem[4] [0]),
    .Y(_0228_)
  );
  NOT _0923_ (
    .A(\mem[5] [0]),
    .Y(_0229_)
  );
  NOT _0924_ (
    .A(\mem[4] [1]),
    .Y(_0230_)
  );
  NOT _0925_ (
    .A(\mem[5] [1]),
    .Y(_0231_)
  );
  NOT _0926_ (
    .A(\mem[4] [2]),
    .Y(_0232_)
  );
  NOT _0927_ (
    .A(\mem[5] [2]),
    .Y(_0233_)
  );
  NOT _0928_ (
    .A(\mem[4] [3]),
    .Y(_0234_)
  );
  NOT _0929_ (
    .A(\mem[5] [3]),
    .Y(_0235_)
  );
  NOT _0930_ (
    .A(\mem[4] [4]),
    .Y(_0236_)
  );
  NOT _0931_ (
    .A(\mem[5] [4]),
    .Y(_0237_)
  );
  NOT _0932_ (
    .A(\mem[4] [5]),
    .Y(_0238_)
  );
  NOT _0933_ (
    .A(\mem[5] [5]),
    .Y(_0239_)
  );
  NOT _0934_ (
    .A(ptr_read[1]),
    .Y(_0240_)
  );
  NOT _0935_ (
    .A(ptr_read[2]),
    .Y(_0241_)
  );
  NOT _0936_ (
    .A(ptr_read[3]),
    .Y(_0242_)
  );
  NOR _0937_ (
    .A(_0209_),
    .B(_0210_),
    .Y(_0243_)
  );
  NAND _0938_ (
    .A(write),
    .B(ptr_write[0]),
    .Y(_0244_)
  );
  NOR _0939_ (
    .A(reset),
    .B(_0243_),
    .Y(_0245_)
  );
  NAND _0940_ (
    .A(_0189_),
    .B(_0244_),
    .Y(_0246_)
  );
  NOR _0941_ (
    .A(_0209_),
    .B(_0211_),
    .Y(_0247_)
  );
  NAND _0942_ (
    .A(write),
    .B(ptr_write[1]),
    .Y(_0248_)
  );
  NOR _0943_ (
    .A(reset),
    .B(_0247_),
    .Y(_0249_)
  );
  NAND _0944_ (
    .A(_0189_),
    .B(_0248_),
    .Y(_0250_)
  );
  NOR _0945_ (
    .A(_0245_),
    .B(_0249_),
    .Y(_0251_)
  );
  NAND _0946_ (
    .A(_0246_),
    .B(_0250_),
    .Y(_0252_)
  );
  NOR _0947_ (
    .A(_0209_),
    .B(_0213_),
    .Y(_0253_)
  );
  NAND _0948_ (
    .A(write),
    .B(ptr_write[3]),
    .Y(_0254_)
  );
  NOR _0949_ (
    .A(reset),
    .B(_0253_),
    .Y(_0255_)
  );
  NAND _0950_ (
    .A(_0189_),
    .B(_0254_),
    .Y(_0256_)
  );
  NOR _0951_ (
    .A(_0209_),
    .B(_0212_),
    .Y(_0257_)
  );
  NAND _0952_ (
    .A(write),
    .B(ptr_write[2]),
    .Y(_0258_)
  );
  NOR _0953_ (
    .A(_0256_),
    .B(_0258_),
    .Y(_0259_)
  );
  NAND _0954_ (
    .A(_0255_),
    .B(_0257_),
    .Y(_0260_)
  );
  NOR _0955_ (
    .A(_0252_),
    .B(_0260_),
    .Y(_0261_)
  );
  NAND _0956_ (
    .A(_0251_),
    .B(_0259_),
    .Y(_0262_)
  );
  NOR _0957_ (
    .A(reset),
    .B(_0222_),
    .Y(_0263_)
  );
  NOR _0958_ (
    .A(_0261_),
    .B(_0263_),
    .Y(_0264_)
  );
  NAND _0959_ (
    .A(_0189_),
    .B(write),
    .Y(_0265_)
  );
  NOR _0960_ (
    .A(_0214_),
    .B(_0265_),
    .Y(_0266_)
  );
  NOR _0961_ (
    .A(_0262_),
    .B(_0266_),
    .Y(_0267_)
  );
  NOR _0962_ (
    .A(_0264_),
    .B(_0267_),
    .Y(_0078_)
  );
  NOR _0963_ (
    .A(_0136_),
    .B(reset),
    .Y(_0268_)
  );
  NOR _0964_ (
    .A(_0261_),
    .B(_0268_),
    .Y(_0269_)
  );
  NOR _0965_ (
    .A(_0215_),
    .B(_0265_),
    .Y(_0270_)
  );
  NOR _0966_ (
    .A(_0262_),
    .B(_0270_),
    .Y(_0271_)
  );
  NOR _0967_ (
    .A(_0269_),
    .B(_0271_),
    .Y(_0079_)
  );
  NOR _0968_ (
    .A(_0137_),
    .B(reset),
    .Y(_0272_)
  );
  NOR _0969_ (
    .A(_0261_),
    .B(_0272_),
    .Y(_0273_)
  );
  NOR _0970_ (
    .A(_0216_),
    .B(_0265_),
    .Y(_0274_)
  );
  NOR _0971_ (
    .A(_0262_),
    .B(_0274_),
    .Y(_0275_)
  );
  NOR _0972_ (
    .A(_0273_),
    .B(_0275_),
    .Y(_0080_)
  );
  NOR _0973_ (
    .A(_0138_),
    .B(reset),
    .Y(_0276_)
  );
  NOR _0974_ (
    .A(_0261_),
    .B(_0276_),
    .Y(_0277_)
  );
  NOR _0975_ (
    .A(_0217_),
    .B(_0265_),
    .Y(_0278_)
  );
  NOR _0976_ (
    .A(_0262_),
    .B(_0278_),
    .Y(_0279_)
  );
  NOR _0977_ (
    .A(_0277_),
    .B(_0279_),
    .Y(_0081_)
  );
  NOR _0978_ (
    .A(_0139_),
    .B(reset),
    .Y(_0280_)
  );
  NOR _0979_ (
    .A(_0261_),
    .B(_0280_),
    .Y(_0281_)
  );
  NOR _0980_ (
    .A(_0218_),
    .B(_0265_),
    .Y(_0282_)
  );
  NOR _0981_ (
    .A(_0262_),
    .B(_0282_),
    .Y(_0283_)
  );
  NOR _0982_ (
    .A(_0281_),
    .B(_0283_),
    .Y(_0082_)
  );
  NOR _0983_ (
    .A(_0140_),
    .B(reset),
    .Y(_0284_)
  );
  NOR _0984_ (
    .A(_0261_),
    .B(_0284_),
    .Y(_0285_)
  );
  NOR _0985_ (
    .A(_0219_),
    .B(_0265_),
    .Y(_0286_)
  );
  NOR _0986_ (
    .A(_0262_),
    .B(_0286_),
    .Y(_0287_)
  );
  NOR _0987_ (
    .A(_0285_),
    .B(_0287_),
    .Y(_0083_)
  );
  NOR _0988_ (
    .A(_0246_),
    .B(_0247_),
    .Y(_0288_)
  );
  NAND _0989_ (
    .A(_0245_),
    .B(_0248_),
    .Y(_0289_)
  );
  NOR _0990_ (
    .A(reset),
    .B(_0257_),
    .Y(_0290_)
  );
  NAND _0991_ (
    .A(_0189_),
    .B(_0258_),
    .Y(_0291_)
  );
  NOR _0992_ (
    .A(_0254_),
    .B(_0291_),
    .Y(_0292_)
  );
  NAND _0993_ (
    .A(_0253_),
    .B(_0290_),
    .Y(_0293_)
  );
  NOR _0994_ (
    .A(_0289_),
    .B(_0293_),
    .Y(_0294_)
  );
  NAND _0995_ (
    .A(_0288_),
    .B(_0292_),
    .Y(_0295_)
  );
  NOR _0996_ (
    .A(_0141_),
    .B(reset),
    .Y(_0296_)
  );
  NOR _0997_ (
    .A(_0294_),
    .B(_0296_),
    .Y(_0297_)
  );
  NOR _0998_ (
    .A(_0266_),
    .B(_0295_),
    .Y(_0298_)
  );
  NOR _0999_ (
    .A(_0297_),
    .B(_0298_),
    .Y(_0084_)
  );
  NOR _1000_ (
    .A(_0142_),
    .B(reset),
    .Y(_0299_)
  );
  NOR _1001_ (
    .A(_0294_),
    .B(_0299_),
    .Y(_0300_)
  );
  NOR _1002_ (
    .A(_0270_),
    .B(_0295_),
    .Y(_0301_)
  );
  NOR _1003_ (
    .A(_0300_),
    .B(_0301_),
    .Y(_0085_)
  );
  NOR _1004_ (
    .A(_0143_),
    .B(reset),
    .Y(_0302_)
  );
  NOR _1005_ (
    .A(_0294_),
    .B(_0302_),
    .Y(_0303_)
  );
  NOR _1006_ (
    .A(_0274_),
    .B(_0295_),
    .Y(_0304_)
  );
  NOR _1007_ (
    .A(_0303_),
    .B(_0304_),
    .Y(_0086_)
  );
  NOR _1008_ (
    .A(_0144_),
    .B(reset),
    .Y(_0305_)
  );
  NOR _1009_ (
    .A(_0294_),
    .B(_0305_),
    .Y(_0306_)
  );
  NOR _1010_ (
    .A(_0278_),
    .B(_0295_),
    .Y(_0307_)
  );
  NOR _1011_ (
    .A(_0306_),
    .B(_0307_),
    .Y(_0087_)
  );
  NOR _1012_ (
    .A(_0145_),
    .B(reset),
    .Y(_0308_)
  );
  NOR _1013_ (
    .A(_0294_),
    .B(_0308_),
    .Y(_0309_)
  );
  NOR _1014_ (
    .A(_0282_),
    .B(_0295_),
    .Y(_0310_)
  );
  NOR _1015_ (
    .A(_0309_),
    .B(_0310_),
    .Y(_0088_)
  );
  NOR _1016_ (
    .A(_0146_),
    .B(reset),
    .Y(_0311_)
  );
  NOR _1017_ (
    .A(_0294_),
    .B(_0311_),
    .Y(_0312_)
  );
  NOR _1018_ (
    .A(_0286_),
    .B(_0295_),
    .Y(_0313_)
  );
  NOR _1019_ (
    .A(_0312_),
    .B(_0313_),
    .Y(_0089_)
  );
  NOR _1020_ (
    .A(_0244_),
    .B(_0250_),
    .Y(_0314_)
  );
  NAND _1021_ (
    .A(_0243_),
    .B(_0249_),
    .Y(_0315_)
  );
  NOR _1022_ (
    .A(_0293_),
    .B(_0315_),
    .Y(_0316_)
  );
  NAND _1023_ (
    .A(_0292_),
    .B(_0314_),
    .Y(_0317_)
  );
  NOR _1024_ (
    .A(_0147_),
    .B(reset),
    .Y(_0318_)
  );
  NOR _1025_ (
    .A(_0316_),
    .B(_0318_),
    .Y(_0319_)
  );
  NOR _1026_ (
    .A(_0266_),
    .B(_0317_),
    .Y(_0320_)
  );
  NOR _1027_ (
    .A(_0319_),
    .B(_0320_),
    .Y(_0090_)
  );
  NOR _1028_ (
    .A(_0148_),
    .B(reset),
    .Y(_0321_)
  );
  NOR _1029_ (
    .A(_0316_),
    .B(_0321_),
    .Y(_0322_)
  );
  NOR _1030_ (
    .A(_0270_),
    .B(_0317_),
    .Y(_0323_)
  );
  NOR _1031_ (
    .A(_0322_),
    .B(_0323_),
    .Y(_0091_)
  );
  NOR _1032_ (
    .A(_0149_),
    .B(reset),
    .Y(_0324_)
  );
  NOR _1033_ (
    .A(_0316_),
    .B(_0324_),
    .Y(_0325_)
  );
  NOR _1034_ (
    .A(_0274_),
    .B(_0317_),
    .Y(_0326_)
  );
  NOR _1035_ (
    .A(_0325_),
    .B(_0326_),
    .Y(_0092_)
  );
  NOR _1036_ (
    .A(_0150_),
    .B(reset),
    .Y(_0327_)
  );
  NOR _1037_ (
    .A(_0316_),
    .B(_0327_),
    .Y(_0328_)
  );
  NOR _1038_ (
    .A(_0278_),
    .B(_0317_),
    .Y(_0329_)
  );
  NOR _1039_ (
    .A(_0328_),
    .B(_0329_),
    .Y(_0093_)
  );
  NOR _1040_ (
    .A(_0151_),
    .B(reset),
    .Y(_0330_)
  );
  NOR _1041_ (
    .A(_0316_),
    .B(_0330_),
    .Y(_0331_)
  );
  NOR _1042_ (
    .A(_0282_),
    .B(_0317_),
    .Y(_0332_)
  );
  NOR _1043_ (
    .A(_0331_),
    .B(_0332_),
    .Y(_0094_)
  );
  NOR _1044_ (
    .A(_0152_),
    .B(reset),
    .Y(_0333_)
  );
  NOR _1045_ (
    .A(_0316_),
    .B(_0333_),
    .Y(_0334_)
  );
  NOR _1046_ (
    .A(_0286_),
    .B(_0317_),
    .Y(_0335_)
  );
  NOR _1047_ (
    .A(_0334_),
    .B(_0335_),
    .Y(_0095_)
  );
  NOR _1048_ (
    .A(_0246_),
    .B(_0248_),
    .Y(_0336_)
  );
  NAND _1049_ (
    .A(_0245_),
    .B(_0247_),
    .Y(_0337_)
  );
  NOR _1050_ (
    .A(_0293_),
    .B(_0337_),
    .Y(_0338_)
  );
  NAND _1051_ (
    .A(_0292_),
    .B(_0336_),
    .Y(_0339_)
  );
  NOR _1052_ (
    .A(_0153_),
    .B(reset),
    .Y(_0340_)
  );
  NOR _1053_ (
    .A(_0338_),
    .B(_0340_),
    .Y(_0341_)
  );
  NOR _1054_ (
    .A(_0266_),
    .B(_0339_),
    .Y(_0342_)
  );
  NOR _1055_ (
    .A(_0341_),
    .B(_0342_),
    .Y(_0006_)
  );
  NOR _1056_ (
    .A(_0154_),
    .B(reset),
    .Y(_0343_)
  );
  NOR _1057_ (
    .A(_0338_),
    .B(_0343_),
    .Y(_0344_)
  );
  NOR _1058_ (
    .A(_0270_),
    .B(_0339_),
    .Y(_0345_)
  );
  NOR _1059_ (
    .A(_0344_),
    .B(_0345_),
    .Y(_0007_)
  );
  NOR _1060_ (
    .A(_0155_),
    .B(reset),
    .Y(_0346_)
  );
  NOR _1061_ (
    .A(_0338_),
    .B(_0346_),
    .Y(_0347_)
  );
  NOR _1062_ (
    .A(_0274_),
    .B(_0339_),
    .Y(_0348_)
  );
  NOR _1063_ (
    .A(_0347_),
    .B(_0348_),
    .Y(_0008_)
  );
  NOR _1064_ (
    .A(_0156_),
    .B(reset),
    .Y(_0349_)
  );
  NOR _1065_ (
    .A(_0338_),
    .B(_0349_),
    .Y(_0350_)
  );
  NOR _1066_ (
    .A(_0278_),
    .B(_0339_),
    .Y(_0351_)
  );
  NOR _1067_ (
    .A(_0350_),
    .B(_0351_),
    .Y(_0009_)
  );
  NOR _1068_ (
    .A(_0157_),
    .B(reset),
    .Y(_0352_)
  );
  NOR _1069_ (
    .A(_0338_),
    .B(_0352_),
    .Y(_0353_)
  );
  NOR _1070_ (
    .A(_0282_),
    .B(_0339_),
    .Y(_0354_)
  );
  NOR _1071_ (
    .A(_0353_),
    .B(_0354_),
    .Y(_0010_)
  );
  NOR _1072_ (
    .A(_0158_),
    .B(reset),
    .Y(_0355_)
  );
  NOR _1073_ (
    .A(_0338_),
    .B(_0355_),
    .Y(_0356_)
  );
  NOR _1074_ (
    .A(_0286_),
    .B(_0339_),
    .Y(_0357_)
  );
  NOR _1075_ (
    .A(_0356_),
    .B(_0357_),
    .Y(_0011_)
  );
  NOR _1076_ (
    .A(_0252_),
    .B(_0293_),
    .Y(_0358_)
  );
  NAND _1077_ (
    .A(_0251_),
    .B(_0292_),
    .Y(_0359_)
  );
  NOR _1078_ (
    .A(_0159_),
    .B(reset),
    .Y(_0360_)
  );
  NOR _1079_ (
    .A(_0358_),
    .B(_0360_),
    .Y(_0361_)
  );
  NOR _1080_ (
    .A(_0266_),
    .B(_0359_),
    .Y(_0362_)
  );
  NOR _1081_ (
    .A(_0361_),
    .B(_0362_),
    .Y(_0012_)
  );
  NOR _1082_ (
    .A(_0160_),
    .B(reset),
    .Y(_0363_)
  );
  NOR _1083_ (
    .A(_0358_),
    .B(_0363_),
    .Y(_0364_)
  );
  NOR _1084_ (
    .A(_0270_),
    .B(_0359_),
    .Y(_0365_)
  );
  NOR _1085_ (
    .A(_0364_),
    .B(_0365_),
    .Y(_0013_)
  );
  NOR _1086_ (
    .A(_0161_),
    .B(reset),
    .Y(_0366_)
  );
  NOR _1087_ (
    .A(_0358_),
    .B(_0366_),
    .Y(_0367_)
  );
  NOR _1088_ (
    .A(_0274_),
    .B(_0359_),
    .Y(_0368_)
  );
  NOR _1089_ (
    .A(_0367_),
    .B(_0368_),
    .Y(_0014_)
  );
  NOR _1090_ (
    .A(_0162_),
    .B(reset),
    .Y(_0369_)
  );
  NOR _1091_ (
    .A(_0358_),
    .B(_0369_),
    .Y(_0370_)
  );
  NOR _1092_ (
    .A(_0278_),
    .B(_0359_),
    .Y(_0371_)
  );
  NOR _1093_ (
    .A(_0370_),
    .B(_0371_),
    .Y(_0015_)
  );
  NOR _1094_ (
    .A(_0163_),
    .B(reset),
    .Y(_0372_)
  );
  NOR _1095_ (
    .A(_0358_),
    .B(_0372_),
    .Y(_0373_)
  );
  NOR _1096_ (
    .A(_0282_),
    .B(_0359_),
    .Y(_0374_)
  );
  NOR _1097_ (
    .A(_0373_),
    .B(_0374_),
    .Y(_0016_)
  );
  NOR _1098_ (
    .A(_0164_),
    .B(reset),
    .Y(_0375_)
  );
  NOR _1099_ (
    .A(_0358_),
    .B(_0375_),
    .Y(_0376_)
  );
  NOR _1100_ (
    .A(_0286_),
    .B(_0359_),
    .Y(_0377_)
  );
  NOR _1101_ (
    .A(_0376_),
    .B(_0377_),
    .Y(_0017_)
  );
  NOR _1102_ (
    .A(_0255_),
    .B(_0290_),
    .Y(_0378_)
  );
  NAND _1103_ (
    .A(_0256_),
    .B(_0291_),
    .Y(_0379_)
  );
  NOR _1104_ (
    .A(_0289_),
    .B(_0379_),
    .Y(_0380_)
  );
  NAND _1105_ (
    .A(_0288_),
    .B(_0378_),
    .Y(_0381_)
  );
  NOR _1106_ (
    .A(_0165_),
    .B(reset),
    .Y(_0382_)
  );
  NOR _1107_ (
    .A(_0380_),
    .B(_0382_),
    .Y(_0383_)
  );
  NOR _1108_ (
    .A(_0266_),
    .B(_0381_),
    .Y(_0384_)
  );
  NOR _1109_ (
    .A(_0383_),
    .B(_0384_),
    .Y(_0018_)
  );
  NOR _1110_ (
    .A(_0166_),
    .B(reset),
    .Y(_0385_)
  );
  NOR _1111_ (
    .A(_0380_),
    .B(_0385_),
    .Y(_0386_)
  );
  NOR _1112_ (
    .A(_0270_),
    .B(_0381_),
    .Y(_0387_)
  );
  NOR _1113_ (
    .A(_0386_),
    .B(_0387_),
    .Y(_0019_)
  );
  NOR _1114_ (
    .A(_0167_),
    .B(reset),
    .Y(_0388_)
  );
  NOR _1115_ (
    .A(_0380_),
    .B(_0388_),
    .Y(_0389_)
  );
  NOR _1116_ (
    .A(_0274_),
    .B(_0381_),
    .Y(_0390_)
  );
  NOR _1117_ (
    .A(_0389_),
    .B(_0390_),
    .Y(_0020_)
  );
  NOR _1118_ (
    .A(_0168_),
    .B(reset),
    .Y(_0391_)
  );
  NOR _1119_ (
    .A(_0380_),
    .B(_0391_),
    .Y(_0392_)
  );
  NOR _1120_ (
    .A(_0278_),
    .B(_0381_),
    .Y(_0393_)
  );
  NOR _1121_ (
    .A(_0392_),
    .B(_0393_),
    .Y(_0021_)
  );
  NOR _1122_ (
    .A(_0169_),
    .B(reset),
    .Y(_0394_)
  );
  NOR _1123_ (
    .A(_0380_),
    .B(_0394_),
    .Y(_0395_)
  );
  NOR _1124_ (
    .A(_0282_),
    .B(_0381_),
    .Y(_0396_)
  );
  NOR _1125_ (
    .A(_0395_),
    .B(_0396_),
    .Y(_0022_)
  );
  NOR _1126_ (
    .A(_0170_),
    .B(reset),
    .Y(_0397_)
  );
  NOR _1127_ (
    .A(_0380_),
    .B(_0397_),
    .Y(_0398_)
  );
  NOR _1128_ (
    .A(_0286_),
    .B(_0381_),
    .Y(_0399_)
  );
  NOR _1129_ (
    .A(_0398_),
    .B(_0399_),
    .Y(_0023_)
  );
  NOR _1130_ (
    .A(_0315_),
    .B(_0379_),
    .Y(_0400_)
  );
  NAND _1131_ (
    .A(_0314_),
    .B(_0378_),
    .Y(_0401_)
  );
  NOR _1132_ (
    .A(_0171_),
    .B(reset),
    .Y(_0402_)
  );
  NOR _1133_ (
    .A(_0400_),
    .B(_0402_),
    .Y(_0403_)
  );
  NOR _1134_ (
    .A(_0266_),
    .B(_0401_),
    .Y(_0404_)
  );
  NOR _1135_ (
    .A(_0403_),
    .B(_0404_),
    .Y(_0024_)
  );
  NOR _1136_ (
    .A(_0172_),
    .B(reset),
    .Y(_0405_)
  );
  NOR _1137_ (
    .A(_0400_),
    .B(_0405_),
    .Y(_0406_)
  );
  NOR _1138_ (
    .A(_0270_),
    .B(_0401_),
    .Y(_0407_)
  );
  NOR _1139_ (
    .A(_0406_),
    .B(_0407_),
    .Y(_0025_)
  );
  NOR _1140_ (
    .A(_0173_),
    .B(reset),
    .Y(_0408_)
  );
  NOR _1141_ (
    .A(_0400_),
    .B(_0408_),
    .Y(_0409_)
  );
  NOR _1142_ (
    .A(_0274_),
    .B(_0401_),
    .Y(_0410_)
  );
  NOR _1143_ (
    .A(_0409_),
    .B(_0410_),
    .Y(_0026_)
  );
  NOR _1144_ (
    .A(_0174_),
    .B(reset),
    .Y(_0411_)
  );
  NOR _1145_ (
    .A(_0400_),
    .B(_0411_),
    .Y(_0412_)
  );
  NOR _1146_ (
    .A(_0278_),
    .B(_0401_),
    .Y(_0413_)
  );
  NOR _1147_ (
    .A(_0412_),
    .B(_0413_),
    .Y(_0027_)
  );
  NOR _1148_ (
    .A(_0175_),
    .B(reset),
    .Y(_0414_)
  );
  NOR _1149_ (
    .A(_0400_),
    .B(_0414_),
    .Y(_0415_)
  );
  NOR _1150_ (
    .A(_0282_),
    .B(_0401_),
    .Y(_0416_)
  );
  NOR _1151_ (
    .A(_0415_),
    .B(_0416_),
    .Y(_0028_)
  );
  NOR _1152_ (
    .A(_0176_),
    .B(reset),
    .Y(_0417_)
  );
  NOR _1153_ (
    .A(_0400_),
    .B(_0417_),
    .Y(_0418_)
  );
  NOR _1154_ (
    .A(_0286_),
    .B(_0401_),
    .Y(_0419_)
  );
  NOR _1155_ (
    .A(_0418_),
    .B(_0419_),
    .Y(_0029_)
  );
  NOR _1156_ (
    .A(_0337_),
    .B(_0379_),
    .Y(_0420_)
  );
  NAND _1157_ (
    .A(_0336_),
    .B(_0378_),
    .Y(_0421_)
  );
  NOR _1158_ (
    .A(_0177_),
    .B(reset),
    .Y(_0422_)
  );
  NOR _1159_ (
    .A(_0420_),
    .B(_0422_),
    .Y(_0423_)
  );
  NOR _1160_ (
    .A(_0266_),
    .B(_0421_),
    .Y(_0424_)
  );
  NOR _1161_ (
    .A(_0423_),
    .B(_0424_),
    .Y(_0030_)
  );
  NOR _1162_ (
    .A(_0178_),
    .B(reset),
    .Y(_0425_)
  );
  NOR _1163_ (
    .A(_0420_),
    .B(_0425_),
    .Y(_0426_)
  );
  NOR _1164_ (
    .A(_0270_),
    .B(_0421_),
    .Y(_0427_)
  );
  NOR _1165_ (
    .A(_0426_),
    .B(_0427_),
    .Y(_0031_)
  );
  NOR _1166_ (
    .A(_0179_),
    .B(reset),
    .Y(_0428_)
  );
  NOR _1167_ (
    .A(_0420_),
    .B(_0428_),
    .Y(_0429_)
  );
  NOR _1168_ (
    .A(_0274_),
    .B(_0421_),
    .Y(_0430_)
  );
  NOR _1169_ (
    .A(_0429_),
    .B(_0430_),
    .Y(_0032_)
  );
  NOR _1170_ (
    .A(_0180_),
    .B(reset),
    .Y(_0431_)
  );
  NOR _1171_ (
    .A(_0420_),
    .B(_0431_),
    .Y(_0432_)
  );
  NOR _1172_ (
    .A(_0278_),
    .B(_0421_),
    .Y(_0433_)
  );
  NOR _1173_ (
    .A(_0432_),
    .B(_0433_),
    .Y(_0033_)
  );
  NOR _1174_ (
    .A(_0181_),
    .B(reset),
    .Y(_0434_)
  );
  NOR _1175_ (
    .A(_0420_),
    .B(_0434_),
    .Y(_0435_)
  );
  NOR _1176_ (
    .A(_0282_),
    .B(_0421_),
    .Y(_0436_)
  );
  NOR _1177_ (
    .A(_0435_),
    .B(_0436_),
    .Y(_0034_)
  );
  NOR _1178_ (
    .A(_0182_),
    .B(reset),
    .Y(_0437_)
  );
  NOR _1179_ (
    .A(_0420_),
    .B(_0437_),
    .Y(_0438_)
  );
  NOR _1180_ (
    .A(_0286_),
    .B(_0421_),
    .Y(_0439_)
  );
  NOR _1181_ (
    .A(_0438_),
    .B(_0439_),
    .Y(_0035_)
  );
  NOR _1182_ (
    .A(_0252_),
    .B(_0379_),
    .Y(_0440_)
  );
  NAND _1183_ (
    .A(_0251_),
    .B(_0378_),
    .Y(_0441_)
  );
  NAND _1184_ (
    .A(\mem[15] [0]),
    .B(_0441_),
    .Y(_0442_)
  );
  NAND _1185_ (
    .A(_0266_),
    .B(_0440_),
    .Y(_0443_)
  );
  NAND _1186_ (
    .A(_0442_),
    .B(_0443_),
    .Y(_0036_)
  );
  NAND _1187_ (
    .A(\mem[15] [1]),
    .B(_0441_),
    .Y(_0444_)
  );
  NAND _1188_ (
    .A(_0270_),
    .B(_0440_),
    .Y(_0445_)
  );
  NAND _1189_ (
    .A(_0444_),
    .B(_0445_),
    .Y(_0037_)
  );
  NAND _1190_ (
    .A(\mem[15] [2]),
    .B(_0441_),
    .Y(_0446_)
  );
  NAND _1191_ (
    .A(_0274_),
    .B(_0440_),
    .Y(_0447_)
  );
  NAND _1192_ (
    .A(_0446_),
    .B(_0447_),
    .Y(_0038_)
  );
  NAND _1193_ (
    .A(\mem[15] [3]),
    .B(_0441_),
    .Y(_0448_)
  );
  NAND _1194_ (
    .A(_0278_),
    .B(_0440_),
    .Y(_0449_)
  );
  NAND _1195_ (
    .A(_0448_),
    .B(_0449_),
    .Y(_0039_)
  );
  NAND _1196_ (
    .A(\mem[15] [4]),
    .B(_0441_),
    .Y(_0450_)
  );
  NAND _1197_ (
    .A(_0282_),
    .B(_0440_),
    .Y(_0451_)
  );
  NAND _1198_ (
    .A(_0450_),
    .B(_0451_),
    .Y(_0040_)
  );
  NAND _1199_ (
    .A(\mem[15] [5]),
    .B(_0441_),
    .Y(_0452_)
  );
  NAND _1200_ (
    .A(_0286_),
    .B(_0440_),
    .Y(_0453_)
  );
  NAND _1201_ (
    .A(_0452_),
    .B(_0453_),
    .Y(_0041_)
  );
  NOR _1202_ (
    .A(_0253_),
    .B(_0291_),
    .Y(_0454_)
  );
  NAND _1203_ (
    .A(_0254_),
    .B(_0290_),
    .Y(_0455_)
  );
  NOR _1204_ (
    .A(_0315_),
    .B(_0455_),
    .Y(_0456_)
  );
  NAND _1205_ (
    .A(_0314_),
    .B(_0454_),
    .Y(_0457_)
  );
  NOR _1206_ (
    .A(reset),
    .B(_0196_),
    .Y(_0458_)
  );
  NOR _1207_ (
    .A(_0456_),
    .B(_0458_),
    .Y(_0459_)
  );
  NOR _1208_ (
    .A(_0266_),
    .B(_0457_),
    .Y(_0460_)
  );
  NOR _1209_ (
    .A(_0459_),
    .B(_0460_),
    .Y(_0042_)
  );
  NOR _1210_ (
    .A(reset),
    .B(_0197_),
    .Y(_0461_)
  );
  NOR _1211_ (
    .A(_0456_),
    .B(_0461_),
    .Y(_0462_)
  );
  NOR _1212_ (
    .A(_0270_),
    .B(_0457_),
    .Y(_0463_)
  );
  NOR _1213_ (
    .A(_0462_),
    .B(_0463_),
    .Y(_0043_)
  );
  NOR _1214_ (
    .A(reset),
    .B(_0198_),
    .Y(_0464_)
  );
  NOR _1215_ (
    .A(_0456_),
    .B(_0464_),
    .Y(_0465_)
  );
  NOR _1216_ (
    .A(_0274_),
    .B(_0457_),
    .Y(_0466_)
  );
  NOR _1217_ (
    .A(_0465_),
    .B(_0466_),
    .Y(_0044_)
  );
  NOR _1218_ (
    .A(reset),
    .B(_0199_),
    .Y(_0467_)
  );
  NOR _1219_ (
    .A(_0456_),
    .B(_0467_),
    .Y(_0468_)
  );
  NOR _1220_ (
    .A(_0278_),
    .B(_0457_),
    .Y(_0469_)
  );
  NOR _1221_ (
    .A(_0468_),
    .B(_0469_),
    .Y(_0045_)
  );
  NOR _1222_ (
    .A(reset),
    .B(_0200_),
    .Y(_0470_)
  );
  NOR _1223_ (
    .A(_0456_),
    .B(_0470_),
    .Y(_0471_)
  );
  NOR _1224_ (
    .A(_0282_),
    .B(_0457_),
    .Y(_0472_)
  );
  NOR _1225_ (
    .A(_0471_),
    .B(_0472_),
    .Y(_0046_)
  );
  NOR _1226_ (
    .A(reset),
    .B(_0201_),
    .Y(_0473_)
  );
  NOR _1227_ (
    .A(_0456_),
    .B(_0473_),
    .Y(_0474_)
  );
  NOR _1228_ (
    .A(_0286_),
    .B(_0457_),
    .Y(_0475_)
  );
  NOR _1229_ (
    .A(_0474_),
    .B(_0475_),
    .Y(_0047_)
  );
  NOR _1230_ (
    .A(\mem[15] [0]),
    .B(_0241_),
    .Y(_0476_)
  );
  NAND _1231_ (
    .A(_0159_),
    .B(_0241_),
    .Y(_0477_)
  );
  NAND _1232_ (
    .A(ptr_read[0]),
    .B(_0477_),
    .Y(_0478_)
  );
  NOR _1233_ (
    .A(_0476_),
    .B(_0478_),
    .Y(_0479_)
  );
  NAND _1234_ (
    .A(_0153_),
    .B(_0241_),
    .Y(_0480_)
  );
  NAND _1235_ (
    .A(_0177_),
    .B(ptr_read[2]),
    .Y(_0481_)
  );
  NAND _1236_ (
    .A(_0480_),
    .B(_0481_),
    .Y(_0482_)
  );
  NOR _1237_ (
    .A(ptr_read[0]),
    .B(_0482_),
    .Y(_0483_)
  );
  NOR _1238_ (
    .A(_0479_),
    .B(_0483_),
    .Y(_0484_)
  );
  NOR _1239_ (
    .A(_0242_),
    .B(_0484_),
    .Y(_0485_)
  );
  NAND _1240_ (
    .A(_0221_),
    .B(ptr_read[2]),
    .Y(_0486_)
  );
  NAND _1241_ (
    .A(_0183_),
    .B(_0241_),
    .Y(_0487_)
  );
  NAND _1242_ (
    .A(_0486_),
    .B(_0487_),
    .Y(_0488_)
  );
  NOR _1243_ (
    .A(ptr_read[0]),
    .B(_0488_),
    .Y(_0489_)
  );
  NOR _1244_ (
    .A(\mem[7] [0]),
    .B(_0241_),
    .Y(_0490_)
  );
  NOR _1245_ (
    .A(\mem[3] [0]),
    .B(ptr_read[2]),
    .Y(_0491_)
  );
  NOT _1246_ (
    .A(_0491_),
    .Y(_0492_)
  );
  NAND _1247_ (
    .A(ptr_read[0]),
    .B(_0492_),
    .Y(_0493_)
  );
  NOR _1248_ (
    .A(_0490_),
    .B(_0493_),
    .Y(_0494_)
  );
  NOR _1249_ (
    .A(_0489_),
    .B(_0494_),
    .Y(_0495_)
  );
  NOR _1250_ (
    .A(ptr_read[3]),
    .B(_0495_),
    .Y(_0496_)
  );
  NOR _1251_ (
    .A(_0485_),
    .B(_0496_),
    .Y(_0497_)
  );
  NOR _1252_ (
    .A(_0240_),
    .B(_0497_),
    .Y(_0498_)
  );
  NAND _1253_ (
    .A(_0171_),
    .B(ptr_read[2]),
    .Y(_0499_)
  );
  NOR _1254_ (
    .A(\mem[9] [0]),
    .B(ptr_read[2]),
    .Y(_0500_)
  );
  NAND _1255_ (
    .A(ptr_read[0]),
    .B(_0499_),
    .Y(_0501_)
  );
  NOR _1256_ (
    .A(_0500_),
    .B(_0501_),
    .Y(_0502_)
  );
  NAND _1257_ (
    .A(_0141_),
    .B(_0241_),
    .Y(_0503_)
  );
  NAND _1258_ (
    .A(_0165_),
    .B(ptr_read[2]),
    .Y(_0504_)
  );
  NAND _1259_ (
    .A(_0503_),
    .B(_0504_),
    .Y(_0505_)
  );
  NOR _1260_ (
    .A(ptr_read[0]),
    .B(_0505_),
    .Y(_0506_)
  );
  NOR _1261_ (
    .A(_0502_),
    .B(_0506_),
    .Y(_0507_)
  );
  NOR _1262_ (
    .A(_0242_),
    .B(_0507_),
    .Y(_0508_)
  );
  NAND _1263_ (
    .A(_0228_),
    .B(ptr_read[2]),
    .Y(_0509_)
  );
  NAND _1264_ (
    .A(_0190_),
    .B(_0241_),
    .Y(_0510_)
  );
  NAND _1265_ (
    .A(_0509_),
    .B(_0510_),
    .Y(_0511_)
  );
  NOR _1266_ (
    .A(ptr_read[0]),
    .B(_0511_),
    .Y(_0512_)
  );
  NOR _1267_ (
    .A(\mem[5] [0]),
    .B(_0241_),
    .Y(_0513_)
  );
  NAND _1268_ (
    .A(_0196_),
    .B(_0241_),
    .Y(_0514_)
  );
  NAND _1269_ (
    .A(ptr_read[0]),
    .B(_0514_),
    .Y(_0515_)
  );
  NOR _1270_ (
    .A(_0513_),
    .B(_0515_),
    .Y(_0516_)
  );
  NOR _1271_ (
    .A(_0512_),
    .B(_0516_),
    .Y(_0517_)
  );
  NOR _1272_ (
    .A(ptr_read[3]),
    .B(_0517_),
    .Y(_0518_)
  );
  NOR _1273_ (
    .A(_0508_),
    .B(_0518_),
    .Y(_0519_)
  );
  NOR _1274_ (
    .A(ptr_read[1]),
    .B(_0519_),
    .Y(_0520_)
  );
  NOR _1275_ (
    .A(_0498_),
    .B(_0520_),
    .Y(_0521_)
  );
  NOR _1276_ (
    .A(_0208_),
    .B(_0521_),
    .Y(data_out[0])
  );
  NOR _1277_ (
    .A(\mem[15] [1]),
    .B(_0241_),
    .Y(_0522_)
  );
  NAND _1278_ (
    .A(_0160_),
    .B(_0241_),
    .Y(_0523_)
  );
  NAND _1279_ (
    .A(ptr_read[0]),
    .B(_0523_),
    .Y(_0524_)
  );
  NOR _1280_ (
    .A(_0522_),
    .B(_0524_),
    .Y(_0525_)
  );
  NAND _1281_ (
    .A(_0154_),
    .B(_0241_),
    .Y(_0526_)
  );
  NAND _1282_ (
    .A(_0178_),
    .B(ptr_read[2]),
    .Y(_0527_)
  );
  NAND _1283_ (
    .A(_0526_),
    .B(_0527_),
    .Y(_0528_)
  );
  NOR _1284_ (
    .A(ptr_read[0]),
    .B(_0528_),
    .Y(_0529_)
  );
  NOR _1285_ (
    .A(_0525_),
    .B(_0529_),
    .Y(_0530_)
  );
  NOR _1286_ (
    .A(_0242_),
    .B(_0530_),
    .Y(_0531_)
  );
  NAND _1287_ (
    .A(_0223_),
    .B(ptr_read[2]),
    .Y(_0532_)
  );
  NAND _1288_ (
    .A(_0184_),
    .B(_0241_),
    .Y(_0533_)
  );
  NAND _1289_ (
    .A(_0532_),
    .B(_0533_),
    .Y(_0534_)
  );
  NOR _1290_ (
    .A(ptr_read[0]),
    .B(_0534_),
    .Y(_0535_)
  );
  NOR _1291_ (
    .A(\mem[7] [1]),
    .B(_0241_),
    .Y(_0536_)
  );
  NOR _1292_ (
    .A(\mem[3] [1]),
    .B(ptr_read[2]),
    .Y(_0537_)
  );
  NOT _1293_ (
    .A(_0537_),
    .Y(_0538_)
  );
  NAND _1294_ (
    .A(ptr_read[0]),
    .B(_0538_),
    .Y(_0539_)
  );
  NOR _1295_ (
    .A(_0536_),
    .B(_0539_),
    .Y(_0540_)
  );
  NOR _1296_ (
    .A(_0535_),
    .B(_0540_),
    .Y(_0541_)
  );
  NOR _1297_ (
    .A(ptr_read[3]),
    .B(_0541_),
    .Y(_0542_)
  );
  NOR _1298_ (
    .A(_0531_),
    .B(_0542_),
    .Y(_0543_)
  );
  NOR _1299_ (
    .A(_0240_),
    .B(_0543_),
    .Y(_0544_)
  );
  NAND _1300_ (
    .A(_0172_),
    .B(ptr_read[2]),
    .Y(_0545_)
  );
  NOR _1301_ (
    .A(\mem[9] [1]),
    .B(ptr_read[2]),
    .Y(_0546_)
  );
  NAND _1302_ (
    .A(ptr_read[0]),
    .B(_0545_),
    .Y(_0547_)
  );
  NOR _1303_ (
    .A(_0546_),
    .B(_0547_),
    .Y(_0548_)
  );
  NAND _1304_ (
    .A(_0142_),
    .B(_0241_),
    .Y(_0549_)
  );
  NAND _1305_ (
    .A(_0166_),
    .B(ptr_read[2]),
    .Y(_0550_)
  );
  NAND _1306_ (
    .A(_0549_),
    .B(_0550_),
    .Y(_0551_)
  );
  NOR _1307_ (
    .A(ptr_read[0]),
    .B(_0551_),
    .Y(_0552_)
  );
  NOR _1308_ (
    .A(_0548_),
    .B(_0552_),
    .Y(_0553_)
  );
  NOR _1309_ (
    .A(_0242_),
    .B(_0553_),
    .Y(_0554_)
  );
  NAND _1310_ (
    .A(_0230_),
    .B(ptr_read[2]),
    .Y(_0555_)
  );
  NAND _1311_ (
    .A(_0191_),
    .B(_0241_),
    .Y(_0556_)
  );
  NAND _1312_ (
    .A(_0555_),
    .B(_0556_),
    .Y(_0557_)
  );
  NOR _1313_ (
    .A(ptr_read[0]),
    .B(_0557_),
    .Y(_0558_)
  );
  NOR _1314_ (
    .A(\mem[5] [1]),
    .B(_0241_),
    .Y(_0559_)
  );
  NAND _1315_ (
    .A(_0197_),
    .B(_0241_),
    .Y(_0560_)
  );
  NAND _1316_ (
    .A(ptr_read[0]),
    .B(_0560_),
    .Y(_0561_)
  );
  NOR _1317_ (
    .A(_0559_),
    .B(_0561_),
    .Y(_0562_)
  );
  NOR _1318_ (
    .A(_0558_),
    .B(_0562_),
    .Y(_0563_)
  );
  NOR _1319_ (
    .A(ptr_read[3]),
    .B(_0563_),
    .Y(_0564_)
  );
  NOR _1320_ (
    .A(_0554_),
    .B(_0564_),
    .Y(_0565_)
  );
  NOR _1321_ (
    .A(ptr_read[1]),
    .B(_0565_),
    .Y(_0566_)
  );
  NOR _1322_ (
    .A(_0544_),
    .B(_0566_),
    .Y(_0567_)
  );
  NOR _1323_ (
    .A(_0208_),
    .B(_0567_),
    .Y(data_out[1])
  );
  NAND _1324_ (
    .A(_0179_),
    .B(ptr_read[2]),
    .Y(_0568_)
  );
  NAND _1325_ (
    .A(_0155_),
    .B(_0241_),
    .Y(_0569_)
  );
  NAND _1326_ (
    .A(_0568_),
    .B(_0569_),
    .Y(_0570_)
  );
  NOR _1327_ (
    .A(ptr_read[0]),
    .B(_0570_),
    .Y(_0571_)
  );
  NAND _1328_ (
    .A(_0161_),
    .B(_0241_),
    .Y(_0572_)
  );
  NOR _1329_ (
    .A(\mem[15] [2]),
    .B(_0241_),
    .Y(_0573_)
  );
  NAND _1330_ (
    .A(ptr_read[0]),
    .B(_0572_),
    .Y(_0574_)
  );
  NOR _1331_ (
    .A(_0573_),
    .B(_0574_),
    .Y(_0575_)
  );
  NOR _1332_ (
    .A(_0571_),
    .B(_0575_),
    .Y(_0576_)
  );
  NOR _1333_ (
    .A(_0242_),
    .B(_0576_),
    .Y(_0577_)
  );
  NAND _1334_ (
    .A(_0224_),
    .B(ptr_read[2]),
    .Y(_0578_)
  );
  NAND _1335_ (
    .A(_0185_),
    .B(_0241_),
    .Y(_0579_)
  );
  NAND _1336_ (
    .A(_0137_),
    .B(ptr_read[2]),
    .Y(_0580_)
  );
  NAND _1337_ (
    .A(_0204_),
    .B(_0241_),
    .Y(_0581_)
  );
  NAND _1338_ (
    .A(_0578_),
    .B(_0579_),
    .Y(_0582_)
  );
  NAND _1339_ (
    .A(_0220_),
    .B(_0582_),
    .Y(_0583_)
  );
  NAND _1340_ (
    .A(_0580_),
    .B(_0581_),
    .Y(_0584_)
  );
  NAND _1341_ (
    .A(ptr_read[0]),
    .B(_0584_),
    .Y(_0585_)
  );
  NAND _1342_ (
    .A(_0583_),
    .B(_0585_),
    .Y(_0586_)
  );
  NOR _1343_ (
    .A(ptr_read[3]),
    .B(_0586_),
    .Y(_0587_)
  );
  NOR _1344_ (
    .A(_0577_),
    .B(_0587_),
    .Y(_0588_)
  );
  NOR _1345_ (
    .A(_0240_),
    .B(_0588_),
    .Y(_0589_)
  );
  NAND _1346_ (
    .A(_0167_),
    .B(ptr_read[2]),
    .Y(_0590_)
  );
  NAND _1347_ (
    .A(_0143_),
    .B(_0241_),
    .Y(_0591_)
  );
  NAND _1348_ (
    .A(_0590_),
    .B(_0591_),
    .Y(_0592_)
  );
  NOR _1349_ (
    .A(ptr_read[0]),
    .B(_0592_),
    .Y(_0593_)
  );
  NOR _1350_ (
    .A(\mem[9] [2]),
    .B(ptr_read[2]),
    .Y(_0594_)
  );
  NAND _1351_ (
    .A(_0173_),
    .B(ptr_read[2]),
    .Y(_0595_)
  );
  NAND _1352_ (
    .A(ptr_read[0]),
    .B(_0595_),
    .Y(_0596_)
  );
  NOR _1353_ (
    .A(_0594_),
    .B(_0596_),
    .Y(_0597_)
  );
  NOR _1354_ (
    .A(_0593_),
    .B(_0597_),
    .Y(_0598_)
  );
  NOR _1355_ (
    .A(_0242_),
    .B(_0598_),
    .Y(_0599_)
  );
  NAND _1356_ (
    .A(_0232_),
    .B(ptr_read[2]),
    .Y(_0600_)
  );
  NAND _1357_ (
    .A(_0192_),
    .B(_0241_),
    .Y(_0601_)
  );
  NAND _1358_ (
    .A(_0233_),
    .B(ptr_read[2]),
    .Y(_0602_)
  );
  NAND _1359_ (
    .A(_0198_),
    .B(_0241_),
    .Y(_0603_)
  );
  NAND _1360_ (
    .A(_0600_),
    .B(_0601_),
    .Y(_0604_)
  );
  NAND _1361_ (
    .A(_0220_),
    .B(_0604_),
    .Y(_0605_)
  );
  NAND _1362_ (
    .A(_0602_),
    .B(_0603_),
    .Y(_0606_)
  );
  NAND _1363_ (
    .A(ptr_read[0]),
    .B(_0606_),
    .Y(_0607_)
  );
  NAND _1364_ (
    .A(_0605_),
    .B(_0607_),
    .Y(_0608_)
  );
  NOR _1365_ (
    .A(ptr_read[3]),
    .B(_0608_),
    .Y(_0609_)
  );
  NOR _1366_ (
    .A(_0599_),
    .B(_0609_),
    .Y(_0610_)
  );
  NOR _1367_ (
    .A(ptr_read[1]),
    .B(_0610_),
    .Y(_0611_)
  );
  NOR _1368_ (
    .A(_0589_),
    .B(_0611_),
    .Y(_0612_)
  );
  NOR _1369_ (
    .A(_0208_),
    .B(_0612_),
    .Y(data_out[2])
  );
  NOR _1370_ (
    .A(\mem[15] [3]),
    .B(_0241_),
    .Y(_0613_)
  );
  NAND _1371_ (
    .A(_0162_),
    .B(_0241_),
    .Y(_0614_)
  );
  NAND _1372_ (
    .A(ptr_read[0]),
    .B(_0614_),
    .Y(_0615_)
  );
  NOR _1373_ (
    .A(_0613_),
    .B(_0615_),
    .Y(_0616_)
  );
  NAND _1374_ (
    .A(_0156_),
    .B(_0241_),
    .Y(_0617_)
  );
  NAND _1375_ (
    .A(_0180_),
    .B(ptr_read[2]),
    .Y(_0618_)
  );
  NAND _1376_ (
    .A(_0617_),
    .B(_0618_),
    .Y(_0619_)
  );
  NOR _1377_ (
    .A(ptr_read[0]),
    .B(_0619_),
    .Y(_0620_)
  );
  NOR _1378_ (
    .A(_0616_),
    .B(_0620_),
    .Y(_0621_)
  );
  NOR _1379_ (
    .A(_0242_),
    .B(_0621_),
    .Y(_0622_)
  );
  NAND _1380_ (
    .A(_0225_),
    .B(ptr_read[2]),
    .Y(_0623_)
  );
  NAND _1381_ (
    .A(_0186_),
    .B(_0241_),
    .Y(_0624_)
  );
  NAND _1382_ (
    .A(_0623_),
    .B(_0624_),
    .Y(_0625_)
  );
  NOR _1383_ (
    .A(ptr_read[0]),
    .B(_0625_),
    .Y(_0626_)
  );
  NOR _1384_ (
    .A(\mem[7] [3]),
    .B(_0241_),
    .Y(_0627_)
  );
  NOR _1385_ (
    .A(\mem[3] [3]),
    .B(ptr_read[2]),
    .Y(_0628_)
  );
  NOT _1386_ (
    .A(_0628_),
    .Y(_0629_)
  );
  NAND _1387_ (
    .A(ptr_read[0]),
    .B(_0629_),
    .Y(_0630_)
  );
  NOR _1388_ (
    .A(_0627_),
    .B(_0630_),
    .Y(_0631_)
  );
  NOR _1389_ (
    .A(_0626_),
    .B(_0631_),
    .Y(_0632_)
  );
  NOR _1390_ (
    .A(ptr_read[3]),
    .B(_0632_),
    .Y(_0633_)
  );
  NOR _1391_ (
    .A(_0622_),
    .B(_0633_),
    .Y(_0634_)
  );
  NOR _1392_ (
    .A(_0240_),
    .B(_0634_),
    .Y(_0635_)
  );
  NAND _1393_ (
    .A(_0174_),
    .B(ptr_read[2]),
    .Y(_0636_)
  );
  NOR _1394_ (
    .A(\mem[9] [3]),
    .B(ptr_read[2]),
    .Y(_0637_)
  );
  NAND _1395_ (
    .A(ptr_read[0]),
    .B(_0636_),
    .Y(_0638_)
  );
  NOR _1396_ (
    .A(_0637_),
    .B(_0638_),
    .Y(_0639_)
  );
  NAND _1397_ (
    .A(_0144_),
    .B(_0241_),
    .Y(_0640_)
  );
  NAND _1398_ (
    .A(_0168_),
    .B(ptr_read[2]),
    .Y(_0641_)
  );
  NAND _1399_ (
    .A(_0640_),
    .B(_0641_),
    .Y(_0642_)
  );
  NOR _1400_ (
    .A(ptr_read[0]),
    .B(_0642_),
    .Y(_0643_)
  );
  NOR _1401_ (
    .A(_0639_),
    .B(_0643_),
    .Y(_0644_)
  );
  NOR _1402_ (
    .A(_0242_),
    .B(_0644_),
    .Y(_0645_)
  );
  NAND _1403_ (
    .A(_0234_),
    .B(ptr_read[2]),
    .Y(_0646_)
  );
  NAND _1404_ (
    .A(_0193_),
    .B(_0241_),
    .Y(_0647_)
  );
  NAND _1405_ (
    .A(_0646_),
    .B(_0647_),
    .Y(_0648_)
  );
  NOR _1406_ (
    .A(ptr_read[0]),
    .B(_0648_),
    .Y(_0649_)
  );
  NOR _1407_ (
    .A(\mem[5] [3]),
    .B(_0241_),
    .Y(_0650_)
  );
  NAND _1408_ (
    .A(_0199_),
    .B(_0241_),
    .Y(_0651_)
  );
  NAND _1409_ (
    .A(ptr_read[0]),
    .B(_0651_),
    .Y(_0652_)
  );
  NOR _1410_ (
    .A(_0650_),
    .B(_0652_),
    .Y(_0653_)
  );
  NOR _1411_ (
    .A(_0649_),
    .B(_0653_),
    .Y(_0654_)
  );
  NOR _1412_ (
    .A(ptr_read[3]),
    .B(_0654_),
    .Y(_0655_)
  );
  NOR _1413_ (
    .A(_0645_),
    .B(_0655_),
    .Y(_0656_)
  );
  NOR _1414_ (
    .A(ptr_read[1]),
    .B(_0656_),
    .Y(_0657_)
  );
  NOR _1415_ (
    .A(_0635_),
    .B(_0657_),
    .Y(_0658_)
  );
  NOR _1416_ (
    .A(_0208_),
    .B(_0658_),
    .Y(data_out[3])
  );
  NOR _1417_ (
    .A(\mem[15] [4]),
    .B(_0241_),
    .Y(_0659_)
  );
  NAND _1418_ (
    .A(_0163_),
    .B(_0241_),
    .Y(_0660_)
  );
  NAND _1419_ (
    .A(ptr_read[0]),
    .B(_0660_),
    .Y(_0661_)
  );
  NOR _1420_ (
    .A(_0659_),
    .B(_0661_),
    .Y(_0662_)
  );
  NAND _1421_ (
    .A(_0157_),
    .B(_0241_),
    .Y(_0663_)
  );
  NAND _1422_ (
    .A(_0181_),
    .B(ptr_read[2]),
    .Y(_0664_)
  );
  NAND _1423_ (
    .A(_0663_),
    .B(_0664_),
    .Y(_0665_)
  );
  NOR _1424_ (
    .A(ptr_read[0]),
    .B(_0665_),
    .Y(_0666_)
  );
  NOR _1425_ (
    .A(_0662_),
    .B(_0666_),
    .Y(_0667_)
  );
  NAND _1426_ (
    .A(ptr_read[1]),
    .B(_0667_),
    .Y(_0668_)
  );
  NOR _1427_ (
    .A(\mem[8] [4]),
    .B(ptr_read[2]),
    .Y(_0669_)
  );
  NOR _1428_ (
    .A(\mem[12] [4]),
    .B(_0241_),
    .Y(_0670_)
  );
  NOR _1429_ (
    .A(_0669_),
    .B(_0670_),
    .Y(_0671_)
  );
  NAND _1430_ (
    .A(_0220_),
    .B(_0671_),
    .Y(_0672_)
  );
  NAND _1431_ (
    .A(_0175_),
    .B(ptr_read[2]),
    .Y(_0673_)
  );
  NOR _1432_ (
    .A(\mem[9] [4]),
    .B(ptr_read[2]),
    .Y(_0674_)
  );
  NOR _1433_ (
    .A(_0220_),
    .B(_0674_),
    .Y(_0675_)
  );
  NAND _1434_ (
    .A(_0673_),
    .B(_0675_),
    .Y(_0676_)
  );
  NAND _1435_ (
    .A(_0672_),
    .B(_0676_),
    .Y(_0677_)
  );
  NOR _1436_ (
    .A(ptr_read[1]),
    .B(_0677_),
    .Y(_0678_)
  );
  NAND _1437_ (
    .A(ptr_read[3]),
    .B(_0668_),
    .Y(_0679_)
  );
  NOR _1438_ (
    .A(_0678_),
    .B(_0679_),
    .Y(_0680_)
  );
  NOR _1439_ (
    .A(_0139_),
    .B(_0241_),
    .Y(_0681_)
  );
  NOR _1440_ (
    .A(_0206_),
    .B(ptr_read[2]),
    .Y(_0682_)
  );
  NOR _1441_ (
    .A(_0681_),
    .B(_0682_),
    .Y(_0683_)
  );
  NOR _1442_ (
    .A(_0220_),
    .B(_0683_),
    .Y(_0684_)
  );
  NAND _1443_ (
    .A(_0187_),
    .B(_0241_),
    .Y(_0685_)
  );
  NAND _1444_ (
    .A(_0226_),
    .B(ptr_read[2]),
    .Y(_0686_)
  );
  NAND _1445_ (
    .A(_0685_),
    .B(_0686_),
    .Y(_0687_)
  );
  NOR _1446_ (
    .A(ptr_read[0]),
    .B(_0687_),
    .Y(_0688_)
  );
  NOR _1447_ (
    .A(_0684_),
    .B(_0688_),
    .Y(_0689_)
  );
  NOR _1448_ (
    .A(_0240_),
    .B(_0689_),
    .Y(_0690_)
  );
  NAND _1449_ (
    .A(_0237_),
    .B(ptr_read[2]),
    .Y(_0691_)
  );
  NOR _1450_ (
    .A(\mem[1] [4]),
    .B(ptr_read[2]),
    .Y(_0692_)
  );
  NAND _1451_ (
    .A(ptr_read[0]),
    .B(_0691_),
    .Y(_0693_)
  );
  NOR _1452_ (
    .A(_0692_),
    .B(_0693_),
    .Y(_0694_)
  );
  NAND _1453_ (
    .A(_0194_),
    .B(_0241_),
    .Y(_0695_)
  );
  NAND _1454_ (
    .A(_0236_),
    .B(ptr_read[2]),
    .Y(_0696_)
  );
  NAND _1455_ (
    .A(_0695_),
    .B(_0696_),
    .Y(_0697_)
  );
  NOR _1456_ (
    .A(ptr_read[0]),
    .B(_0697_),
    .Y(_0698_)
  );
  NOR _1457_ (
    .A(_0694_),
    .B(_0698_),
    .Y(_0699_)
  );
  NOR _1458_ (
    .A(ptr_read[1]),
    .B(_0699_),
    .Y(_0700_)
  );
  NOR _1459_ (
    .A(_0690_),
    .B(_0700_),
    .Y(_0701_)
  );
  NOR _1460_ (
    .A(ptr_read[3]),
    .B(_0701_),
    .Y(_0702_)
  );
  NOR _1461_ (
    .A(_0680_),
    .B(_0702_),
    .Y(_0703_)
  );
  NOR _1462_ (
    .A(_0208_),
    .B(_0703_),
    .Y(data_out[4])
  );
  NOR _1463_ (
    .A(\mem[15] [5]),
    .B(_0241_),
    .Y(_0704_)
  );
  NAND _1464_ (
    .A(_0164_),
    .B(_0241_),
    .Y(_0705_)
  );
  NAND _1465_ (
    .A(ptr_read[0]),
    .B(_0705_),
    .Y(_0706_)
  );
  NOR _1466_ (
    .A(_0704_),
    .B(_0706_),
    .Y(_0707_)
  );
  NAND _1467_ (
    .A(_0158_),
    .B(_0241_),
    .Y(_0708_)
  );
  NAND _1468_ (
    .A(_0182_),
    .B(ptr_read[2]),
    .Y(_0709_)
  );
  NAND _1469_ (
    .A(_0708_),
    .B(_0709_),
    .Y(_0710_)
  );
  NOR _1470_ (
    .A(ptr_read[0]),
    .B(_0710_),
    .Y(_0711_)
  );
  NOR _1471_ (
    .A(_0707_),
    .B(_0711_),
    .Y(_0712_)
  );
  NOR _1472_ (
    .A(_0242_),
    .B(_0712_),
    .Y(_0713_)
  );
  NAND _1473_ (
    .A(_0227_),
    .B(ptr_read[2]),
    .Y(_0714_)
  );
  NAND _1474_ (
    .A(_0188_),
    .B(_0241_),
    .Y(_0715_)
  );
  NAND _1475_ (
    .A(_0714_),
    .B(_0715_),
    .Y(_0716_)
  );
  NOR _1476_ (
    .A(ptr_read[0]),
    .B(_0716_),
    .Y(_0717_)
  );
  NOR _1477_ (
    .A(\mem[7] [5]),
    .B(_0241_),
    .Y(_0718_)
  );
  NOR _1478_ (
    .A(\mem[3] [5]),
    .B(ptr_read[2]),
    .Y(_0719_)
  );
  NOT _1479_ (
    .A(_0719_),
    .Y(_0720_)
  );
  NAND _1480_ (
    .A(ptr_read[0]),
    .B(_0720_),
    .Y(_0721_)
  );
  NOR _1481_ (
    .A(_0718_),
    .B(_0721_),
    .Y(_0722_)
  );
  NOR _1482_ (
    .A(_0717_),
    .B(_0722_),
    .Y(_0723_)
  );
  NOR _1483_ (
    .A(ptr_read[3]),
    .B(_0723_),
    .Y(_0724_)
  );
  NOR _1484_ (
    .A(_0713_),
    .B(_0724_),
    .Y(_0725_)
  );
  NOR _1485_ (
    .A(_0240_),
    .B(_0725_),
    .Y(_0726_)
  );
  NAND _1486_ (
    .A(_0176_),
    .B(ptr_read[2]),
    .Y(_0727_)
  );
  NOR _1487_ (
    .A(\mem[9] [5]),
    .B(ptr_read[2]),
    .Y(_0728_)
  );
  NAND _1488_ (
    .A(ptr_read[0]),
    .B(_0727_),
    .Y(_0729_)
  );
  NOR _1489_ (
    .A(_0728_),
    .B(_0729_),
    .Y(_0730_)
  );
  NAND _1490_ (
    .A(_0146_),
    .B(_0241_),
    .Y(_0731_)
  );
  NAND _1491_ (
    .A(_0170_),
    .B(ptr_read[2]),
    .Y(_0732_)
  );
  NAND _1492_ (
    .A(_0731_),
    .B(_0732_),
    .Y(_0733_)
  );
  NOR _1493_ (
    .A(ptr_read[0]),
    .B(_0733_),
    .Y(_0734_)
  );
  NOR _1494_ (
    .A(_0730_),
    .B(_0734_),
    .Y(_0735_)
  );
  NOR _1495_ (
    .A(_0242_),
    .B(_0735_),
    .Y(_0736_)
  );
  NAND _1496_ (
    .A(_0238_),
    .B(ptr_read[2]),
    .Y(_0737_)
  );
  NAND _1497_ (
    .A(_0195_),
    .B(_0241_),
    .Y(_0738_)
  );
  NAND _1498_ (
    .A(_0737_),
    .B(_0738_),
    .Y(_0739_)
  );
  NOR _1499_ (
    .A(ptr_read[0]),
    .B(_0739_),
    .Y(_0740_)
  );
  NOR _1500_ (
    .A(\mem[5] [5]),
    .B(_0241_),
    .Y(_0741_)
  );
  NAND _1501_ (
    .A(_0201_),
    .B(_0241_),
    .Y(_0742_)
  );
  NAND _1502_ (
    .A(ptr_read[0]),
    .B(_0742_),
    .Y(_0743_)
  );
  NOR _1503_ (
    .A(_0741_),
    .B(_0743_),
    .Y(_0744_)
  );
  NOR _1504_ (
    .A(_0740_),
    .B(_0744_),
    .Y(_0745_)
  );
  NOR _1505_ (
    .A(ptr_read[3]),
    .B(_0745_),
    .Y(_0746_)
  );
  NOR _1506_ (
    .A(_0736_),
    .B(_0746_),
    .Y(_0747_)
  );
  NOR _1507_ (
    .A(ptr_read[1]),
    .B(_0747_),
    .Y(_0748_)
  );
  NOR _1508_ (
    .A(_0726_),
    .B(_0748_),
    .Y(_0749_)
  );
  NOR _1509_ (
    .A(_0208_),
    .B(_0749_),
    .Y(data_out[5])
  );
  NOR _1510_ (
    .A(_0289_),
    .B(_0455_),
    .Y(_0750_)
  );
  NAND _1511_ (
    .A(_0266_),
    .B(_0750_),
    .Y(_0751_)
  );
  NAND _1512_ (
    .A(write),
    .B(_0750_),
    .Y(_0752_)
  );
  NOR _1513_ (
    .A(reset),
    .B(_0190_),
    .Y(_0753_)
  );
  NAND _1514_ (
    .A(_0752_),
    .B(_0753_),
    .Y(_0754_)
  );
  NAND _1515_ (
    .A(_0751_),
    .B(_0754_),
    .Y(_0000_)
  );
  NAND _1516_ (
    .A(_0270_),
    .B(_0750_),
    .Y(_0755_)
  );
  NOR _1517_ (
    .A(reset),
    .B(_0191_),
    .Y(_0756_)
  );
  NAND _1518_ (
    .A(_0752_),
    .B(_0756_),
    .Y(_0757_)
  );
  NAND _1519_ (
    .A(_0755_),
    .B(_0757_),
    .Y(_0001_)
  );
  NAND _1520_ (
    .A(_0274_),
    .B(_0750_),
    .Y(_0758_)
  );
  NOR _1521_ (
    .A(reset),
    .B(_0192_),
    .Y(_0759_)
  );
  NAND _1522_ (
    .A(_0752_),
    .B(_0759_),
    .Y(_0760_)
  );
  NAND _1523_ (
    .A(_0758_),
    .B(_0760_),
    .Y(_0002_)
  );
  NAND _1524_ (
    .A(_0278_),
    .B(_0750_),
    .Y(_0761_)
  );
  NOR _1525_ (
    .A(reset),
    .B(_0193_),
    .Y(_0762_)
  );
  NAND _1526_ (
    .A(_0752_),
    .B(_0762_),
    .Y(_0763_)
  );
  NAND _1527_ (
    .A(_0761_),
    .B(_0763_),
    .Y(_0003_)
  );
  NAND _1528_ (
    .A(_0282_),
    .B(_0750_),
    .Y(_0764_)
  );
  NOR _1529_ (
    .A(reset),
    .B(_0194_),
    .Y(_0765_)
  );
  NAND _1530_ (
    .A(_0752_),
    .B(_0765_),
    .Y(_0766_)
  );
  NAND _1531_ (
    .A(_0764_),
    .B(_0766_),
    .Y(_0004_)
  );
  NAND _1532_ (
    .A(_0286_),
    .B(_0750_),
    .Y(_0767_)
  );
  NOR _1533_ (
    .A(reset),
    .B(_0195_),
    .Y(_0768_)
  );
  NAND _1534_ (
    .A(_0752_),
    .B(_0768_),
    .Y(_0769_)
  );
  NAND _1535_ (
    .A(_0767_),
    .B(_0769_),
    .Y(_0005_)
  );
  NOR _1536_ (
    .A(_0337_),
    .B(_0455_),
    .Y(_0770_)
  );
  NAND _1537_ (
    .A(_0336_),
    .B(_0454_),
    .Y(_0771_)
  );
  NOR _1538_ (
    .A(_0183_),
    .B(reset),
    .Y(_0772_)
  );
  NOR _1539_ (
    .A(_0770_),
    .B(_0772_),
    .Y(_0773_)
  );
  NOR _1540_ (
    .A(_0266_),
    .B(_0771_),
    .Y(_0774_)
  );
  NOR _1541_ (
    .A(_0773_),
    .B(_0774_),
    .Y(_0048_)
  );
  NOR _1542_ (
    .A(_0184_),
    .B(reset),
    .Y(_0775_)
  );
  NOR _1543_ (
    .A(_0770_),
    .B(_0775_),
    .Y(_0776_)
  );
  NOR _1544_ (
    .A(_0270_),
    .B(_0771_),
    .Y(_0777_)
  );
  NOR _1545_ (
    .A(_0776_),
    .B(_0777_),
    .Y(_0049_)
  );
  NOR _1546_ (
    .A(_0185_),
    .B(reset),
    .Y(_0778_)
  );
  NOR _1547_ (
    .A(_0770_),
    .B(_0778_),
    .Y(_0779_)
  );
  NOR _1548_ (
    .A(_0274_),
    .B(_0771_),
    .Y(_0780_)
  );
  NOR _1549_ (
    .A(_0779_),
    .B(_0780_),
    .Y(_0050_)
  );
  NOR _1550_ (
    .A(_0186_),
    .B(reset),
    .Y(_0781_)
  );
  NOR _1551_ (
    .A(_0770_),
    .B(_0781_),
    .Y(_0782_)
  );
  NOR _1552_ (
    .A(_0278_),
    .B(_0771_),
    .Y(_0783_)
  );
  NOR _1553_ (
    .A(_0782_),
    .B(_0783_),
    .Y(_0051_)
  );
  NOR _1554_ (
    .A(_0187_),
    .B(reset),
    .Y(_0784_)
  );
  NOR _1555_ (
    .A(_0770_),
    .B(_0784_),
    .Y(_0785_)
  );
  NOR _1556_ (
    .A(_0282_),
    .B(_0771_),
    .Y(_0786_)
  );
  NOR _1557_ (
    .A(_0785_),
    .B(_0786_),
    .Y(_0052_)
  );
  NOR _1558_ (
    .A(_0188_),
    .B(reset),
    .Y(_0787_)
  );
  NOR _1559_ (
    .A(_0770_),
    .B(_0787_),
    .Y(_0788_)
  );
  NOR _1560_ (
    .A(_0286_),
    .B(_0771_),
    .Y(_0789_)
  );
  NOR _1561_ (
    .A(_0788_),
    .B(_0789_),
    .Y(_0053_)
  );
  NOR _1562_ (
    .A(_0252_),
    .B(_0455_),
    .Y(_0790_)
  );
  NAND _1563_ (
    .A(_0251_),
    .B(_0454_),
    .Y(_0791_)
  );
  NOR _1564_ (
    .A(reset),
    .B(_0202_),
    .Y(_0792_)
  );
  NOR _1565_ (
    .A(_0790_),
    .B(_0792_),
    .Y(_0793_)
  );
  NOR _1566_ (
    .A(_0266_),
    .B(_0791_),
    .Y(_0794_)
  );
  NOR _1567_ (
    .A(_0793_),
    .B(_0794_),
    .Y(_0054_)
  );
  NOR _1568_ (
    .A(reset),
    .B(_0203_),
    .Y(_0795_)
  );
  NOR _1569_ (
    .A(_0790_),
    .B(_0795_),
    .Y(_0796_)
  );
  NOR _1570_ (
    .A(_0270_),
    .B(_0791_),
    .Y(_0797_)
  );
  NOR _1571_ (
    .A(_0796_),
    .B(_0797_),
    .Y(_0055_)
  );
  NOR _1572_ (
    .A(reset),
    .B(_0204_),
    .Y(_0798_)
  );
  NOR _1573_ (
    .A(_0790_),
    .B(_0798_),
    .Y(_0799_)
  );
  NOR _1574_ (
    .A(_0274_),
    .B(_0791_),
    .Y(_0800_)
  );
  NOR _1575_ (
    .A(_0799_),
    .B(_0800_),
    .Y(_0056_)
  );
  NOR _1576_ (
    .A(reset),
    .B(_0205_),
    .Y(_0801_)
  );
  NOR _1577_ (
    .A(_0790_),
    .B(_0801_),
    .Y(_0802_)
  );
  NOR _1578_ (
    .A(_0278_),
    .B(_0791_),
    .Y(_0803_)
  );
  NOR _1579_ (
    .A(_0802_),
    .B(_0803_),
    .Y(_0057_)
  );
  NOR _1580_ (
    .A(reset),
    .B(_0206_),
    .Y(_0804_)
  );
  NOR _1581_ (
    .A(_0790_),
    .B(_0804_),
    .Y(_0805_)
  );
  NOR _1582_ (
    .A(_0282_),
    .B(_0791_),
    .Y(_0806_)
  );
  NOR _1583_ (
    .A(_0805_),
    .B(_0806_),
    .Y(_0058_)
  );
  NOR _1584_ (
    .A(reset),
    .B(_0207_),
    .Y(_0807_)
  );
  NOR _1585_ (
    .A(_0790_),
    .B(_0807_),
    .Y(_0808_)
  );
  NOR _1586_ (
    .A(_0286_),
    .B(_0791_),
    .Y(_0809_)
  );
  NOR _1587_ (
    .A(_0808_),
    .B(_0809_),
    .Y(_0059_)
  );
  NOR _1588_ (
    .A(_0260_),
    .B(_0289_),
    .Y(_0810_)
  );
  NAND _1589_ (
    .A(_0259_),
    .B(_0288_),
    .Y(_0811_)
  );
  NOR _1590_ (
    .A(reset),
    .B(_0228_),
    .Y(_0812_)
  );
  NOR _1591_ (
    .A(_0810_),
    .B(_0812_),
    .Y(_0813_)
  );
  NOR _1592_ (
    .A(_0266_),
    .B(_0811_),
    .Y(_0814_)
  );
  NOR _1593_ (
    .A(_0813_),
    .B(_0814_),
    .Y(_0060_)
  );
  NOR _1594_ (
    .A(reset),
    .B(_0230_),
    .Y(_0815_)
  );
  NOR _1595_ (
    .A(_0810_),
    .B(_0815_),
    .Y(_0816_)
  );
  NOR _1596_ (
    .A(_0270_),
    .B(_0811_),
    .Y(_0817_)
  );
  NOR _1597_ (
    .A(_0816_),
    .B(_0817_),
    .Y(_0061_)
  );
  NOR _1598_ (
    .A(reset),
    .B(_0232_),
    .Y(_0818_)
  );
  NOR _1599_ (
    .A(_0810_),
    .B(_0818_),
    .Y(_0819_)
  );
  NOR _1600_ (
    .A(_0274_),
    .B(_0811_),
    .Y(_0820_)
  );
  NOR _1601_ (
    .A(_0819_),
    .B(_0820_),
    .Y(_0062_)
  );
  NOR _1602_ (
    .A(reset),
    .B(_0234_),
    .Y(_0821_)
  );
  NOR _1603_ (
    .A(_0810_),
    .B(_0821_),
    .Y(_0822_)
  );
  NOR _1604_ (
    .A(_0278_),
    .B(_0811_),
    .Y(_0823_)
  );
  NOR _1605_ (
    .A(_0822_),
    .B(_0823_),
    .Y(_0063_)
  );
  NOR _1606_ (
    .A(reset),
    .B(_0236_),
    .Y(_0824_)
  );
  NOR _1607_ (
    .A(_0810_),
    .B(_0824_),
    .Y(_0825_)
  );
  NOR _1608_ (
    .A(_0282_),
    .B(_0811_),
    .Y(_0826_)
  );
  NOR _1609_ (
    .A(_0825_),
    .B(_0826_),
    .Y(_0064_)
  );
  NOR _1610_ (
    .A(reset),
    .B(_0238_),
    .Y(_0827_)
  );
  NOR _1611_ (
    .A(_0810_),
    .B(_0827_),
    .Y(_0828_)
  );
  NOR _1612_ (
    .A(_0286_),
    .B(_0811_),
    .Y(_0829_)
  );
  NOR _1613_ (
    .A(_0828_),
    .B(_0829_),
    .Y(_0065_)
  );
  NOR _1614_ (
    .A(_0260_),
    .B(_0315_),
    .Y(_0096_)
  );
  NAND _1615_ (
    .A(_0259_),
    .B(_0314_),
    .Y(_0097_)
  );
  NOR _1616_ (
    .A(reset),
    .B(_0229_),
    .Y(_0098_)
  );
  NOR _1617_ (
    .A(_0096_),
    .B(_0098_),
    .Y(_0099_)
  );
  NOR _1618_ (
    .A(_0266_),
    .B(_0097_),
    .Y(_0100_)
  );
  NOR _1619_ (
    .A(_0099_),
    .B(_0100_),
    .Y(_0066_)
  );
  NOR _1620_ (
    .A(reset),
    .B(_0231_),
    .Y(_0101_)
  );
  NOR _1621_ (
    .A(_0096_),
    .B(_0101_),
    .Y(_0102_)
  );
  NOR _1622_ (
    .A(_0270_),
    .B(_0097_),
    .Y(_0103_)
  );
  NOR _1623_ (
    .A(_0102_),
    .B(_0103_),
    .Y(_0067_)
  );
  NOR _1624_ (
    .A(reset),
    .B(_0233_),
    .Y(_0104_)
  );
  NOR _1625_ (
    .A(_0096_),
    .B(_0104_),
    .Y(_0105_)
  );
  NOR _1626_ (
    .A(_0274_),
    .B(_0097_),
    .Y(_0106_)
  );
  NOR _1627_ (
    .A(_0105_),
    .B(_0106_),
    .Y(_0068_)
  );
  NOR _1628_ (
    .A(reset),
    .B(_0235_),
    .Y(_0107_)
  );
  NOR _1629_ (
    .A(_0096_),
    .B(_0107_),
    .Y(_0108_)
  );
  NOR _1630_ (
    .A(_0278_),
    .B(_0097_),
    .Y(_0109_)
  );
  NOR _1631_ (
    .A(_0108_),
    .B(_0109_),
    .Y(_0069_)
  );
  NOR _1632_ (
    .A(reset),
    .B(_0237_),
    .Y(_0110_)
  );
  NOR _1633_ (
    .A(_0096_),
    .B(_0110_),
    .Y(_0111_)
  );
  NOR _1634_ (
    .A(_0282_),
    .B(_0097_),
    .Y(_0112_)
  );
  NOR _1635_ (
    .A(_0111_),
    .B(_0112_),
    .Y(_0070_)
  );
  NOR _1636_ (
    .A(reset),
    .B(_0239_),
    .Y(_0113_)
  );
  NOR _1637_ (
    .A(_0096_),
    .B(_0113_),
    .Y(_0114_)
  );
  NOR _1638_ (
    .A(_0286_),
    .B(_0097_),
    .Y(_0115_)
  );
  NOR _1639_ (
    .A(_0114_),
    .B(_0115_),
    .Y(_0071_)
  );
  NOR _1640_ (
    .A(_0260_),
    .B(_0337_),
    .Y(_0116_)
  );
  NAND _1641_ (
    .A(_0259_),
    .B(_0336_),
    .Y(_0117_)
  );
  NOR _1642_ (
    .A(reset),
    .B(_0221_),
    .Y(_0118_)
  );
  NOR _1643_ (
    .A(_0116_),
    .B(_0118_),
    .Y(_0119_)
  );
  NOR _1644_ (
    .A(_0266_),
    .B(_0117_),
    .Y(_0120_)
  );
  NOR _1645_ (
    .A(_0119_),
    .B(_0120_),
    .Y(_0072_)
  );
  NOR _1646_ (
    .A(reset),
    .B(_0223_),
    .Y(_0121_)
  );
  NOR _1647_ (
    .A(_0116_),
    .B(_0121_),
    .Y(_0122_)
  );
  NOR _1648_ (
    .A(_0270_),
    .B(_0117_),
    .Y(_0123_)
  );
  NOR _1649_ (
    .A(_0122_),
    .B(_0123_),
    .Y(_0073_)
  );
  NOR _1650_ (
    .A(reset),
    .B(_0224_),
    .Y(_0124_)
  );
  NOR _1651_ (
    .A(_0116_),
    .B(_0124_),
    .Y(_0125_)
  );
  NOR _1652_ (
    .A(_0274_),
    .B(_0117_),
    .Y(_0126_)
  );
  NOR _1653_ (
    .A(_0125_),
    .B(_0126_),
    .Y(_0074_)
  );
  NOR _1654_ (
    .A(reset),
    .B(_0225_),
    .Y(_0127_)
  );
  NOR _1655_ (
    .A(_0116_),
    .B(_0127_),
    .Y(_0128_)
  );
  NOR _1656_ (
    .A(_0278_),
    .B(_0117_),
    .Y(_0129_)
  );
  NOR _1657_ (
    .A(_0128_),
    .B(_0129_),
    .Y(_0075_)
  );
  NOR _1658_ (
    .A(reset),
    .B(_0226_),
    .Y(_0130_)
  );
  NOR _1659_ (
    .A(_0116_),
    .B(_0130_),
    .Y(_0131_)
  );
  NOR _1660_ (
    .A(_0282_),
    .B(_0117_),
    .Y(_0132_)
  );
  NOR _1661_ (
    .A(_0131_),
    .B(_0132_),
    .Y(_0076_)
  );
  NOR _1662_ (
    .A(reset),
    .B(_0227_),
    .Y(_0133_)
  );
  NOR _1663_ (
    .A(_0116_),
    .B(_0133_),
    .Y(_0134_)
  );
  NOR _1664_ (
    .A(_0286_),
    .B(_0117_),
    .Y(_0135_)
  );
  NOR _1665_ (
    .A(_0134_),
    .B(_0135_),
    .Y(_0077_)
  );
  DFF _1666_ (
    .C(clk),
    .D(_0000_),
    .Q(\mem[0] [0])
  );
  DFF _1667_ (
    .C(clk),
    .D(_0001_),
    .Q(\mem[0] [1])
  );
  DFF _1668_ (
    .C(clk),
    .D(_0002_),
    .Q(\mem[0] [2])
  );
  DFF _1669_ (
    .C(clk),
    .D(_0003_),
    .Q(\mem[0] [3])
  );
  DFF _1670_ (
    .C(clk),
    .D(_0004_),
    .Q(\mem[0] [4])
  );
  DFF _1671_ (
    .C(clk),
    .D(_0005_),
    .Q(\mem[0] [5])
  );
  DFF _1672_ (
    .C(clk),
    .D(_0042_),
    .Q(\mem[1] [0])
  );
  DFF _1673_ (
    .C(clk),
    .D(_0043_),
    .Q(\mem[1] [1])
  );
  DFF _1674_ (
    .C(clk),
    .D(_0044_),
    .Q(\mem[1] [2])
  );
  DFF _1675_ (
    .C(clk),
    .D(_0045_),
    .Q(\mem[1] [3])
  );
  DFF _1676_ (
    .C(clk),
    .D(_0046_),
    .Q(\mem[1] [4])
  );
  DFF _1677_ (
    .C(clk),
    .D(_0047_),
    .Q(\mem[1] [5])
  );
  DFF _1678_ (
    .C(clk),
    .D(_0048_),
    .Q(\mem[2] [0])
  );
  DFF _1679_ (
    .C(clk),
    .D(_0049_),
    .Q(\mem[2] [1])
  );
  DFF _1680_ (
    .C(clk),
    .D(_0050_),
    .Q(\mem[2] [2])
  );
  DFF _1681_ (
    .C(clk),
    .D(_0051_),
    .Q(\mem[2] [3])
  );
  DFF _1682_ (
    .C(clk),
    .D(_0052_),
    .Q(\mem[2] [4])
  );
  DFF _1683_ (
    .C(clk),
    .D(_0053_),
    .Q(\mem[2] [5])
  );
  DFF _1684_ (
    .C(clk),
    .D(_0054_),
    .Q(\mem[3] [0])
  );
  DFF _1685_ (
    .C(clk),
    .D(_0055_),
    .Q(\mem[3] [1])
  );
  DFF _1686_ (
    .C(clk),
    .D(_0056_),
    .Q(\mem[3] [2])
  );
  DFF _1687_ (
    .C(clk),
    .D(_0057_),
    .Q(\mem[3] [3])
  );
  DFF _1688_ (
    .C(clk),
    .D(_0058_),
    .Q(\mem[3] [4])
  );
  DFF _1689_ (
    .C(clk),
    .D(_0059_),
    .Q(\mem[3] [5])
  );
  DFF _1690_ (
    .C(clk),
    .D(_0060_),
    .Q(\mem[4] [0])
  );
  DFF _1691_ (
    .C(clk),
    .D(_0061_),
    .Q(\mem[4] [1])
  );
  DFF _1692_ (
    .C(clk),
    .D(_0062_),
    .Q(\mem[4] [2])
  );
  DFF _1693_ (
    .C(clk),
    .D(_0063_),
    .Q(\mem[4] [3])
  );
  DFF _1694_ (
    .C(clk),
    .D(_0064_),
    .Q(\mem[4] [4])
  );
  DFF _1695_ (
    .C(clk),
    .D(_0065_),
    .Q(\mem[4] [5])
  );
  DFF _1696_ (
    .C(clk),
    .D(_0066_),
    .Q(\mem[5] [0])
  );
  DFF _1697_ (
    .C(clk),
    .D(_0067_),
    .Q(\mem[5] [1])
  );
  DFF _1698_ (
    .C(clk),
    .D(_0068_),
    .Q(\mem[5] [2])
  );
  DFF _1699_ (
    .C(clk),
    .D(_0069_),
    .Q(\mem[5] [3])
  );
  DFF _1700_ (
    .C(clk),
    .D(_0070_),
    .Q(\mem[5] [4])
  );
  DFF _1701_ (
    .C(clk),
    .D(_0071_),
    .Q(\mem[5] [5])
  );
  DFF _1702_ (
    .C(clk),
    .D(_0072_),
    .Q(\mem[6] [0])
  );
  DFF _1703_ (
    .C(clk),
    .D(_0073_),
    .Q(\mem[6] [1])
  );
  DFF _1704_ (
    .C(clk),
    .D(_0074_),
    .Q(\mem[6] [2])
  );
  DFF _1705_ (
    .C(clk),
    .D(_0075_),
    .Q(\mem[6] [3])
  );
  DFF _1706_ (
    .C(clk),
    .D(_0076_),
    .Q(\mem[6] [4])
  );
  DFF _1707_ (
    .C(clk),
    .D(_0077_),
    .Q(\mem[6] [5])
  );
  DFF _1708_ (
    .C(clk),
    .D(_0078_),
    .Q(\mem[7] [0])
  );
  DFF _1709_ (
    .C(clk),
    .D(_0079_),
    .Q(\mem[7] [1])
  );
  DFF _1710_ (
    .C(clk),
    .D(_0080_),
    .Q(\mem[7] [2])
  );
  DFF _1711_ (
    .C(clk),
    .D(_0081_),
    .Q(\mem[7] [3])
  );
  DFF _1712_ (
    .C(clk),
    .D(_0082_),
    .Q(\mem[7] [4])
  );
  DFF _1713_ (
    .C(clk),
    .D(_0083_),
    .Q(\mem[7] [5])
  );
  DFF _1714_ (
    .C(clk),
    .D(_0036_),
    .Q(\mem[15] [0])
  );
  DFF _1715_ (
    .C(clk),
    .D(_0037_),
    .Q(\mem[15] [1])
  );
  DFF _1716_ (
    .C(clk),
    .D(_0038_),
    .Q(\mem[15] [2])
  );
  DFF _1717_ (
    .C(clk),
    .D(_0039_),
    .Q(\mem[15] [3])
  );
  DFF _1718_ (
    .C(clk),
    .D(_0040_),
    .Q(\mem[15] [4])
  );
  DFF _1719_ (
    .C(clk),
    .D(_0041_),
    .Q(\mem[15] [5])
  );
  DFF _1720_ (
    .C(clk),
    .D(_0030_),
    .Q(\mem[14] [0])
  );
  DFF _1721_ (
    .C(clk),
    .D(_0031_),
    .Q(\mem[14] [1])
  );
  DFF _1722_ (
    .C(clk),
    .D(_0032_),
    .Q(\mem[14] [2])
  );
  DFF _1723_ (
    .C(clk),
    .D(_0033_),
    .Q(\mem[14] [3])
  );
  DFF _1724_ (
    .C(clk),
    .D(_0034_),
    .Q(\mem[14] [4])
  );
  DFF _1725_ (
    .C(clk),
    .D(_0035_),
    .Q(\mem[14] [5])
  );
  DFF _1726_ (
    .C(clk),
    .D(_0024_),
    .Q(\mem[13] [0])
  );
  DFF _1727_ (
    .C(clk),
    .D(_0025_),
    .Q(\mem[13] [1])
  );
  DFF _1728_ (
    .C(clk),
    .D(_0026_),
    .Q(\mem[13] [2])
  );
  DFF _1729_ (
    .C(clk),
    .D(_0027_),
    .Q(\mem[13] [3])
  );
  DFF _1730_ (
    .C(clk),
    .D(_0028_),
    .Q(\mem[13] [4])
  );
  DFF _1731_ (
    .C(clk),
    .D(_0029_),
    .Q(\mem[13] [5])
  );
  DFF _1732_ (
    .C(clk),
    .D(_0018_),
    .Q(\mem[12] [0])
  );
  DFF _1733_ (
    .C(clk),
    .D(_0019_),
    .Q(\mem[12] [1])
  );
  DFF _1734_ (
    .C(clk),
    .D(_0020_),
    .Q(\mem[12] [2])
  );
  DFF _1735_ (
    .C(clk),
    .D(_0021_),
    .Q(\mem[12] [3])
  );
  DFF _1736_ (
    .C(clk),
    .D(_0022_),
    .Q(\mem[12] [4])
  );
  DFF _1737_ (
    .C(clk),
    .D(_0023_),
    .Q(\mem[12] [5])
  );
  DFF _1738_ (
    .C(clk),
    .D(_0012_),
    .Q(\mem[11] [0])
  );
  DFF _1739_ (
    .C(clk),
    .D(_0013_),
    .Q(\mem[11] [1])
  );
  DFF _1740_ (
    .C(clk),
    .D(_0014_),
    .Q(\mem[11] [2])
  );
  DFF _1741_ (
    .C(clk),
    .D(_0015_),
    .Q(\mem[11] [3])
  );
  DFF _1742_ (
    .C(clk),
    .D(_0016_),
    .Q(\mem[11] [4])
  );
  DFF _1743_ (
    .C(clk),
    .D(_0017_),
    .Q(\mem[11] [5])
  );
  DFF _1744_ (
    .C(clk),
    .D(_0006_),
    .Q(\mem[10] [0])
  );
  DFF _1745_ (
    .C(clk),
    .D(_0007_),
    .Q(\mem[10] [1])
  );
  DFF _1746_ (
    .C(clk),
    .D(_0008_),
    .Q(\mem[10] [2])
  );
  DFF _1747_ (
    .C(clk),
    .D(_0009_),
    .Q(\mem[10] [3])
  );
  DFF _1748_ (
    .C(clk),
    .D(_0010_),
    .Q(\mem[10] [4])
  );
  DFF _1749_ (
    .C(clk),
    .D(_0011_),
    .Q(\mem[10] [5])
  );
  DFF _1750_ (
    .C(clk),
    .D(_0090_),
    .Q(\mem[9] [0])
  );
  DFF _1751_ (
    .C(clk),
    .D(_0091_),
    .Q(\mem[9] [1])
  );
  DFF _1752_ (
    .C(clk),
    .D(_0092_),
    .Q(\mem[9] [2])
  );
  DFF _1753_ (
    .C(clk),
    .D(_0093_),
    .Q(\mem[9] [3])
  );
  DFF _1754_ (
    .C(clk),
    .D(_0094_),
    .Q(\mem[9] [4])
  );
  DFF _1755_ (
    .C(clk),
    .D(_0095_),
    .Q(\mem[9] [5])
  );
  DFF _1756_ (
    .C(clk),
    .D(_0084_),
    .Q(\mem[8] [0])
  );
  DFF _1757_ (
    .C(clk),
    .D(_0085_),
    .Q(\mem[8] [1])
  );
  DFF _1758_ (
    .C(clk),
    .D(_0086_),
    .Q(\mem[8] [2])
  );
  DFF _1759_ (
    .C(clk),
    .D(_0087_),
    .Q(\mem[8] [3])
  );
  DFF _1760_ (
    .C(clk),
    .D(_0088_),
    .Q(\mem[8] [4])
  );
  DFF _1761_ (
    .C(clk),
    .D(_0089_),
    .Q(\mem[8] [5])
  );
  assign k = 32'd16;
endmodule

(* dynports =  1  *)
(* src = "memoria.v:1" *)
module \$paramod\memoria\BITNUMBER=6\LENGTH=4 (data_in, ptr_write, ptr_read, reset, clk, read, write, data_out);
  wire _000_;
  wire _001_;
  wire _002_;
  wire _003_;
  wire _004_;
  wire _005_;
  wire _006_;
  wire _007_;
  wire _008_;
  wire _009_;
  wire _010_;
  wire _011_;
  wire _012_;
  wire _013_;
  wire _014_;
  wire _015_;
  wire _016_;
  wire _017_;
  wire _018_;
  wire _019_;
  wire _020_;
  wire _021_;
  wire _022_;
  wire _023_;
  wire _024_;
  wire _025_;
  wire _026_;
  wire _027_;
  wire _028_;
  wire _029_;
  wire _030_;
  wire _031_;
  wire _032_;
  wire _033_;
  wire _034_;
  wire _035_;
  wire _036_;
  wire _037_;
  wire _038_;
  wire _039_;
  wire _040_;
  wire _041_;
  wire _042_;
  wire _043_;
  wire _044_;
  wire _045_;
  wire _046_;
  wire _047_;
  wire _048_;
  wire _049_;
  wire _050_;
  wire _051_;
  wire _052_;
  wire _053_;
  wire _054_;
  wire _055_;
  wire _056_;
  wire _057_;
  wire _058_;
  wire _059_;
  wire _060_;
  wire _061_;
  wire _062_;
  wire _063_;
  wire _064_;
  wire _065_;
  wire _066_;
  wire _067_;
  wire _068_;
  wire _069_;
  wire _070_;
  wire _071_;
  wire _072_;
  wire _073_;
  wire _074_;
  wire _075_;
  wire _076_;
  wire _077_;
  wire _078_;
  wire _079_;
  wire _080_;
  wire _081_;
  wire _082_;
  wire _083_;
  wire _084_;
  wire _085_;
  wire _086_;
  wire _087_;
  wire _088_;
  wire _089_;
  wire _090_;
  wire _091_;
  wire _092_;
  wire _093_;
  wire _094_;
  wire _095_;
  wire _096_;
  wire _097_;
  wire _098_;
  wire _099_;
  wire _100_;
  wire _101_;
  wire _102_;
  wire _103_;
  wire _104_;
  wire _105_;
  wire _106_;
  wire _107_;
  wire _108_;
  wire _109_;
  wire _110_;
  wire _111_;
  wire _112_;
  wire _113_;
  wire _114_;
  wire _115_;
  wire _116_;
  wire _117_;
  wire _118_;
  wire _119_;
  wire _120_;
  wire _121_;
  wire _122_;
  wire _123_;
  wire _124_;
  wire _125_;
  wire _126_;
  wire _127_;
  wire _128_;
  wire _129_;
  wire _130_;
  wire _131_;
  wire _132_;
  wire _133_;
  wire _134_;
  wire _135_;
  wire _136_;
  wire _137_;
  wire _138_;
  wire _139_;
  wire _140_;
  wire _141_;
  wire _142_;
  wire _143_;
  wire _144_;
  wire _145_;
  wire _146_;
  wire _147_;
  wire _148_;
  wire _149_;
  wire _150_;
  wire _151_;
  wire _152_;
  wire _153_;
  wire _154_;
  wire _155_;
  wire _156_;
  wire _157_;
  wire _158_;
  wire _159_;
  wire _160_;
  wire _161_;
  wire _162_;
  wire _163_;
  wire _164_;
  wire _165_;
  wire _166_;
  wire _167_;
  wire _168_;
  wire _169_;
  wire _170_;
  wire _171_;
  wire _172_;
  wire _173_;
  wire _174_;
  wire _175_;
  wire _176_;
  wire _177_;
  wire _178_;
  wire _179_;
  wire _180_;
  wire _181_;
  wire _182_;
  wire _183_;
  wire _184_;
  wire _185_;
  wire _186_;
  wire _187_;
  wire _188_;
  wire _189_;
  wire _190_;
  wire _191_;
  wire _192_;
  wire _193_;
  wire _194_;
  wire _195_;
  wire _196_;
  (* src = "memoria.v:7" *)
  input clk;
  (* src = "memoria.v:3" *)
  input [5:0] data_in;
  (* src = "memoria.v:10" *)
  output [5:0] data_out;
  (* src = "memoria.v:13" *)
  wire [31:0] k;
  wire [5:0] \mem[0] ;
  wire [5:0] \mem[1] ;
  wire [5:0] \mem[2] ;
  wire [5:0] \mem[3] ;
  (* src = "memoria.v:5" *)
  input [1:0] ptr_read;
  (* src = "memoria.v:4" *)
  input [1:0] ptr_write;
  (* src = "memoria.v:8" *)
  input read;
  (* src = "memoria.v:6" *)
  input reset;
  (* src = "memoria.v:9" *)
  input write;
  NOT _197_ (
    .A(read),
    .Y(_165_)
  );
  NOT _198_ (
    .A(reset),
    .Y(_166_)
  );
  NOT _199_ (
    .A(write),
    .Y(_167_)
  );
  NOT _200_ (
    .A(ptr_write[0]),
    .Y(_168_)
  );
  NOT _201_ (
    .A(ptr_write[1]),
    .Y(_169_)
  );
  NOT _202_ (
    .A(\mem[0] [0]),
    .Y(_170_)
  );
  NOT _203_ (
    .A(\mem[1] [0]),
    .Y(_171_)
  );
  NOT _204_ (
    .A(\mem[0] [1]),
    .Y(_172_)
  );
  NOT _205_ (
    .A(\mem[1] [1]),
    .Y(_173_)
  );
  NOT _206_ (
    .A(\mem[0] [2]),
    .Y(_174_)
  );
  NOT _207_ (
    .A(\mem[1] [2]),
    .Y(_175_)
  );
  NOT _208_ (
    .A(\mem[0] [3]),
    .Y(_176_)
  );
  NOT _209_ (
    .A(\mem[1] [3]),
    .Y(_177_)
  );
  NOT _210_ (
    .A(\mem[0] [4]),
    .Y(_178_)
  );
  NOT _211_ (
    .A(\mem[1] [4]),
    .Y(_179_)
  );
  NOT _212_ (
    .A(\mem[0] [5]),
    .Y(_180_)
  );
  NOT _213_ (
    .A(\mem[1] [5]),
    .Y(_181_)
  );
  NOT _214_ (
    .A(\mem[2] [0]),
    .Y(_182_)
  );
  NOT _215_ (
    .A(\mem[3] [0]),
    .Y(_183_)
  );
  NOT _216_ (
    .A(\mem[2] [1]),
    .Y(_184_)
  );
  NOT _217_ (
    .A(\mem[3] [1]),
    .Y(_185_)
  );
  NOT _218_ (
    .A(\mem[2] [2]),
    .Y(_186_)
  );
  NOT _219_ (
    .A(\mem[3] [2]),
    .Y(_187_)
  );
  NOT _220_ (
    .A(\mem[2] [3]),
    .Y(_188_)
  );
  NOT _221_ (
    .A(\mem[3] [3]),
    .Y(_189_)
  );
  NOT _222_ (
    .A(\mem[2] [4]),
    .Y(_190_)
  );
  NOT _223_ (
    .A(\mem[3] [4]),
    .Y(_191_)
  );
  NOT _224_ (
    .A(\mem[2] [5]),
    .Y(_192_)
  );
  NOT _225_ (
    .A(\mem[3] [5]),
    .Y(_193_)
  );
  NOR _226_ (
    .A(ptr_read[0]),
    .B(\mem[2] [1]),
    .Y(_194_)
  );
  NAND _227_ (
    .A(ptr_read[0]),
    .B(_185_),
    .Y(_195_)
  );
  NAND _228_ (
    .A(ptr_read[1]),
    .B(_195_),
    .Y(_196_)
  );
  NOR _229_ (
    .A(_194_),
    .B(_196_),
    .Y(_024_)
  );
  NAND _230_ (
    .A(ptr_read[0]),
    .B(\mem[1] [1]),
    .Y(_025_)
  );
  NOT _231_ (
    .A(_025_),
    .Y(_026_)
  );
  NOR _232_ (
    .A(ptr_read[0]),
    .B(_172_),
    .Y(_027_)
  );
  NOR _233_ (
    .A(_026_),
    .B(_027_),
    .Y(_028_)
  );
  NOR _234_ (
    .A(ptr_read[1]),
    .B(_028_),
    .Y(_029_)
  );
  NOR _235_ (
    .A(_024_),
    .B(_029_),
    .Y(_030_)
  );
  NOR _236_ (
    .A(_165_),
    .B(_030_),
    .Y(data_out[1])
  );
  NOR _237_ (
    .A(ptr_read[0]),
    .B(\mem[2] [2]),
    .Y(_031_)
  );
  NAND _238_ (
    .A(ptr_read[0]),
    .B(_187_),
    .Y(_032_)
  );
  NAND _239_ (
    .A(ptr_read[1]),
    .B(_032_),
    .Y(_033_)
  );
  NOR _240_ (
    .A(_031_),
    .B(_033_),
    .Y(_034_)
  );
  NAND _241_ (
    .A(ptr_read[0]),
    .B(\mem[1] [2]),
    .Y(_035_)
  );
  NOT _242_ (
    .A(_035_),
    .Y(_036_)
  );
  NOR _243_ (
    .A(ptr_read[0]),
    .B(_174_),
    .Y(_037_)
  );
  NOR _244_ (
    .A(_036_),
    .B(_037_),
    .Y(_038_)
  );
  NOR _245_ (
    .A(ptr_read[1]),
    .B(_038_),
    .Y(_039_)
  );
  NOR _246_ (
    .A(_034_),
    .B(_039_),
    .Y(_040_)
  );
  NOR _247_ (
    .A(_165_),
    .B(_040_),
    .Y(data_out[2])
  );
  NOR _248_ (
    .A(ptr_read[0]),
    .B(\mem[2] [3]),
    .Y(_041_)
  );
  NAND _249_ (
    .A(ptr_read[0]),
    .B(_189_),
    .Y(_042_)
  );
  NAND _250_ (
    .A(ptr_read[1]),
    .B(_042_),
    .Y(_043_)
  );
  NOR _251_ (
    .A(_041_),
    .B(_043_),
    .Y(_044_)
  );
  NAND _252_ (
    .A(ptr_read[0]),
    .B(\mem[1] [3]),
    .Y(_045_)
  );
  NOT _253_ (
    .A(_045_),
    .Y(_046_)
  );
  NOR _254_ (
    .A(ptr_read[0]),
    .B(_176_),
    .Y(_047_)
  );
  NOR _255_ (
    .A(_046_),
    .B(_047_),
    .Y(_048_)
  );
  NOR _256_ (
    .A(ptr_read[1]),
    .B(_048_),
    .Y(_049_)
  );
  NOR _257_ (
    .A(_044_),
    .B(_049_),
    .Y(_050_)
  );
  NOR _258_ (
    .A(_165_),
    .B(_050_),
    .Y(data_out[3])
  );
  NOR _259_ (
    .A(ptr_read[0]),
    .B(\mem[2] [4]),
    .Y(_051_)
  );
  NAND _260_ (
    .A(ptr_read[0]),
    .B(_191_),
    .Y(_052_)
  );
  NAND _261_ (
    .A(ptr_read[1]),
    .B(_052_),
    .Y(_053_)
  );
  NOR _262_ (
    .A(_051_),
    .B(_053_),
    .Y(_054_)
  );
  NAND _263_ (
    .A(ptr_read[0]),
    .B(\mem[1] [4]),
    .Y(_055_)
  );
  NOT _264_ (
    .A(_055_),
    .Y(_056_)
  );
  NOR _265_ (
    .A(ptr_read[0]),
    .B(_178_),
    .Y(_057_)
  );
  NOR _266_ (
    .A(_056_),
    .B(_057_),
    .Y(_058_)
  );
  NOR _267_ (
    .A(ptr_read[1]),
    .B(_058_),
    .Y(_059_)
  );
  NOR _268_ (
    .A(_054_),
    .B(_059_),
    .Y(_060_)
  );
  NOR _269_ (
    .A(_165_),
    .B(_060_),
    .Y(data_out[4])
  );
  NOR _270_ (
    .A(ptr_read[0]),
    .B(\mem[2] [5]),
    .Y(_061_)
  );
  NAND _271_ (
    .A(ptr_read[0]),
    .B(_193_),
    .Y(_062_)
  );
  NAND _272_ (
    .A(ptr_read[1]),
    .B(_062_),
    .Y(_063_)
  );
  NOR _273_ (
    .A(_061_),
    .B(_063_),
    .Y(_064_)
  );
  NAND _274_ (
    .A(ptr_read[0]),
    .B(\mem[1] [5]),
    .Y(_065_)
  );
  NOT _275_ (
    .A(_065_),
    .Y(_066_)
  );
  NOR _276_ (
    .A(ptr_read[0]),
    .B(_180_),
    .Y(_067_)
  );
  NOR _277_ (
    .A(_066_),
    .B(_067_),
    .Y(_068_)
  );
  NOR _278_ (
    .A(ptr_read[1]),
    .B(_068_),
    .Y(_069_)
  );
  NOR _279_ (
    .A(_064_),
    .B(_069_),
    .Y(_070_)
  );
  NOR _280_ (
    .A(_165_),
    .B(_070_),
    .Y(data_out[5])
  );
  NOR _281_ (
    .A(reset),
    .B(_167_),
    .Y(_071_)
  );
  NAND _282_ (
    .A(_166_),
    .B(write),
    .Y(_072_)
  );
  NOR _283_ (
    .A(ptr_write[1]),
    .B(_072_),
    .Y(_073_)
  );
  NAND _284_ (
    .A(_169_),
    .B(_071_),
    .Y(_074_)
  );
  NOR _285_ (
    .A(ptr_write[0]),
    .B(_074_),
    .Y(_075_)
  );
  NAND _286_ (
    .A(_168_),
    .B(_073_),
    .Y(_076_)
  );
  NOR _287_ (
    .A(reset),
    .B(_170_),
    .Y(_077_)
  );
  NOR _288_ (
    .A(_075_),
    .B(_077_),
    .Y(_078_)
  );
  NOR _289_ (
    .A(data_in[0]),
    .B(_076_),
    .Y(_079_)
  );
  NOR _290_ (
    .A(_078_),
    .B(_079_),
    .Y(_000_)
  );
  NOR _291_ (
    .A(reset),
    .B(_172_),
    .Y(_080_)
  );
  NOR _292_ (
    .A(_075_),
    .B(_080_),
    .Y(_081_)
  );
  NOR _293_ (
    .A(data_in[1]),
    .B(_076_),
    .Y(_082_)
  );
  NOR _294_ (
    .A(_081_),
    .B(_082_),
    .Y(_001_)
  );
  NOR _295_ (
    .A(reset),
    .B(_174_),
    .Y(_083_)
  );
  NOR _296_ (
    .A(_075_),
    .B(_083_),
    .Y(_084_)
  );
  NOR _297_ (
    .A(data_in[2]),
    .B(_076_),
    .Y(_085_)
  );
  NOR _298_ (
    .A(_084_),
    .B(_085_),
    .Y(_002_)
  );
  NOR _299_ (
    .A(reset),
    .B(_176_),
    .Y(_086_)
  );
  NOR _300_ (
    .A(_075_),
    .B(_086_),
    .Y(_087_)
  );
  NOR _301_ (
    .A(data_in[3]),
    .B(_076_),
    .Y(_088_)
  );
  NOR _302_ (
    .A(_087_),
    .B(_088_),
    .Y(_003_)
  );
  NOR _303_ (
    .A(reset),
    .B(_178_),
    .Y(_089_)
  );
  NOR _304_ (
    .A(_075_),
    .B(_089_),
    .Y(_090_)
  );
  NOR _305_ (
    .A(data_in[4]),
    .B(_076_),
    .Y(_091_)
  );
  NOR _306_ (
    .A(_090_),
    .B(_091_),
    .Y(_004_)
  );
  NOR _307_ (
    .A(reset),
    .B(_180_),
    .Y(_092_)
  );
  NOR _308_ (
    .A(_075_),
    .B(_092_),
    .Y(_093_)
  );
  NOR _309_ (
    .A(data_in[5]),
    .B(_076_),
    .Y(_094_)
  );
  NOR _310_ (
    .A(_093_),
    .B(_094_),
    .Y(_005_)
  );
  NOR _311_ (
    .A(_168_),
    .B(_074_),
    .Y(_095_)
  );
  NAND _312_ (
    .A(ptr_write[0]),
    .B(_073_),
    .Y(_096_)
  );
  NOR _313_ (
    .A(reset),
    .B(_171_),
    .Y(_097_)
  );
  NOR _314_ (
    .A(_095_),
    .B(_097_),
    .Y(_098_)
  );
  NOR _315_ (
    .A(data_in[0]),
    .B(_096_),
    .Y(_099_)
  );
  NOR _316_ (
    .A(_098_),
    .B(_099_),
    .Y(_006_)
  );
  NOR _317_ (
    .A(reset),
    .B(_173_),
    .Y(_100_)
  );
  NOR _318_ (
    .A(_095_),
    .B(_100_),
    .Y(_101_)
  );
  NOR _319_ (
    .A(data_in[1]),
    .B(_096_),
    .Y(_102_)
  );
  NOR _320_ (
    .A(_101_),
    .B(_102_),
    .Y(_007_)
  );
  NOR _321_ (
    .A(reset),
    .B(_175_),
    .Y(_103_)
  );
  NOR _322_ (
    .A(_095_),
    .B(_103_),
    .Y(_104_)
  );
  NOR _323_ (
    .A(data_in[2]),
    .B(_096_),
    .Y(_105_)
  );
  NOR _324_ (
    .A(_104_),
    .B(_105_),
    .Y(_008_)
  );
  NOR _325_ (
    .A(reset),
    .B(_177_),
    .Y(_106_)
  );
  NOR _326_ (
    .A(_095_),
    .B(_106_),
    .Y(_107_)
  );
  NOR _327_ (
    .A(data_in[3]),
    .B(_096_),
    .Y(_108_)
  );
  NOR _328_ (
    .A(_107_),
    .B(_108_),
    .Y(_009_)
  );
  NOR _329_ (
    .A(reset),
    .B(_179_),
    .Y(_109_)
  );
  NOR _330_ (
    .A(_095_),
    .B(_109_),
    .Y(_110_)
  );
  NOR _331_ (
    .A(data_in[4]),
    .B(_096_),
    .Y(_111_)
  );
  NOR _332_ (
    .A(_110_),
    .B(_111_),
    .Y(_010_)
  );
  NOR _333_ (
    .A(reset),
    .B(_181_),
    .Y(_112_)
  );
  NOR _334_ (
    .A(_095_),
    .B(_112_),
    .Y(_113_)
  );
  NOR _335_ (
    .A(data_in[5]),
    .B(_096_),
    .Y(_114_)
  );
  NOR _336_ (
    .A(_113_),
    .B(_114_),
    .Y(_011_)
  );
  NOR _337_ (
    .A(ptr_write[0]),
    .B(_169_),
    .Y(_115_)
  );
  NAND _338_ (
    .A(_168_),
    .B(ptr_write[1]),
    .Y(_116_)
  );
  NAND _339_ (
    .A(write),
    .B(ptr_write[1]),
    .Y(_117_)
  );
  NOT _340_ (
    .A(_117_),
    .Y(_118_)
  );
  NOR _341_ (
    .A(_072_),
    .B(_116_),
    .Y(_119_)
  );
  NAND _342_ (
    .A(_071_),
    .B(_115_),
    .Y(_120_)
  );
  NOR _343_ (
    .A(reset),
    .B(_182_),
    .Y(_121_)
  );
  NOR _344_ (
    .A(_119_),
    .B(_121_),
    .Y(_122_)
  );
  NOR _345_ (
    .A(data_in[0]),
    .B(_120_),
    .Y(_123_)
  );
  NOR _346_ (
    .A(_122_),
    .B(_123_),
    .Y(_012_)
  );
  NOR _347_ (
    .A(reset),
    .B(_184_),
    .Y(_124_)
  );
  NOR _348_ (
    .A(_119_),
    .B(_124_),
    .Y(_125_)
  );
  NOR _349_ (
    .A(data_in[1]),
    .B(_120_),
    .Y(_126_)
  );
  NOR _350_ (
    .A(_125_),
    .B(_126_),
    .Y(_013_)
  );
  NOR _351_ (
    .A(reset),
    .B(_186_),
    .Y(_127_)
  );
  NOR _352_ (
    .A(_119_),
    .B(_127_),
    .Y(_128_)
  );
  NOR _353_ (
    .A(data_in[2]),
    .B(_120_),
    .Y(_129_)
  );
  NOR _354_ (
    .A(_128_),
    .B(_129_),
    .Y(_014_)
  );
  NOR _355_ (
    .A(reset),
    .B(_188_),
    .Y(_130_)
  );
  NOR _356_ (
    .A(_119_),
    .B(_130_),
    .Y(_131_)
  );
  NOR _357_ (
    .A(data_in[3]),
    .B(_120_),
    .Y(_132_)
  );
  NOR _358_ (
    .A(_131_),
    .B(_132_),
    .Y(_015_)
  );
  NOR _359_ (
    .A(reset),
    .B(_190_),
    .Y(_133_)
  );
  NOR _360_ (
    .A(_119_),
    .B(_133_),
    .Y(_134_)
  );
  NOR _361_ (
    .A(data_in[4]),
    .B(_120_),
    .Y(_135_)
  );
  NOR _362_ (
    .A(_134_),
    .B(_135_),
    .Y(_016_)
  );
  NOR _363_ (
    .A(reset),
    .B(_192_),
    .Y(_136_)
  );
  NOR _364_ (
    .A(_119_),
    .B(_136_),
    .Y(_137_)
  );
  NOR _365_ (
    .A(data_in[5]),
    .B(_120_),
    .Y(_138_)
  );
  NOR _366_ (
    .A(_137_),
    .B(_138_),
    .Y(_017_)
  );
  NOR _367_ (
    .A(_168_),
    .B(_117_),
    .Y(_139_)
  );
  NAND _368_ (
    .A(ptr_write[0]),
    .B(_118_),
    .Y(_140_)
  );
  NOR _369_ (
    .A(reset),
    .B(_139_),
    .Y(_141_)
  );
  NAND _370_ (
    .A(\mem[3] [0]),
    .B(_141_),
    .Y(_142_)
  );
  NOR _371_ (
    .A(_072_),
    .B(_140_),
    .Y(_143_)
  );
  NAND _372_ (
    .A(data_in[0]),
    .B(_143_),
    .Y(_144_)
  );
  NAND _373_ (
    .A(_142_),
    .B(_144_),
    .Y(_018_)
  );
  NAND _374_ (
    .A(\mem[3] [1]),
    .B(_141_),
    .Y(_145_)
  );
  NAND _375_ (
    .A(data_in[1]),
    .B(_143_),
    .Y(_146_)
  );
  NAND _376_ (
    .A(_145_),
    .B(_146_),
    .Y(_019_)
  );
  NAND _377_ (
    .A(\mem[3] [2]),
    .B(_141_),
    .Y(_147_)
  );
  NAND _378_ (
    .A(data_in[2]),
    .B(_143_),
    .Y(_148_)
  );
  NAND _379_ (
    .A(_147_),
    .B(_148_),
    .Y(_020_)
  );
  NAND _380_ (
    .A(\mem[3] [3]),
    .B(_141_),
    .Y(_149_)
  );
  NAND _381_ (
    .A(data_in[3]),
    .B(_143_),
    .Y(_150_)
  );
  NAND _382_ (
    .A(_149_),
    .B(_150_),
    .Y(_021_)
  );
  NAND _383_ (
    .A(\mem[3] [4]),
    .B(_141_),
    .Y(_151_)
  );
  NAND _384_ (
    .A(data_in[4]),
    .B(_143_),
    .Y(_152_)
  );
  NAND _385_ (
    .A(_151_),
    .B(_152_),
    .Y(_022_)
  );
  NAND _386_ (
    .A(\mem[3] [5]),
    .B(_141_),
    .Y(_153_)
  );
  NAND _387_ (
    .A(data_in[5]),
    .B(_143_),
    .Y(_154_)
  );
  NAND _388_ (
    .A(_153_),
    .B(_154_),
    .Y(_023_)
  );
  NOR _389_ (
    .A(ptr_read[0]),
    .B(\mem[2] [0]),
    .Y(_155_)
  );
  NAND _390_ (
    .A(ptr_read[0]),
    .B(_183_),
    .Y(_156_)
  );
  NAND _391_ (
    .A(ptr_read[1]),
    .B(_156_),
    .Y(_157_)
  );
  NOR _392_ (
    .A(_155_),
    .B(_157_),
    .Y(_158_)
  );
  NAND _393_ (
    .A(\mem[1] [0]),
    .B(ptr_read[0]),
    .Y(_159_)
  );
  NOT _394_ (
    .A(_159_),
    .Y(_160_)
  );
  NOR _395_ (
    .A(_170_),
    .B(ptr_read[0]),
    .Y(_161_)
  );
  NOR _396_ (
    .A(_160_),
    .B(_161_),
    .Y(_162_)
  );
  NOR _397_ (
    .A(ptr_read[1]),
    .B(_162_),
    .Y(_163_)
  );
  NOR _398_ (
    .A(_158_),
    .B(_163_),
    .Y(_164_)
  );
  NOR _399_ (
    .A(_165_),
    .B(_164_),
    .Y(data_out[0])
  );
  DFF _400_ (
    .C(clk),
    .D(_000_),
    .Q(\mem[0] [0])
  );
  DFF _401_ (
    .C(clk),
    .D(_001_),
    .Q(\mem[0] [1])
  );
  DFF _402_ (
    .C(clk),
    .D(_002_),
    .Q(\mem[0] [2])
  );
  DFF _403_ (
    .C(clk),
    .D(_003_),
    .Q(\mem[0] [3])
  );
  DFF _404_ (
    .C(clk),
    .D(_004_),
    .Q(\mem[0] [4])
  );
  DFF _405_ (
    .C(clk),
    .D(_005_),
    .Q(\mem[0] [5])
  );
  DFF _406_ (
    .C(clk),
    .D(_006_),
    .Q(\mem[1] [0])
  );
  DFF _407_ (
    .C(clk),
    .D(_007_),
    .Q(\mem[1] [1])
  );
  DFF _408_ (
    .C(clk),
    .D(_008_),
    .Q(\mem[1] [2])
  );
  DFF _409_ (
    .C(clk),
    .D(_009_),
    .Q(\mem[1] [3])
  );
  DFF _410_ (
    .C(clk),
    .D(_010_),
    .Q(\mem[1] [4])
  );
  DFF _411_ (
    .C(clk),
    .D(_011_),
    .Q(\mem[1] [5])
  );
  DFF _412_ (
    .C(clk),
    .D(_012_),
    .Q(\mem[2] [0])
  );
  DFF _413_ (
    .C(clk),
    .D(_013_),
    .Q(\mem[2] [1])
  );
  DFF _414_ (
    .C(clk),
    .D(_014_),
    .Q(\mem[2] [2])
  );
  DFF _415_ (
    .C(clk),
    .D(_015_),
    .Q(\mem[2] [3])
  );
  DFF _416_ (
    .C(clk),
    .D(_016_),
    .Q(\mem[2] [4])
  );
  DFF _417_ (
    .C(clk),
    .D(_017_),
    .Q(\mem[2] [5])
  );
  DFF _418_ (
    .C(clk),
    .D(_018_),
    .Q(\mem[3] [0])
  );
  DFF _419_ (
    .C(clk),
    .D(_019_),
    .Q(\mem[3] [1])
  );
  DFF _420_ (
    .C(clk),
    .D(_020_),
    .Q(\mem[3] [2])
  );
  DFF _421_ (
    .C(clk),
    .D(_021_),
    .Q(\mem[3] [3])
  );
  DFF _422_ (
    .C(clk),
    .D(_022_),
    .Q(\mem[3] [4])
  );
  DFF _423_ (
    .C(clk),
    .D(_023_),
    .Q(\mem[3] [5])
  );
  assign k = 32'd4;
endmodule

(* dynports =  1  *)
(* src = "mux_dst_est.v:1" *)
module \$paramod\mux_dst_est\BITNUMBER=6 (clk, reset, data_in0, data_in1, valid_VC0, valid_VC1, valid_out_dest, data_out_dest);
  (* src = "mux_dst_est.v:32" *)
  wire [5:0] _00_;
  (* src = "mux_dst_est.v:32" *)
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  wire _29_;
  wire _30_;
  wire _31_;
  wire _32_;
  wire _33_;
  wire _34_;
  (* src = "mux_dst_est.v:2" *)
  input clk;
  (* src = "mux_dst_est.v:4" *)
  input [5:0] data_in0;
  (* src = "mux_dst_est.v:5" *)
  input [5:0] data_in1;
  (* src = "mux_dst_est.v:9" *)
  output [5:0] data_out_dest;
  (* src = "mux_dst_est.v:3" *)
  input reset;
  (* src = "mux_dst_est.v:6" *)
  input valid_VC0;
  (* src = "mux_dst_est.v:7" *)
  input valid_VC1;
  (* src = "mux_dst_est.v:8" *)
  output valid_out_dest;
  NOT _35_ (
    .A(valid_VC0),
    .Y(_02_)
  );
  NOT _36_ (
    .A(data_in1[0]),
    .Y(_03_)
  );
  NOT _37_ (
    .A(data_in1[1]),
    .Y(_04_)
  );
  NOT _38_ (
    .A(data_in1[2]),
    .Y(_05_)
  );
  NOT _39_ (
    .A(data_in1[3]),
    .Y(_06_)
  );
  NOT _40_ (
    .A(data_in1[4]),
    .Y(_07_)
  );
  NOT _41_ (
    .A(data_in1[5]),
    .Y(_08_)
  );
  NAND _42_ (
    .A(valid_VC1),
    .B(_02_),
    .Y(_09_)
  );
  NOR _43_ (
    .A(_04_),
    .B(_09_),
    .Y(_10_)
  );
  NAND _44_ (
    .A(valid_VC0),
    .B(data_in0[1]),
    .Y(_11_)
  );
  NOT _45_ (
    .A(_11_),
    .Y(_12_)
  );
  NOR _46_ (
    .A(_10_),
    .B(_12_),
    .Y(_13_)
  );
  NOR _47_ (
    .A(reset),
    .B(_13_),
    .Y(_00_[1])
  );
  NOR _48_ (
    .A(_05_),
    .B(_09_),
    .Y(_14_)
  );
  NAND _49_ (
    .A(valid_VC0),
    .B(data_in0[2]),
    .Y(_15_)
  );
  NOT _50_ (
    .A(_15_),
    .Y(_16_)
  );
  NOR _51_ (
    .A(_14_),
    .B(_16_),
    .Y(_17_)
  );
  NOR _52_ (
    .A(reset),
    .B(_17_),
    .Y(_00_[2])
  );
  NOR _53_ (
    .A(_06_),
    .B(_09_),
    .Y(_18_)
  );
  NAND _54_ (
    .A(valid_VC0),
    .B(data_in0[3]),
    .Y(_19_)
  );
  NOT _55_ (
    .A(_19_),
    .Y(_20_)
  );
  NOR _56_ (
    .A(_18_),
    .B(_20_),
    .Y(_21_)
  );
  NOR _57_ (
    .A(reset),
    .B(_21_),
    .Y(_00_[3])
  );
  NOR _58_ (
    .A(_07_),
    .B(_09_),
    .Y(_22_)
  );
  NAND _59_ (
    .A(valid_VC0),
    .B(data_in0[4]),
    .Y(_23_)
  );
  NOT _60_ (
    .A(_23_),
    .Y(_24_)
  );
  NOR _61_ (
    .A(_22_),
    .B(_24_),
    .Y(_25_)
  );
  NOR _62_ (
    .A(reset),
    .B(_25_),
    .Y(_00_[4])
  );
  NOR _63_ (
    .A(_08_),
    .B(_09_),
    .Y(_26_)
  );
  NAND _64_ (
    .A(valid_VC0),
    .B(data_in0[5]),
    .Y(_27_)
  );
  NOT _65_ (
    .A(_27_),
    .Y(_28_)
  );
  NOR _66_ (
    .A(_26_),
    .B(_28_),
    .Y(_29_)
  );
  NOR _67_ (
    .A(reset),
    .B(_29_),
    .Y(_00_[5])
  );
  NOR _68_ (
    .A(valid_VC1),
    .B(valid_VC0),
    .Y(_30_)
  );
  NOR _69_ (
    .A(reset),
    .B(_30_),
    .Y(_01_)
  );
  NOR _70_ (
    .A(_03_),
    .B(_09_),
    .Y(_31_)
  );
  NAND _71_ (
    .A(valid_VC0),
    .B(data_in0[0]),
    .Y(_32_)
  );
  NOT _72_ (
    .A(_32_),
    .Y(_33_)
  );
  NOR _73_ (
    .A(_31_),
    .B(_33_),
    .Y(_34_)
  );
  NOR _74_ (
    .A(reset),
    .B(_34_),
    .Y(_00_[0])
  );
  (* src = "mux_dst_est.v:32" *)
  DFF _75_ (
    .C(clk),
    .D(_01_),
    .Q(valid_out_dest)
  );
  (* src = "mux_dst_est.v:32" *)
  DFF _76_ (
    .C(clk),
    .D(_00_[0]),
    .Q(data_out_dest[0])
  );
  (* src = "mux_dst_est.v:32" *)
  DFF _77_ (
    .C(clk),
    .D(_00_[1]),
    .Q(data_out_dest[1])
  );
  (* src = "mux_dst_est.v:32" *)
  DFF _78_ (
    .C(clk),
    .D(_00_[2]),
    .Q(data_out_dest[2])
  );
  (* src = "mux_dst_est.v:32" *)
  DFF _79_ (
    .C(clk),
    .D(_00_[3]),
    .Q(data_out_dest[3])
  );
  (* src = "mux_dst_est.v:32" *)
  DFF _80_ (
    .C(clk),
    .D(_00_[4]),
    .Q(data_out_dest[4])
  );
  (* src = "mux_dst_est.v:32" *)
  DFF _81_ (
    .C(clk),
    .D(_00_[5]),
    .Q(data_out_dest[5])
  );
endmodule

(* dynports =  1  *)
(* src = "demux_id_est.v:1" *)
module demux_id_est(Fifo_Data_out, clk, reset, valid_read, demux_t_esto_VC0, demux_t_esto_VC1, Fifo_wr0, Fifo_wr1);
  (* src = "demux_id_est.v:13" *)
  wire _00_;
  (* src = "demux_id_est.v:13" *)
  wire _01_;
  (* src = "demux_id_est.v:13" *)
  wire [5:0] _02_;
  (* src = "demux_id_est.v:13" *)
  wire [5:0] _03_;
  wire _04_;
  wire _05_;
  wire _06_;
  wire _07_;
  wire _08_;
  wire _09_;
  wire _10_;
  wire _11_;
  wire _12_;
  wire _13_;
  wire _14_;
  wire _15_;
  wire _16_;
  wire _17_;
  wire _18_;
  wire _19_;
  wire _20_;
  wire _21_;
  wire _22_;
  wire _23_;
  wire _24_;
  wire _25_;
  wire _26_;
  wire _27_;
  wire _28_;
  (* src = "demux_id_est.v:3" *)
  input [5:0] Fifo_Data_out;
  (* src = "demux_id_est.v:9" *)
  output Fifo_wr0;
  (* src = "demux_id_est.v:10" *)
  output Fifo_wr1;
  (* src = "demux_id_est.v:4" *)
  input clk;
  (* src = "demux_id_est.v:7" *)
  output [5:0] demux_t_esto_VC0;
  (* src = "demux_id_est.v:8" *)
  output [5:0] demux_t_esto_VC1;
  (* src = "demux_id_est.v:5" *)
  input reset;
  (* src = "demux_id_est.v:6" *)
  input valid_read;
  NOT _29_ (
    .A(reset),
    .Y(_04_)
  );
  NOT _30_ (
    .A(Fifo_Data_out[5]),
    .Y(_05_)
  );
  NAND _31_ (
    .A(valid_read),
    .B(_04_),
    .Y(_06_)
  );
  NOR _32_ (
    .A(Fifo_Data_out[5]),
    .B(_06_),
    .Y(_00_)
  );
  NOR _33_ (
    .A(_05_),
    .B(_06_),
    .Y(_01_)
  );
  NAND _34_ (
    .A(demux_t_esto_VC0[0]),
    .B(_01_),
    .Y(_07_)
  );
  NAND _35_ (
    .A(Fifo_Data_out[0]),
    .B(_00_),
    .Y(_08_)
  );
  NAND _36_ (
    .A(_07_),
    .B(_08_),
    .Y(_02_[0])
  );
  NAND _37_ (
    .A(Fifo_Data_out[1]),
    .B(_00_),
    .Y(_09_)
  );
  NAND _38_ (
    .A(demux_t_esto_VC0[1]),
    .B(_01_),
    .Y(_10_)
  );
  NAND _39_ (
    .A(_09_),
    .B(_10_),
    .Y(_02_[1])
  );
  NAND _40_ (
    .A(Fifo_Data_out[2]),
    .B(_00_),
    .Y(_11_)
  );
  NAND _41_ (
    .A(demux_t_esto_VC0[2]),
    .B(_01_),
    .Y(_12_)
  );
  NAND _42_ (
    .A(_11_),
    .B(_12_),
    .Y(_02_[2])
  );
  NAND _43_ (
    .A(Fifo_Data_out[3]),
    .B(_00_),
    .Y(_13_)
  );
  NAND _44_ (
    .A(demux_t_esto_VC0[3]),
    .B(_01_),
    .Y(_14_)
  );
  NAND _45_ (
    .A(_13_),
    .B(_14_),
    .Y(_02_[3])
  );
  NAND _46_ (
    .A(Fifo_Data_out[4]),
    .B(_00_),
    .Y(_15_)
  );
  NAND _47_ (
    .A(demux_t_esto_VC0[4]),
    .B(_01_),
    .Y(_16_)
  );
  NAND _48_ (
    .A(_15_),
    .B(_16_),
    .Y(_02_[4])
  );
  NAND _49_ (
    .A(demux_t_esto_VC0[5]),
    .B(_01_),
    .Y(_17_)
  );
  NOT _50_ (
    .A(_17_),
    .Y(_02_[5])
  );
  NAND _51_ (
    .A(demux_t_esto_VC1[0]),
    .B(_00_),
    .Y(_18_)
  );
  NAND _52_ (
    .A(Fifo_Data_out[0]),
    .B(_01_),
    .Y(_19_)
  );
  NAND _53_ (
    .A(_18_),
    .B(_19_),
    .Y(_03_[0])
  );
  NAND _54_ (
    .A(demux_t_esto_VC1[1]),
    .B(_00_),
    .Y(_20_)
  );
  NAND _55_ (
    .A(Fifo_Data_out[1]),
    .B(_01_),
    .Y(_21_)
  );
  NAND _56_ (
    .A(_20_),
    .B(_21_),
    .Y(_03_[1])
  );
  NAND _57_ (
    .A(demux_t_esto_VC1[2]),
    .B(_00_),
    .Y(_22_)
  );
  NAND _58_ (
    .A(Fifo_Data_out[2]),
    .B(_01_),
    .Y(_23_)
  );
  NAND _59_ (
    .A(_22_),
    .B(_23_),
    .Y(_03_[2])
  );
  NAND _60_ (
    .A(demux_t_esto_VC1[3]),
    .B(_00_),
    .Y(_24_)
  );
  NAND _61_ (
    .A(Fifo_Data_out[3]),
    .B(_01_),
    .Y(_25_)
  );
  NAND _62_ (
    .A(_24_),
    .B(_25_),
    .Y(_03_[3])
  );
  NAND _63_ (
    .A(demux_t_esto_VC1[4]),
    .B(_00_),
    .Y(_26_)
  );
  NAND _64_ (
    .A(Fifo_Data_out[4]),
    .B(_01_),
    .Y(_27_)
  );
  NAND _65_ (
    .A(_26_),
    .B(_27_),
    .Y(_03_[4])
  );
  NOR _66_ (
    .A(Fifo_Data_out[5]),
    .B(demux_t_esto_VC1[5]),
    .Y(_28_)
  );
  NOR _67_ (
    .A(_06_),
    .B(_28_),
    .Y(_03_[5])
  );
  (* src = "demux_id_est.v:13" *)
  DFF _68_ (
    .C(clk),
    .D(_03_[0]),
    .Q(demux_t_esto_VC1[0])
  );
  (* src = "demux_id_est.v:13" *)
  DFF _69_ (
    .C(clk),
    .D(_03_[1]),
    .Q(demux_t_esto_VC1[1])
  );
  (* src = "demux_id_est.v:13" *)
  DFF _70_ (
    .C(clk),
    .D(_03_[2]),
    .Q(demux_t_esto_VC1[2])
  );
  (* src = "demux_id_est.v:13" *)
  DFF _71_ (
    .C(clk),
    .D(_03_[3]),
    .Q(demux_t_esto_VC1[3])
  );
  (* src = "demux_id_est.v:13" *)
  DFF _72_ (
    .C(clk),
    .D(_03_[4]),
    .Q(demux_t_esto_VC1[4])
  );
  (* src = "demux_id_est.v:13" *)
  DFF _73_ (
    .C(clk),
    .D(_03_[5]),
    .Q(demux_t_esto_VC1[5])
  );
  (* src = "demux_id_est.v:13" *)
  DFF _74_ (
    .C(clk),
    .D(_02_[0]),
    .Q(demux_t_esto_VC0[0])
  );
  (* src = "demux_id_est.v:13" *)
  DFF _75_ (
    .C(clk),
    .D(_02_[1]),
    .Q(demux_t_esto_VC0[1])
  );
  (* src = "demux_id_est.v:13" *)
  DFF _76_ (
    .C(clk),
    .D(_02_[2]),
    .Q(demux_t_esto_VC0[2])
  );
  (* src = "demux_id_est.v:13" *)
  DFF _77_ (
    .C(clk),
    .D(_02_[3]),
    .Q(demux_t_esto_VC0[3])
  );
  (* src = "demux_id_est.v:13" *)
  DFF _78_ (
    .C(clk),
    .D(_02_[4]),
    .Q(demux_t_esto_VC0[4])
  );
  (* src = "demux_id_est.v:13" *)
  DFF _79_ (
    .C(clk),
    .D(_02_[5]),
    .Q(demux_t_esto_VC0[5])
  );
  (* src = "demux_id_est.v:13" *)
  DFF _80_ (
    .C(clk),
    .D(_00_),
    .Q(Fifo_wr0)
  );
  (* src = "demux_id_est.v:13" *)
  DFF _81_ (
    .C(clk),
    .D(_01_),
    .Q(Fifo_wr1)
  );
endmodule

(* dynports =  1  *)
(* top =  1  *)
(* src = "pcie_trans_est.v:6" *)
module pcie_trans_est(data_in, clk, reset, push, pop_D0, pop_D1, Umbral_MF_prob, Umbral_VC_prob, Umbral_D_prob, init, data_out0_est, data_out1_est, D0_can_pop_est, D1_can_pop_est, Main_pause_est, state_est, next_state_est);
  wire _00_;
  wire _01_;
  wire _02_;
  wire _03_;
  wire _04_;
  (* src = "pcie_trans_est.v:32" *)
  (* unused_bits = "0" *)
  wire D0_almost_empty;
  (* src = "pcie_trans_est.v:32" *)
  (* unused_bits = "0" *)
  wire D0_almost_full;
  (* src = "pcie_trans_est.v:20" *)
  output D0_can_pop_est;
  (* src = "pcie_trans_est.v:32" *)
  wire D0_empty;
  (* src = "pcie_trans_est.v:32" *)
  wire D0_error;
  (* src = "pcie_trans_est.v:32" *)
  (* unused_bits = "0" *)
  wire D0_full;
  (* src = "pcie_trans_est.v:32" *)
  wire D0_pause;
  (* src = "pcie_trans_est.v:32" *)
  (* unused_bits = "0" *)
  wire D0_rd_error;
  (* src = "pcie_trans_est.v:32" *)
  (* unused_bits = "0" *)
  wire D0_valid_read;
  (* src = "pcie_trans_est.v:32" *)
  (* unused_bits = "0" *)
  wire D0_wr_error;
  (* src = "pcie_trans_est.v:33" *)
  (* unused_bits = "0" *)
  wire D1_almost_empty;
  (* src = "pcie_trans_est.v:33" *)
  (* unused_bits = "0" *)
  wire D1_almost_full;
  (* src = "pcie_trans_est.v:21" *)
  output D1_can_pop_est;
  (* src = "pcie_trans_est.v:33" *)
  wire D1_empty;
  (* src = "pcie_trans_est.v:33" *)
  wire D1_error;
  (* src = "pcie_trans_est.v:33" *)
  (* unused_bits = "0" *)
  wire D1_full;
  (* src = "pcie_trans_est.v:33" *)
  wire D1_pause;
  (* src = "pcie_trans_est.v:33" *)
  (* unused_bits = "0" *)
  wire D1_rd_error;
  (* src = "pcie_trans_est.v:33" *)
  (* unused_bits = "0" *)
  wire D1_valid_read;
  (* src = "pcie_trans_est.v:33" *)
  (* unused_bits = "0" *)
  wire D1_wr_error;
  (* src = "pcie_trans_est.v:37" *)
  wire [4:0] Fifo_empties;
  (* src = "pcie_trans_est.v:37" *)
  wire [4:0] Fifo_error;
  (* src = "pcie_trans_est.v:36" *)
  wire [5:0] Main_Fifo_Data_out;
  (* src = "pcie_trans_est.v:29" *)
  wire Main_Fifo_error;
  (* src = "pcie_trans_est.v:29" *)
  (* unused_bits = "0" *)
  wire Main_Fifo_rd_error;
  (* src = "pcie_trans_est.v:29" *)
  (* unused_bits = "0" *)
  wire Main_Fifo_wr_error;
  (* src = "pcie_trans_est.v:29" *)
  (* unused_bits = "0" *)
  wire Main_almost_empty;
  (* src = "pcie_trans_est.v:29" *)
  (* unused_bits = "0" *)
  wire Main_almost_full;
  (* src = "pcie_trans_est.v:29" *)
  (* unused_bits = "0" *)
  wire Main_can_pop;
  (* src = "pcie_trans_est.v:29" *)
  wire Main_fifo_est_empty;
  (* src = "pcie_trans_est.v:29" *)
  (* unused_bits = "0" *)
  wire Main_fifo_est_full;
  (* src = "pcie_trans_est.v:22" *)
  output Main_pause_est;
  (* src = "pcie_trans_est.v:29" *)
  wire Main_valid_read;
  (* src = "pcie_trans_est.v:36" *)
  wire [5:0] Mux_out;
  (* src = "pcie_trans_est.v:34" *)
  wire Mux_valid;
  (* src = "pcie_trans_est.v:38" *)
  wire [3:0] Umbral_D;
  (* src = "pcie_trans_est.v:16" *)
  input [3:0] Umbral_D_prob;
  (* src = "pcie_trans_est.v:38" *)
  wire [3:0] Umbral_MF;
  (* src = "pcie_trans_est.v:14" *)
  input [3:0] Umbral_MF_prob;
  (* src = "pcie_trans_est.v:38" *)
  wire [3:0] Umbral_VC;
  (* src = "pcie_trans_est.v:15" *)
  input [3:0] Umbral_VC_prob;
  (* src = "pcie_trans_est.v:36" *)
  wire [5:0] VC0_Data_out;
  (* src = "pcie_trans_est.v:30" *)
  (* unused_bits = "0" *)
  wire VC0_almost_empty;
  (* src = "pcie_trans_est.v:30" *)
  (* unused_bits = "0" *)
  wire VC0_almost_full;
  (* src = "pcie_trans_est.v:30" *)
  (* unused_bits = "0" *)
  wire VC0_can_pop;
  (* src = "pcie_trans_est.v:30" *)
  wire VC0_empty;
  (* src = "pcie_trans_est.v:30" *)
  wire VC0_error;
  (* src = "pcie_trans_est.v:30" *)
  (* unused_bits = "0" *)
  wire VC0_full;
  (* src = "pcie_trans_est.v:30" *)
  wire VC0_pause;
  (* src = "pcie_trans_est.v:30" *)
  (* unused_bits = "0" *)
  wire VC0_rd_error;
  (* src = "pcie_trans_est.v:30" *)
  wire VC0_valid_read;
  (* src = "pcie_trans_est.v:30" *)
  (* unused_bits = "0" *)
  wire VC0_wr_error;
  (* src = "pcie_trans_est.v:36" *)
  wire [5:0] VC1_Data_out;
  (* src = "pcie_trans_est.v:31" *)
  (* unused_bits = "0" *)
  wire VC1_almost_empty;
  (* src = "pcie_trans_est.v:31" *)
  (* unused_bits = "0" *)
  wire VC1_almost_full;
  (* src = "pcie_trans_est.v:31" *)
  (* unused_bits = "0" *)
  wire VC1_can_pop;
  (* src = "pcie_trans_est.v:31" *)
  wire VC1_empty;
  (* src = "pcie_trans_est.v:31" *)
  wire VC1_error;
  (* src = "pcie_trans_est.v:31" *)
  (* unused_bits = "0" *)
  wire VC1_full;
  (* src = "pcie_trans_est.v:31" *)
  wire VC1_pause;
  (* src = "pcie_trans_est.v:31" *)
  (* unused_bits = "0" *)
  wire VC1_rd_error;
  (* src = "pcie_trans_est.v:31" *)
  wire VC1_valid_read;
  (* src = "pcie_trans_est.v:31" *)
  (* unused_bits = "0" *)
  wire VC1_wr_error;
  (* src = "pcie_trans_est.v:39" *)
  (* unused_bits = "0" *)
  wire active_out;
  (* src = "pcie_trans_est.v:9" *)
  input clk;
  (* src = "pcie_trans_est.v:8" *)
  input [5:0] data_in;
  (* src = "pcie_trans_est.v:18" *)
  output [5:0] data_out0_est;
  (* src = "pcie_trans_est.v:19" *)
  output [5:0] data_out1_est;
  (* src = "pcie_trans_est.v:36" *)
  wire [5:0] demux_t_esto_D0;
  (* src = "pcie_trans_est.v:36" *)
  wire [5:0] demux_t_esto_D1;
  (* src = "pcie_trans_est.v:36" *)
  wire [5:0] demux_t_esto_VC0;
  (* src = "pcie_trans_est.v:36" *)
  wire [5:0] demux_t_esto_VC1;
  (* src = "pcie_trans_est.v:39" *)
  (* unused_bits = "0" *)
  wire error_out;
  (* src = "pcie_trans_est.v:39" *)
  (* unused_bits = "0" *)
  wire idle_out;
  (* src = "pcie_trans_est.v:17" *)
  input init;
  (* src = "pcie_trans_est.v:187" *)
  (* unused_bits = "0" *)
  wire init_out;
  (* src = "pcie_trans_est.v:24" *)
  output [3:0] next_state_est;
  (* src = "pcie_trans_est.v:12" *)
  input pop_D0;
  (* src = "pcie_trans_est.v:13" *)
  input pop_D1;
  (* src = "pcie_trans_est.v:35" *)
  wire pop_VC0;
  (* src = "pcie_trans_est.v:35" *)
  wire pop_VC1;
  (* src = "pcie_trans_est.v:35" *)
  wire pop_main;
  (* src = "pcie_trans_est.v:11" *)
  input push;
  (* src = "pcie_trans_est.v:35" *)
  wire push_D0;
  (* src = "pcie_trans_est.v:35" *)
  wire push_D1;
  (* src = "pcie_trans_est.v:35" *)
  wire push_VC0;
  (* src = "pcie_trans_est.v:35" *)
  wire push_VC1;
  (* src = "pcie_trans_est.v:10" *)
  input reset;
  (* src = "pcie_trans_est.v:23" *)
  output [3:0] state_est;
  NOR _05_ (
    .A(Main_fifo_est_empty),
    .B(VC0_pause),
    .Y(_00_)
  );
  NOT _06_ (
    .A(_00_),
    .Y(_01_)
  );
  NOR _07_ (
    .A(VC1_pause),
    .B(_01_),
    .Y(pop_main)
  );
  NOR _08_ (
    .A(D0_pause),
    .B(D1_pause),
    .Y(_02_)
  );
  NOT _09_ (
    .A(_02_),
    .Y(_03_)
  );
  NOR _10_ (
    .A(VC0_empty),
    .B(_03_),
    .Y(pop_VC0)
  );
  NAND _11_ (
    .A(VC0_empty),
    .B(_02_),
    .Y(_04_)
  );
  NOR _12_ (
    .A(VC1_empty),
    .B(_04_),
    .Y(pop_VC1)
  );
  (* src = "pcie_trans_est.v:143" *)
  \$paramod\fifo_est\BITNUMBER=6\LENGTH=4  D0_ (
    .Fifo_Data_in(demux_t_esto_D0),
    .Fifo_Data_out(data_out0_est),
    .Fifo_empty(D0_empty),
    .Fifo_error(D0_wr_error),
    .Fifo_full(D0_full),
    .Fifo_rd(pop_D0),
    .Fifo_rd_error(D0_rd_error),
    .Fifo_wr(push_D0),
    .Fifo_wr_error(D0_error),
    .Umbral(Umbral_D),
    .almost_empty(D0_almost_empty),
    .almost_full(D0_almost_full),
    .can_pop(D0_can_pop_est),
    .clk(clk),
    .pause(D0_pause),
    .reset(reset),
    .valid_read(D0_valid_read)
  );
  (* src = "pcie_trans_est.v:164" *)
  \$paramod\fifo_est\BITNUMBER=6\LENGTH=4  D1_ (
    .Fifo_Data_in(demux_t_esto_D1),
    .Fifo_Data_out(data_out1_est),
    .Fifo_empty(D1_empty),
    .Fifo_error(D1_wr_error),
    .Fifo_full(D1_full),
    .Fifo_rd(pop_D1),
    .Fifo_rd_error(D1_rd_error),
    .Fifo_wr(push_D1),
    .Fifo_wr_error(D1_error),
    .Umbral(Umbral_D),
    .almost_empty(D1_almost_empty),
    .almost_full(D1_almost_full),
    .can_pop(D1_can_pop_est),
    .clk(clk),
    .pause(D1_pause),
    .reset(reset),
    .valid_read(D1_valid_read)
  );
  (* src = "pcie_trans_est.v:43" *)
  \$paramod\fifo_est\BITNUMBER=6\LENGTH=4  Main_fifo_est_ (
    .Fifo_Data_in(data_in),
    .Fifo_Data_out(Main_Fifo_Data_out),
    .Fifo_empty(Main_fifo_est_empty),
    .Fifo_error(Main_Fifo_error),
    .Fifo_full(Main_fifo_est_full),
    .Fifo_rd(pop_main),
    .Fifo_rd_error(Main_Fifo_rd_error),
    .Fifo_wr(push),
    .Fifo_wr_error(Main_Fifo_wr_error),
    .Umbral(Umbral_MF),
    .almost_empty(Main_almost_empty),
    .almost_full(Main_almost_full),
    .can_pop(Main_can_pop),
    .clk(clk),
    .pause(Main_pause_est),
    .reset(reset),
    .valid_read(Main_valid_read)
  );
  (* src = "pcie_trans_est.v:119" *)
  \$paramod\mux_dst_est\BITNUMBER=6  Mux_ (
    .clk(clk),
    .data_in0(VC0_Data_out),
    .data_in1(VC1_Data_out),
    .data_out_dest(Mux_out),
    .reset(reset),
    .valid_VC0(VC0_valid_read),
    .valid_VC1(VC1_valid_read),
    .valid_out_dest(Mux_valid)
  );
  (* src = "pcie_trans_est.v:77" *)
  \$paramod\fifo_est\BITNUMBER=6\LENGTH=16  VC0_ (
    .Fifo_Data_in(demux_t_esto_VC0),
    .Fifo_Data_out(VC0_Data_out),
    .Fifo_empty(VC0_empty),
    .Fifo_error(VC0_error),
    .Fifo_full(VC0_full),
    .Fifo_rd(pop_VC0),
    .Fifo_rd_error(VC0_rd_error),
    .Fifo_wr(push_VC0),
    .Fifo_wr_error(VC0_wr_error),
    .Umbral(Umbral_VC),
    .almost_empty(VC0_almost_empty),
    .almost_full(VC0_almost_full),
    .can_pop(VC0_can_pop),
    .clk(clk),
    .pause(VC0_pause),
    .reset(reset),
    .valid_read(VC0_valid_read)
  );
  (* src = "pcie_trans_est.v:98" *)
  \$paramod\fifo_est\BITNUMBER=6\LENGTH=16  VC1_ (
    .Fifo_Data_in(demux_t_esto_VC1),
    .Fifo_Data_out(VC1_Data_out),
    .Fifo_empty(VC1_empty),
    .Fifo_error(VC1_error),
    .Fifo_full(VC1_full),
    .Fifo_rd(pop_VC1),
    .Fifo_rd_error(VC1_rd_error),
    .Fifo_wr(push_VC1),
    .Fifo_wr_error(VC1_wr_error),
    .Umbral(Umbral_VC),
    .almost_empty(VC1_almost_empty),
    .almost_full(VC1_almost_full),
    .can_pop(VC1_can_pop),
    .clk(clk),
    .pause(VC1_pause),
    .reset(reset),
    .valid_read(VC1_valid_read)
  );
  (* src = "pcie_trans_est.v:131" *)
  \$paramod\demux_t_est\BITNUMBER=6  demux_ (
    .Mux_out(Mux_out),
    .Mux_valid(Mux_valid),
    .clk(clk),
    .data_D0(demux_t_esto_D0),
    .data_D1(demux_t_esto_D1),
    .push_D0(push_D0),
    .push_D1(push_D1),
    .reset(reset)
  );
  (* module_not_derived = 32'd1 *)
  (* src = "pcie_trans_est.v:64" *)
  demux_id_est demux_id_est_ (
    .Fifo_Data_out(Main_Fifo_Data_out),
    .Fifo_wr0(push_VC0),
    .Fifo_wr1(push_VC1),
    .clk(clk),
    .demux_t_esto_VC0(demux_t_esto_VC0),
    .demux_t_esto_VC1(demux_t_esto_VC1),
    .reset(reset),
    .valid_read(Main_valid_read)
  );
  (* src = "pcie_trans_est.v:185" *)
  \$paramod\maquina\LENGTH=4  maquina_ (
    .Fifo_empties({ D1_empty, D0_empty, VC1_empty, VC0_empty, Main_fifo_est_empty }),
    .Fifo_errors({ D1_error, D0_error, VC1_error, VC0_error, Main_Fifo_error }),
    .active_out(active_out),
    .clk(clk),
    .error_out(error_out),
    .idle_out(idle_out),
    .init(init),
    .init_out(init_out),
    .next_state_est(next_state_est),
    .reset(reset),
    .state_est(state_est),
    .umbralD(Umbral_D_prob),
    .umbralD_out(Umbral_D),
    .umbralMF(Umbral_MF_prob),
    .umbralMF_out(Umbral_MF),
    .umbralVC(Umbral_VC_prob),
    .umbralVC_out(Umbral_VC)
  );
  assign Fifo_empties = { D1_empty, D0_empty, VC1_empty, VC0_empty, Main_fifo_est_empty };
  assign Fifo_error = { D1_error, D0_error, VC1_error, VC0_error, Main_Fifo_error };
endmodule
